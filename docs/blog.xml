<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>ng&#39;ara</title>
<link>https://lugoga.github.io/semba-quarto/blog.html</link>
<atom:link href="https://lugoga.github.io/semba-quarto/blog.xml" rel="self" type="application/rss+xml"/>
<description>Coding for all for better today and tommorow</description>
<generator>quarto-1.2.269</generator>
<lastBuildDate>Wed, 22 Feb 2023 21:00:00 GMT</lastBuildDate>
<item>
  <title>plotting in Python with Seaborn: bar plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="www.ims.org.tz">part I</a> of this series, we were introduced on the power visualization and dove into distributions plot. In this post we are going learn barplot. The bar plot is used to capture the relationship between a categorical and numerical column. For each unique value in a categorical column, a bar is plotted, which by default, displays the mean value for the data in a numeric column specified by the bar plot. Seaborn has nifty function called <code>barplot()</code>, which is dedicated for this type of plot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;">"penguins"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that is made up of various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains seven variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year.</p>
<p>Next, we will call the <code>barplot()</code> function from the Seaborn library to plot a bar plot that displays the average length of penguin species.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb5-2">sns.barplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"species"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>)</span>
<span id="cb5-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Average length by island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The Figure&nbsp;1 shows that the average length of penguins from the three island. We can parse an argument <code>hue = "sex"</code> to stack the plot as Figure&nbsp;2 shows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"></span>
<span id="cb6-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb6-3">sns.barplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"species"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"sex"</span>)</span>
<span id="cb6-4">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Traceback (most recent call last):
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\backends\backend_qt5.py", line 475, in _draw_idle
    self.draw()
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\backends\backend_agg.py", line 406, in draw
    self.figure.draw(self.renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 74, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\figure.py", line 2790, in draw
    mimage._draw_list_compositing_images(
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\_api\deprecation.py", line 431, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axes\_base.py", line 2881, in draw
    self._update_title_position(renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axes\_base.py", line 2810, in _update_title_position
    if (ax.xaxis.get_ticks_position() in ['top', 'unknown']
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axis.py", line 2234, in get_ticks_position
    self._get_ticks_position()]
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axis.py", line 1938, in _get_ticks_position
    major = self.majorTicks[0]
IndexError: list index out of range</code></pre>
</div>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index_files/figure-html/fig-fig2-3.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Average length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index.html</guid>
  <pubDate>Wed, 22 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/barplot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: Joint plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="www.ims.org.tz">part I</a> of this series, we were introduced on the power visualization and dove into distripubtion plot. In this post we are going focus on jointplot. <code>jointplot</code> is used to plot the histogram distribution of two columns, one on the <code>x-axis</code> and the other on the <code>y-axis</code>. A scatter plot is by default drawn for the points in the two columns. Seborn has nifty function called <code>jointplot()</code>, which is dedicated for this type of plot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;">"penguins"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that is made up of various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains seven variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year.</p>
<p>The joint plot is used to plot the histogram distribution of two columns, one on the x-axis and the other on the y-axis. A scatter plot is by default drawn for the points in the two columns. To plot a joint plot, you need to call the <code>jointplot()</code> function. The following script plots a joint plot for <code>bill_length_mm</code> and <code>bill_depth_mm</code> columns of the df dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb5-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_depth_mm"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005A834D00&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Assigning a hue variable will add conditional colors to the scatter plot and draw separate density curves (using <code>kdeplot()</code>) on the marginal axes. In this case we specify <code>hue = "island"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb8-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005AF3A5E0&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-7-3.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Several different approaches to plotting are available through the kind parameter. Setting kind=“kde” will draw both bivariate and univariate KDEs:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb11-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"species"</span>, kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"kde"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005DA740A0&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-8-5.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Set <code>kind="reg"</code> to add a linear regression fit (using <code>regplot()</code>) and univariate KDE curves:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1"></span>
<span id="cb14-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb14-3">sns.jointplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_depth_mm"</span>, kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005DA74220&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-9-7.png" class="img-fluid" width="576"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb17-3">sns.jointplot(data<span class="op" style="color: #5E5E5E;">=</span>df, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"bill_depth_mm"</span>, kind<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"hex"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005E48A6D0&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-10-9.png" class="img-fluid" width="576"></p>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index.html</guid>
  <pubDate>Tue, 21 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/jointPlot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: Distribution plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Wikipedia <span class="citation" data-cites="dataviz">(2023)</span> describe data visualization as an interdisciplinary field that deals with the graphic representation of data and information. It is a particularly efficient way of communicating when the data are processed to generate information that is shared.</p>
<p>It is also the study of visual representations of abstract data to reinforce human cognition using common graphics, such as charts, plots, infographics, maps, and even animations. The abstract data include both numerical and non-numerical data, such as text and geographic information.</p>
<p>Furthermore, it is related to infographics and scientific visualization to identify important patterns in the data that can be used for organizational decision making. Visualizing data graphically can reveal trends that otherwise may remain hidden from the naked eye.</p>
<p>In the following is the series of post that focuse plotting with seaborn library in Python, we will learn the most commonly used plots using Seaborn library in Python <span class="citation" data-cites="waskom2021seaborn matplotlib">(Waskom 2021; Bisong and Bisong 2019)</span>. We will also touches on different types of plots using Maplotlib <span class="citation" data-cites="matplotlib">(Bisong and Bisong 2019)</span>, and Pandas <span class="citation" data-cites="pandas">(Betancourt et al. 2019)</span> libraries. In this post we will focus on the distplot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We first need to import the dataset from the package where is stored into the R session. let us load the packages that we are glint to use in this post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">pengr <span class="ot" style="color: #003B4F;">=</span> palmerpenguins<span class="sc" style="color: #5E5E5E;">::</span>penguins</span>
<span id="cb2-2">pengr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema~  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema~  2007
 4 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3        193    3450 fema~  2007
 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 7 Adelie  Torgersen           38.9          17.8        181    3625 fema~  2007
 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 9 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<p>Once the tibble file is in the environment, we need to convert from tibble data frame into pandas dataframe. Make a copy of pandas dataframe from tibble with the <code>r.</code> function. please note that the conversion of tibble data frame to pandas data frame must be inside the Python chunk as chunk below;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">pengp <span class="op" style="color: #5E5E5E;">=</span> r.pengr</span></code></pre></div>
</div>
<p>Let’s use <code>head</code> function to explore the first five rows on the converted penguin pandas data frame</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">pengp.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>The pengp dataset comprise various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains eight variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year. You do not need to download this dataset as it comes with the palmerpenguin library in R. We will use this dataset to plot some of the seaborn plots. Lets begin plotting</p>
<p>Alternatively, you can load the package as</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">df <span class="op" style="color: #5E5E5E;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;">"penguins"</span>)</span>
<span id="cb7-2"></span>
<span id="cb7-3">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  flipper_length_mm  body_mass_g     sex
0  Adelie  Torgersen            39.1  ...              181.0       3750.0    Male
1  Adelie  Torgersen            39.5  ...              186.0       3800.0  Female
2  Adelie  Torgersen            40.3  ...              195.0       3250.0  Female
3  Adelie  Torgersen             NaN  ...                NaN          NaN     NaN
4  Adelie  Torgersen            36.7  ...              193.0       3450.0  Female

[5 rows x 7 columns]</code></pre>
</div>
</div>
<section id="univariable-distribution" class="level3">
<h3 class="anchored" data-anchor-id="univariable-distribution">Univariable distribution</h3>
<p>The distplot, also commonly refers as the distribution plot, is widely used to plot a histogram of data for a specific variable in a dataset. To make this plot seaborn has a dedicated function called <code>displot</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb9-3"></span>
<span id="cb9-4">sns.displot(pengp.bill_length_mm)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb10-2">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb10-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-6-2.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>The new <code>displot</code> functions support the kernel density estimate line, by passing <code>kde=True</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1"></span>
<span id="cb11-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb11-3"></span>
<span id="cb11-4">sns.displot(pengp.bill_length_mm, kde <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-7-5.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb12-2">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb12-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-7-6.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>To change the distribution from counts to density, we simply parse an argument <code>stat="density"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1"></span>
<span id="cb13-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb13-3"></span>
<span id="cb13-4">sns.displot(pengp.bill_length_mm, kde <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>, stat <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"density"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-8-9.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb14-2">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb14-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-8-10.png" class="img-fluid" width="480"></p>
</div>
</div>
</section>
<section id="kdeplot" class="level3">
<h3 class="anchored" data-anchor-id="kdeplot">kdeplot</h3>
<p>When you want to draw the density plot alone without overlay it to the histogram as presented using the displot function, seaboarn has a <code>kdeplot</code> function</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1"></span>
<span id="cb15-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb15-3"></span>
<span id="cb15-4">sns.kdeplot(pengp.bill_length_mm)</span>
<span id="cb15-5">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb15-6">plt.ylabel(<span class="st" style="color: #20794D;">"Density"</span>)</span>
<span id="cb15-7">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-9-13.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>displot still can draw the kde plot, however, you need to parse an argument <code>kind="kde"</code> in displot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb16-3"></span>
<span id="cb16-4">sns.displot(pengp.bill_length_mm, kind <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"kde"</span>, rug <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-10-15.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb17-2">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb17-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-10-16.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>If you parse <code>rug = True</code> function, wll add the rug in the plots</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"></span>
<span id="cb18-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb18-3"></span>
<span id="cb18-4">sns.displot(pengp.bill_length_mm, kind <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"kde"</span>, rug <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-11-19.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb19-2">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb19-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-11-20.png" class="img-fluid" width="480"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1"></span>
<span id="cb20-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb20-3"></span>
<span id="cb20-4">aa <span class="op" style="color: #5E5E5E;">=</span> pengp[[<span class="st" style="color: #20794D;">"bill_length_mm"</span>, <span class="st" style="color: #20794D;">"bill_depth_mm"</span>]]</span>
<span id="cb20-5"></span>
<span id="cb20-6">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> aa)</span>
<span id="cb20-7">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb20-8">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb20-9">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-12-23.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Plot conditional distributions with hue mapping of a second variable. Unlike the previous plot, for this kind you need to specify the x-variable and the hue in the dataset;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1"></span>
<span id="cb21-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb21-3"></span>
<span id="cb21-4"></span>
<span id="cb21-5">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> pengp, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span>
<span id="cb21-6">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb21-7">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb21-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-13-25.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>Stack</code> the conditional distributions by simply parsing argument <code>multiple = "stack"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"></span>
<span id="cb22-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb22-3"></span>
<span id="cb22-4"></span>
<span id="cb22-5">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> pengp, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>, multiple <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"stack"</span>)</span>
<span id="cb22-6">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb22-7">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb22-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-14-27.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>multiple = "fill"</code> simply normalize the stacked distribution at each value in the grid</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1"></span>
<span id="cb23-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb23-3"></span>
<span id="cb23-4"></span>
<span id="cb23-5">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> pengp, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>, multiple <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"fill"</span>)</span>
<span id="cb23-6">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb23-7">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb23-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-15-29.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Estimate the cumulative distribution function(s), normalizing each subset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1"></span>
<span id="cb24-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb24-3"></span>
<span id="cb24-4"></span>
<span id="cb24-5">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> pengp, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>,  cumulative<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>, common_norm<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">False</span>, common_grid<span class="op" style="color: #5E5E5E;">=</span><span class="va" style="color: #111111;">True</span>)</span>
<span id="cb24-6">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb24-7">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb24-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-16-31.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="bivariate-distribution" class="level2">
<h2 class="anchored" data-anchor-id="bivariate-distribution">Bivariate distribution</h2>
<p>For bivariates, we are going to use <code>geyser</code> dataset. Old Faithful is a cone geyser in Yellowstone National Park in Wyoming, United States. It is a highly predictable geothermal feature and has erupted every 44 minutes to two hours since 2000. We do not need to download this dataset as it comes with the seaborn package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1">geyser <span class="op" style="color: #5E5E5E;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;">"geyser"</span>)</span>
<span id="cb25-2">geyser.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   duration  waiting   kind
0     3.600       79   long
1     1.800       54  short
2     3.333       74   long
3     2.283       62  short
4     4.533       85   long</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1"></span>
<span id="cb27-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb27-3"></span>
<span id="cb27-4">sns.kdeplot(data<span class="op" style="color: #5E5E5E;">=</span>geyser, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"duration"</span>)</span>
<span id="cb27-5">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Traceback (most recent call last):
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\backends\backend_qt5.py", line 475, in _draw_idle
    self.draw()
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\backends\backend_agg.py", line 406, in draw
    self.figure.draw(self.renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 74, in draw_wrapper
    result = draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\figure.py", line 2790, in draw
    mimage._draw_list_compositing_images(
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\image.py", line 132, in _draw_list_compositing_images
    a.draw(renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\artist.py", line 51, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\_api\deprecation.py", line 431, in wrapper
    return func(*inner_args, **inner_kwargs)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axes\_base.py", line 2881, in draw
    self._update_title_position(renderer)
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axes\_base.py", line 2810, in _update_title_position
    if (ax.xaxis.get_ticks_position() in ['top', 'unknown']
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axis.py", line 2234, in get_ticks_position
    self._get_ticks_position()]
  File "C:\PROGRA~3\ANACON~1\lib\site-packages\matplotlib\axis.py", line 1938, in _get_ticks_position
    major = self.majorTicks[0]
IndexError: list index out of range</code></pre>
</div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-18-33.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Map a third variable with a hue semantic to show conditional distributions:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1"></span>
<span id="cb29-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb29-3"></span>
<span id="cb29-4">sns.kdeplot(data<span class="op" style="color: #5E5E5E;">=</span>geyser, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"kind"</span>)</span>
<span id="cb29-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-19-35.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Fill the contour by parsing <code>fill = True</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1"></span>
<span id="cb30-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb30-3"></span>
<span id="cb30-4">sns.kdeplot(data<span class="op" style="color: #5E5E5E;">=</span>geyser, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"kind"</span>, fill <span class="op" style="color: #5E5E5E;">=</span> <span class="va" style="color: #111111;">True</span>)</span>
<span id="cb30-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-20-37.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Show fewer contour levels, covering less of the distribution by parsing a <code>levels</code> and <code>thresh</code> functions in the kdeplot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb31-1"></span>
<span id="cb31-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb31-3"></span>
<span id="cb31-4">sns.kdeplot(data<span class="op" style="color: #5E5E5E;">=</span>geyser, x<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"kind"</span>, levels <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">5</span>, thresh <span class="op" style="color: #5E5E5E;">=</span> <span class="fl" style="color: #AD0000;">.2</span>)</span>
<span id="cb31-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-21-39.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-pandas" class="csl-entry">
Betancourt, Randy, Sarah Chen, Randy Betancourt, and Sarah Chen. 2019. <span>“Pandas Library.”</span> <em>Python for SAS Users: A SAS-Oriented Introduction to Python</em>, 65–109.
</div>
<div id="ref-matplotlib" class="csl-entry">
Bisong, Ekaba, and Ekaba Bisong. 2019. <span>“Matplotlib and Seaborn.”</span> <em>Building Machine Learning and Deep Learning Models on Google Cloud Platform: A Comprehensive Guide for Beginners</em>, 151–65.
</div>
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
<div id="ref-waskom2021seaborn" class="csl-entry">
Waskom, Michael L. 2021. <span>“Seaborn: Statistical Data Visualization.”</span> <em>Journal of Open Source Software</em> 6 (60): 3021.
</div>
<div id="ref-dataviz" class="csl-entry">
Wikipedia contributors. 2023. <span>“Data and Information Visualization — <span>Wikipedia</span><span>,</span> the Free Encyclopedia.”</span> <a href="https://en.wikipedia.org/w/index.php?title=Data_and_information_visualization&amp;oldid=1137075465">https://en.wikipedia.org/w/index.php?title=Data_and_information_visualization&amp;oldid=1137075465</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index.html</guid>
  <pubDate>Mon, 20 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/displot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Multi-lingual: R and Python for Data Science</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/r_python/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>If you work with data science, <code>R</code> and <code>Python</code> must be the two programming languages that you use the most. Both <code>R</code> and <code>Python</code> are quite robust languages and either one of them is actually sufficient to carry out the data analysis task. However, instead of considering them as tools that supplement each other, more often you will find people dealing with data claim one language to be better than the other. Truth be told, <code>R</code> and <code>Python</code> are excellent tools in ther own right but are often conceived as rivals. One major reason for such view lies on the experts. Because data analysts have divided the data science field into camps based on the choice of the programming language they are familiar with.</p>
<p>There major two camps—<em>R camp</em> and <em>Python camp</em>—and history is the testimony that camps can not live in <em>harmony</em>. Members of both camps believe that their choice of language . Honestly, I do not hold to their opinion, but rather wish I have skills for both languages. So, whether you have in R or Python camp, one thing you will notice is that the problem we have in data science is simply that divergence does not lie with the tools but with the people using those tools.</p>
<p>I believe there are few people in the Data Science community who use both R and Python in their analytical workflow. But majority are committed to only one programming language, but wish they had access to some functions from other language. Therefore, there is no reason that hold us to stick using this programming language or the other. Our ultimate goal should be to do better analytics and derive better insights and choice of which programming language to use should not hinder us from reaching our goals.</p>
<p>The questions that always resolute in my mind is whether can we utilize the statistical power of R along with the programming capabilities of Python?. Its undeniable truth that there are definitely some high and low points for both languages and if we can utilize the strength of both, we can end up dong a much better job. Thanks to Kevin Ushey and his colleges <span class="citation" data-cites="reticulate">(2020)</span> for developing a reticulate package. <strong>reticulate</strong> package provides a comprehensive set of tools that allows to work with R and Python in the same environment. The <strong>reticulate</strong> package provide the following facilities;</p>
<ul>
<li><p>Calling Python from R in a variety of ways including <code>rmarkdown</code>, <code>sourcing</code>, <code>Python scripts</code>, importing Python modules and using Python interactively within and R session.</p></li>
<li><p>Translation between R and Python objects—for example <code>r_to_py</code> function allows to construct R to Pandas data frame and <code>py_to_r()</code> function convert python object like data frame, matrix and etc to R</p></li>
<li><p>Flexible binding to different versions of Python including virtual environments and conda environment.</p></li>
</ul>
</section>
<section id="tibble-to-pandas-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="tibble-to-pandas-dataframe">Tibble to Pandas Dataframe</h2>
<p>We are going to use a <code>penguin</code> dataset from <strong>palmerpenguins</strong> package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We first need to import the dataset from the package where is stored into the R session. let us load the packages that we are glint to use in this post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">require</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">require</span>(reticulate)</span></code></pre></div>
</div>
<p>Once we have loaded the package, we then import the dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">peng <span class="ot" style="color: #003B4F;">=</span> palmerpenguins<span class="sc" style="color: #5E5E5E;">::</span>penguins</span>
<span id="cb2-2">peng</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema~  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema~  2007
 4 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3        193    3450 fema~  2007
 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 7 Adelie  Torgersen           38.9          17.8        181    3625 fema~  2007
 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 9 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<p>The printed result suggest that this dataset is a <em>tibble</em> format—a modern data frame from the tidyverse ecosystem <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span>. Let’s visualize the dataset with pair plot in <strong>GGally</strong> package <span class="citation" data-cites="ggally">(Schloerke et al. 2020)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">peng <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">is.na</span>(sex)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-3">  GGally<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ggpairs</span>(<span class="at" style="color: #657422;">columns =</span> <span class="dv" style="color: #AD0000;">3</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">6</span>, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">color =</span> sex))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggpair" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-ggpair-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Matrix of numerical variable in the penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>However, our interest in this post is plotting this dataset using python. Therefore, we need to first import three key libraries that we will use throughtout this post. The chunk below highlight these packages and how to import them inside the python chunk.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;">import</span> pandas <span class="im" style="color: #00769E;">as</span> pd</span>
<span id="cb5-2"><span class="im" style="color: #00769E;">import</span> numpy <span class="im" style="color: #00769E;">as</span> np</span>
<span id="cb5-3"><span class="im" style="color: #00769E;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;">as</span> plt</span>
<span id="cb5-4"><span class="im" style="color: #00769E;">import</span> seaborn <span class="im" style="color: #00769E;">as</span> sns</span></code></pre></div>
</div>
<p>Once the tibble file is in the environment, we need to convert from tibble data frame into pandas dataframe. Make a copy of pandas dataframe from tible with the <code>r.</code> function</p>
<div class="callout-info callout callout-style-default no-icon callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Info
</div>
</div>
<div class="callout-body-container callout-body">
<p>note that conversion from tibble to pandas data frame must be done in the Python chunk and not R chunk</p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">peng <span class="op" style="color: #5E5E5E;">=</span> r.peng</span>
<span id="cb6-2">peng</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       species     island  bill_length_mm  ...  body_mass_g     sex  year
0       Adelie  Torgersen            39.1  ...         3750    male  2007
1       Adelie  Torgersen            39.5  ...         3800  female  2007
2       Adelie  Torgersen            40.3  ...         3250  female  2007
3       Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4       Adelie  Torgersen            36.7  ...         3450  female  2007
..         ...        ...             ...  ...          ...     ...   ...
339  Chinstrap      Dream            55.8  ...         4000    male  2009
340  Chinstrap      Dream            43.5  ...         3400  female  2009
341  Chinstrap      Dream            49.6  ...         3775    male  2009
342  Chinstrap      Dream            50.8  ...         4100    male  2009
343  Chinstrap      Dream            50.2  ...         3775  female  2009

[344 rows x 8 columns]</code></pre>
</div>
</div>
</section>
<section id="plotting" class="level2">
<h2 class="anchored" data-anchor-id="plotting">Plotting</h2>
<section id="pairplot" class="level3">
<h3 class="anchored" data-anchor-id="pairplot">Pairplot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb8-2">sns.pairplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-pairplot-1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-pairplot-1.png" class="img-fluid figure-img" width="680"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: The pairplot of penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-pairplot-2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-pairplot-2.png" class="img-fluid figure-img" width="1312"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: The pairplot of penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="scatter-plot" class="level3">
<h3 class="anchored" data-anchor-id="scatter-plot">Scatter plot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"></span>
<span id="cb10-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb10-3"></span>
<span id="cb10-4">sns.scatterplot(</span>
<span id="cb10-5">  data <span class="op" style="color: #5E5E5E;">=</span> peng, </span>
<span id="cb10-6">  x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, </span>
<span id="cb10-7">  y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, </span>
<span id="cb10-8">  hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span></span>
<span id="cb10-9">  )</span>
<span id="cb10-10">  </span>
<span id="cb10-11"></span>
<span id="cb10-12">plt.xlabel(<span class="st" style="color: #20794D;">"Length (mm)"</span>)</span>
<span id="cb10-13">plt.ylabel(<span class="st" style="color: #20794D;">"Depth (mm)"</span>)</span>
<span id="cb10-14">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"lower right"</span>)</span>
<span id="cb10-15">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scatter" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-scatter-5.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Scatterplot of length and depth of penguins</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="histogram" class="level3">
<h3 class="anchored" data-anchor-id="histogram">Histogram</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb11-2">sns.histplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"steelblue"</span>)</span>
<span id="cb11-3">plt.xlabel(<span class="st" style="color: #20794D;">"Bill depth (mm)"</span>)</span>
<span id="cb11-4">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb11-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-hist-7.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Histogram of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb12-2">sns.histplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Dream"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"steelblue"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Dream"</span>)</span>
<span id="cb12-3">sns.histplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Biscoe"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"darkorchid"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Biscoe"</span>)</span>
<span id="cb12-4">sns.histplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Torgersen"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"lightblue"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Torgersen"</span>)</span>
<span id="cb12-5">plt.xlabel(<span class="st" style="color: #20794D;">"Bill depth (mm)"</span>)</span>
<span id="cb12-6">plt.ylabel(<span class="st" style="color: #20794D;">"Frequency"</span>)</span>
<span id="cb12-7">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"upper right"</span>)</span>
<span id="cb12-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist-mult" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-hist-mult-9.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;6: Histogram of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>##3 Density</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb13-2">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, shade <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"steelblue"</span>)</span>
<span id="cb13-3">plt.axvline(<span class="fl" style="color: #AD0000;">43.40</span>, color<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"k"</span>, linestyle<span class="op" style="color: #5E5E5E;">=</span><span class="st" style="color: #20794D;">"--"</span>)</span>
<span id="cb13-4">plt.ylabel(<span class="st" style="color: #20794D;">"Density"</span>)</span>
<span id="cb13-5">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb13-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-dens" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-dens-11.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;7: Density distribution of of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The difference of bill length among the three species is interesting. Let’s look at the density plots of these species:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb14-2">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Adelie"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Adelie"</span>, shade <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"steelblue"</span>)</span>
<span id="cb14-3">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Chinstrap"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Chinstrap"</span>, shade <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"orange"</span>)</span>
<span id="cb14-4">sns.kdeplot(data <span class="op" style="color: #5E5E5E;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Gentoo"</span>], x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"Gentoo"</span>, shade <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"green"</span>)</span>
<span id="cb14-5">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"upper right"</span>)</span>
<span id="cb14-6">plt.xlabel(<span class="st" style="color: #20794D;">"Bill length (mm)"</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-density-mul" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-density-mul-13.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;8: Density plot of bill length by species</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="boxplot" class="level3">
<h3 class="anchored" data-anchor-id="boxplot">Boxplot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"></span>
<span id="cb15-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb15-3">sns.boxplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span>, y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span>
<span id="cb15-4">plt.xlabel(<span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb15-5">plt.ylabel(<span class="st" style="color: #20794D;">"Bill depth (mm)"</span>)</span>
<span id="cb15-6">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"lower right"</span>)</span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb15-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-box" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-box-15.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;9: Boxplot of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb16-3">sns.violinplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span>, y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span>
<span id="cb16-4">plt.xlabel(<span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb16-5">plt.ylabel(<span class="st" style="color: #20794D;">"Bill depth (mm)"</span>)</span>
<span id="cb16-6">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"lower right"</span>)</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb16-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-vio" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-vio-17.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;10: Violin plots of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2">fig <span class="op" style="color: #5E5E5E;">=</span> plt.figure()</span>
<span id="cb17-3">sns.violinplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span>, y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span>
<span id="cb17-4">sns.boxplot(data <span class="op" style="color: #5E5E5E;">=</span> peng, x <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"island"</span>, y <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"species"</span>)</span>
<span id="cb17-5">plt.xlabel(<span class="st" style="color: #20794D;">""</span>)</span>
<span id="cb17-6">plt.ylabel(<span class="st" style="color: #20794D;">"Bill depth (mm)"</span>)</span>
<span id="cb17-7">plt.legend(loc <span class="op" style="color: #5E5E5E;">=</span> <span class="st" style="color: #20794D;">"lower right"</span>)</span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb17-9">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-vio-box" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-vio-box-19.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;11: Violin and Boxplot of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="pandas-dataframe-to-tibble" class="level2">
<h2 class="anchored" data-anchor-id="pandas-dataframe-to-tibble">Pandas Dataframe to Tibble</h2>
<p>The power of multilingual is clearly demonstrated with Rstudio, which allows you to swap dataset between R and python. In the previous section we created a <code>peng</code> dataset in python from R. In this session we are going to use this python dataset and convert it back to R. A <code>py</code> function from <strong>reticulate</strong> package is used as the chunk below illustrates:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">peng.r <span class="ot" style="color: #003B4F;">=</span> reticulate<span class="sc" style="color: #5E5E5E;">::</span>py<span class="sc" style="color: #5E5E5E;">$</span>peng</span>
<span id="cb18-2">peng.r <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">as_tibble</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt;
 1 Adelie  Torgersen           39.1          18.7     1.81e2  3.75e3 male   2007
 2 Adelie  Torgersen           39.5          17.4     1.86e2  3.8 e3 fema~  2007
 3 Adelie  Torgersen           40.3          18       1.95e2  3.25e3 fema~  2007
 4 Adelie  Torgersen           NA            NA      -2.15e9 -2.15e9 &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3     1.93e2  3.45e3 fema~  2007
 6 Adelie  Torgersen           39.3          20.6     1.9 e2  3.65e3 male   2007
 7 Adelie  Torgersen           38.9          17.8     1.81e2  3.62e3 fema~  2007
 8 Adelie  Torgersen           39.2          19.6     1.95e2  4.68e3 male   2007
 9 Adelie  Torgersen           34.1          18.1     1.93e2  3.48e3 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2     1.9 e2  4.25e3 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<div class="callout-info callout callout-style-default no-icon callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Info
</div>
</div>
<div class="callout-body-container callout-body">
<p>note that conversion from pandas to tibble data frame must be done in the R chunk and not Python chunk</p>
</div>
</div>
</section>
<section id="cited-references" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited references</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
<div id="ref-ggally" class="csl-entry">
Schloerke, Barret, Jason Crowley, Di Cook, Francois Briatte, Moritz Marbach, Edwin Thoen, Amos Elberg, and Joseph Larmarange. 2020. <em>GGally: Extension to ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=GGally">https://CRAN.R-project.org/package=GGally</a>.
</div>
<div id="ref-reticulate" class="csl-entry">
Ushey, Kevin, JJ Allaire, and Yuan Tang. 2020. <em>Reticulate: Interface to ’Python’</em>. <a href="https://CRAN.R-project.org/package=reticulate">https://CRAN.R-project.org/package=reticulate</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/r_python/index.html</guid>
  <pubDate>Sun, 19 Feb 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Main and Inset maps with R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/inset_main_map/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="introduction">Introduction</h3>
<p>In this post, We learn how we can make publication quality inset maps in R using <code>ggplot2</code> package <span class="citation" data-cites="ggplot">(Wickham 2016)</span>. When publishing scientific research in journals or presenting research work at a conference, showing maps of data collection sites or experimental locations is one of the key visualization elements. Maps of study sites or sampling locations can help the audience and readers to fathom the data in a better way. Mapping sounds fancy, but it needs substantial training and skill set to make high-quality maps that are reader-friendly and visually aesthetic.</p>
<p>Sometimes, the study sites are more dispersed and are easy to visualize in large geographic areas. However, in some cases, study sites are clustered, which makes it hard to show them on a broader scale. In that case, inset maps help us show the locations with reference to familiar geographical regions. An inset map is a smaller map featured on the same page as the main map. Traditionally, inset maps are shown at a larger scale (smaller area) than the main map. Often, an inset map is used as a locator map that shows the area of the main map in a broader, more familiar geographical frame of reference.</p>
</section>
<section id="spatial-vector-data-storage" class="level3">
<h3 class="anchored" data-anchor-id="spatial-vector-data-storage">Spatial Vector Data Storage</h3>
<p>If you have been using the vector data and doing spatial analysis, you know shapefile. Shapefile is the most commonly used vector data formats to store data and carry out any spatial analysis.</p>
</section>
<section id="characteristics-of-a-shapefile" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="characteristics-of-a-shapefile">Characteristics of a shapefile</h3>
<p>Shapefiles are vector data storage models for storing feature classes composed of points, lines and polygons, but never a mixture. It stores information of the location, shape and attributes of geographical features. Each item in a shapefile has attributes that describe it composed of rows, called records and columns called fields and can also store multipart features, in which a single feature includes multiple objects which includes</p>
<ul>
<li><strong>.shp</strong> file stores coordinate data</li>
<li><strong>.dbf</strong> file stores attribute data</li>
<li><strong>.shx</strong> file stores a spatial index that speeds drawing and analysis</li>
<li><strong>.prj</strong> file stores projection information</li>
<li><strong>.avl</strong> file stores legend</li>
<li><strong>.xml</strong> file contains metadata</li>
</ul>
</section>
<section id="characteristics-of-a-shapefile-1" class="level3">
<h3 class="anchored" data-anchor-id="characteristics-of-a-shapefile-1">Characteristics of a shapefile</h3>
<ul>
<li>Takes up more storage space on your system</li>
<li>Shapefiles have a minimum size of 2GB</li>
<li>Do not support names in fields longer than 10 characters</li>
<li>A shapefile cannot have more than one geometry type in a file.</li>
<li>Cannot store data and time in the same field</li>
<li>Do not support raster files</li>
<li>Do not store NULL values in a field; when a value is NULL, a shapefile will use 0 instead.</li>
</ul>
<p>But, shapefile has a lot of disadvantages when you wish to scale your work and build integrated &amp; automated workflows for large-scale deployments. Geopackage format offers a variety of features in this regard. And that’s why you need to use Geopackage files instead of shapefile. Let’s dive deeper into the details.</p>
</section>
<section id="geopackage" class="level3">
<h3 class="anchored" data-anchor-id="geopackage">Geopackage</h3>
<p>A Geopackage is platform-independent format for storing and transferring geospatial information. It is a SQLite based standard format designed for stand-alone databases that holds both raster data and multiple vector data layers in a single file and can be accessible by non-GIS software.</p>
</section>
<section id="characteristics-of-a-geopackage" class="level3">
<h3 class="anchored" data-anchor-id="characteristics-of-a-geopackage">Characteristics of a Geopackage</h3>
<ul>
<li>Geopackages are open source, SQLite based database</li>
<li>No limitation on the file size and can handle large number of features</li>
<li>Can store both raster as well as vector data layers</li>
<li>A single Geopackage file can have multiple vector layers with each layer having a different geometry type.</li>
</ul>
</section>
<section id="why-choose-geopackages-and-not-shapefiles" class="level3">
<h3 class="anchored" data-anchor-id="why-choose-geopackages-and-not-shapefiles">Why choose Geopackages and not Shapefiles?</h3>
<ol type="1">
<li><p>Shapefile is a multi-file format with minimum of 3 files and several other attached files with different extensions. Sharing a shapefile with someone would be complicated as all the other files attached will also have to be shared. Whereas, Geopackages includes all the information of the layer in a file and is easier to transfer or share.</p></li>
<li><p>Compared to shapefiles, the column headers in a geopackage can be full names and right by providing the correct context for each column. A shapefile can only have 10 characters to define the column header.</p></li>
<li><p>Geopackages run faster on algorithm outputs compared to shapefiles.</p></li>
<li><p>In a geopackage, there is no limit on the file size and can handle large number of features in a smaller file size. A shapefile can handle maximum size of 2 GB and cannot export a vector layer with more features.</p></li>
<li><p>A Geopackage stores both raster and vector files whereas, shapefiles can store only vector files.</p></li>
<li><p>Geopackages are lightweight and compatible across environments specially in mobile devices. It is 1.1-1.3x lighter in file size compared to shapefiles.</p></li>
</ol>
</section>
<section id="load-libraries" class="level3">
<h3 class="anchored" data-anchor-id="load-libraries">Load libraries</h3>
<p>Several packages in R are dealing with spatial data, but in this post we are going to use funtions from <strong>tidyverse</strong> <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span> and <strong>sf</strong> <span class="citation" data-cites="sf">(Pebesma 2018)</span> packages. We can load these packages with a <code>library</code> function as as;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(sf)</span></code></pre></div>
</div>
</section>
<section id="load-file" class="level3">
<h3 class="anchored" data-anchor-id="load-file">Load file</h3>
<p>We first need to import spatial data into the session. For this case we are going to load the boundary layer of Africa. The file has boundary for 67 polygons representing feature in Africa. We can load the file into the session using <code>st_read</code> function from <strong>sf</strong> package <span class="citation" data-cites="sf">(Pebesma 2018)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">africa <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_read</span>(<span class="st" style="color: #20794D;">"../data/africa.gpkg"</span>, <span class="at" style="color: #657422;">quiet =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<p>Next I’ll extract the polygon for WIO region countries from from the <code>Africa</code> package using the <code>filter</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">wio <span class="ot" style="color: #003B4F;">=</span> africa  <span class="sc" style="color: #5E5E5E;">|&gt;</span>  </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">filter</span>(</span>
<span id="cb3-3">    country <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Tanzania"</span>, <span class="st" style="color: #20794D;">"Kenya"</span>, <span class="st" style="color: #20794D;">"Mozambique"</span>, <span class="st" style="color: #20794D;">"South Africa"</span>, </span>
<span id="cb3-4">                   <span class="st" style="color: #20794D;">"Somalia"</span>, <span class="st" style="color: #20794D;">"Madagascar"</span>, <span class="st" style="color: #20794D;">"Seychelles"</span>, <span class="st" style="color: #20794D;">"Reunion"</span>, <span class="st" style="color: #20794D;">"Mauritius"</span>))</span>
<span id="cb3-5"></span>
<span id="cb3-6">wio.point.country <span class="ot" style="color: #003B4F;">=</span> wio <span class="sc" style="color: #5E5E5E;">%&gt;%</span> wior<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">polygon_tb</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">distinct</span>(country, <span class="at" style="color: #657422;">.keep_all =</span> <span class="cn" style="color: #8f5902;">TRUE</span>)</span></code></pre></div>
</div>
<p>Then we load study points that were sampled off the coast of Madagascar.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">sampling.points <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_read</span>(<span class="st" style="color: #20794D;">"../data/madagascar_points.gpkg"</span>, <span class="at" style="color: #657422;">quiet =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">filter</span>(state <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Ocean"</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4">madagascar <span class="ot" style="color: #003B4F;">=</span> wio <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(country <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Madagascar"</span>)</span></code></pre></div>
</div>
</section>
<section id="focus-map" class="level2">
<h2 class="anchored" data-anchor-id="focus-map">Focus Map</h2>
<p>Now, I’ll plot a focused map of Madagascar. We need to define the geographical extent of the area. For that purpose, we first need to identify the extent of the study sites and we can do that using <code>extent</code> function from **sf package;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">madagascar <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">st_bbox</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     xmin      ymin      xmax      ymax 
 42.71862 -25.60895  50.48378 -11.94543 </code></pre>
</div>
</div>
<p>The printed results indicates tha maxima and minima of longitude and latitude, which define the geographical extent of the area. Using the <code>min</code> and <code>max</code> values of coordinates from the previous map, we can draw a polygon over the study sites and see if this extent can best visualize the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">map.site <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-2">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">layer_spatial</span>(<span class="at" style="color: #657422;">data =</span> madagascar, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"cyan4"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>,<span class="at" style="color: #657422;">size =</span> .<span class="dv" style="color: #AD0000;">4</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">geom_sf</span>(<span class="at" style="color: #657422;">data =</span> sampling.points, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">2</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-4">  ggsci<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_color_lancet</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;">coord_sf</span>(<span class="at" style="color: #657422;">xlim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">43</span>, <span class="dv" style="color: #AD0000;">51</span>), <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">18</span>,<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">11</span>))</span>
<span id="cb7-8"></span>
<span id="cb7-9">map.site</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/focus-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Sampling points in the coastal waters of Madagascar Island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>As you can see, the study sites are located on the northern part of Madagascar Island. However, to make a better sense of the study locations with reference to WIO region, we need to plot them on a focused scale.</p>
</section>
<section id="add-map-elements" class="level2">
<h2 class="anchored" data-anchor-id="add-map-elements">Add Map elements</h2>
<p>Professional maps also include some elements like <code>North Arrow</code> and <code>scale</code> etc. We’ll add these components to our map as well. Besides that, I’ll also fill the non-land area with <code>lightblue</code> color for reference and distinction respectively Figure&nbsp;1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">map.site <span class="ot" style="color: #003B4F;">=</span> map.site <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-2">      <span class="fu" style="color: #4758AB;">guides</span>(<span class="at" style="color: #657422;">size =</span> <span class="st" style="color: #20794D;">"none"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-3">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">annotation_north_arrow</span>(<span class="at" style="color: #657422;">location =</span> <span class="st" style="color: #20794D;">"tr"</span>, </span>
<span id="cb8-4">                                    <span class="at" style="color: #657422;">height =</span> <span class="fu" style="color: #4758AB;">unit</span>(<span class="fl" style="color: #AD0000;">1.2</span>, <span class="st" style="color: #20794D;">"cm"</span>),  </span>
<span id="cb8-5">                                    <span class="at" style="color: #657422;">width =</span> <span class="fu" style="color: #4758AB;">unit</span>(.<span class="dv" style="color: #AD0000;">75</span>, <span class="st" style="color: #20794D;">"cm"</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb8-6">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">annotation_scale</span>(<span class="at" style="color: #657422;">location =</span> <span class="st" style="color: #20794D;">"br"</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8">map.site</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-focus1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-focus1-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Sampling points in the coastal waters of Madagascar Island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="inset-map" class="level2">
<h2 class="anchored" data-anchor-id="inset-map">Inset Map</h2>
<p>Now, I’ll create a full-scale map of WIO region with a red polygon showing the extent of study sites and the focused map. The code below produce Figure&nbsp;2;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">inset.map <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-2">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">layer_spatial</span>(<span class="at" style="color: #657422;">data =</span> africa, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"grey90"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"grey90"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-3">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">layer_spatial</span>(<span class="at" style="color: #657422;">data =</span> wio, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"grey60"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"ivory"</span>,<span class="at" style="color: #657422;">size =</span> .<span class="dv" style="color: #AD0000;">4</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-4">  <span class="co" style="color: #5E5E5E;"># geom_sf_text(data = wio, aes(label = country))+</span></span>
<span id="cb9-5">  ggrepel<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_text_repel</span>(<span class="at" style="color: #657422;">data =</span> wio.point.country, </span>
<span id="cb9-6">                           <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">label =</span> country), <span class="at" style="color: #657422;">size =</span> <span class="dv" style="color: #AD0000;">3</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;">geom_rect</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">xmin =</span> <span class="dv" style="color: #AD0000;">43</span>, <span class="at" style="color: #657422;">xmax =</span> <span class="dv" style="color: #AD0000;">51</span>, <span class="at" style="color: #657422;">ymin =</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">18</span>, <span class="at" style="color: #657422;">ymax =</span> <span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">11</span>), </span>
<span id="cb9-10">            <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NA</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">1.2</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;">coord_sf</span>(<span class="at" style="color: #657422;">xlim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">20</span>, <span class="dv" style="color: #AD0000;">60</span>), <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">40</span>,<span class="dv" style="color: #AD0000;">15</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;">theme_test</span>() <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.text =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb9-14">        <span class="at" style="color: #657422;">axis.ticks =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb9-15">        <span class="at" style="color: #657422;">axis.ticks.length =</span> <span class="fu" style="color: #4758AB;">unit</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"pt"</span>),</span>
<span id="cb9-16">        <span class="at" style="color: #657422;">axis.title=</span><span class="fu" style="color: #4758AB;">element_blank</span>(),</span>
<span id="cb9-17">        <span class="at" style="color: #657422;">plot.margin =</span> <span class="fu" style="color: #4758AB;">margin</span>(<span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="dv" style="color: #AD0000;">0</span>, <span class="st" style="color: #20794D;">"cm"</span>),</span>
<span id="cb9-18">        <span class="at" style="color: #657422;">panel.background =</span> <span class="fu" style="color: #4758AB;">element_rect</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"lightblue"</span>))</span>
<span id="cb9-19"></span>
<span id="cb9-20">inset.map</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-inset" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-inset-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: An inset map of the WIO region</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>This version looks better compared to the previous one. However, we need to add some information to give it a reference.</p>
</section>
<section id="final-map" class="level2">
<h2 class="anchored" data-anchor-id="final-map">Final Map</h2>
<p>Now, to combine both maps where the map of WIO region is inset on the upper left corner we use the function from <strong>cowplot</strong> package. a <code>draw_plot</code> function allow to places a plot somewhere onto the drawing canvas that is established using <code>ggdraw</code> function also from <strong>cowplot</strong> package <span class="citation" data-cites="cowplot">(Wilke 2018)</span>. By default, coordinates run from 0 to 1, and the point (0, 0) is in the lower left corner of the canvas. The function also allows us to specify the size of the inset map using the <code>width</code> and <code>height</code> functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">cowplot<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ggdraw</span>(<span class="at" style="color: #657422;">plot =</span> map.site) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb10-2">  cowplot<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">draw_plot</span>(inset.map, <span class="at" style="color: #657422;">x =</span> .<span class="dv" style="color: #AD0000;">1</span>, <span class="at" style="color: #657422;">y =</span> .<span class="dv" style="color: #AD0000;">13</span>, <span class="at" style="color: #657422;">width =</span> .<span class="dv" style="color: #AD0000;">4</span>, <span class="at" style="color: #657422;">height =</span> .<span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-map2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-map2-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Map of the northwest side of Madagascar. An inset map indicate the location of the study area in the Western Indian Ocean region</figcaption><p></p>
</figure>
</div>
</div>
</div>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<p>Therefore , a final map shown in Figure&nbsp;3 shows the locations of study sites with reference to the country and provinces and is more professional.</p>
</section>
</section>

<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section id="last-updated" class="level2 appendix"><h2 class="quarto-appendix-heading">Last updated</h2><div class="quarto-appendix-contents">

<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] "16 February 2023"</code></pre>
</div>
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-sf" class="csl-entry">
Pebesma, Edzer. 2018. <span>“<span class="nocase">Simple Features for R: Standardized Support for Spatial Vector Data</span>.”</span> <em><span>The R Journal</span></em> 10 (1): 439–46. <a href="https://doi.org/10.32614/RJ-2018-009">https://doi.org/10.32614/RJ-2018-009</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
<div id="ref-cowplot" class="csl-entry">
Wilke, Claus O. 2018. <em>Cowplot: Streamlined Plot Theme and Plot Annotations for ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=cowplot">https://CRAN.R-project.org/package=cowplot</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/inset_main_map/index.html</guid>
  <pubDate>Sat, 18 Feb 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Inferential statistics in R:ttest</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/ttest/index.html</link>
  <description><![CDATA[ 



<p>A formal statistical test called a hypothesis test is used to confirm or disprove a statistical hypothesis. The following R hypothesis tests are demonstrated in this course.</p>
<ul>
<li><em>T-test with one sample</em></li>
<li><em>T-Test of two samples</em></li>
<li><em>T-test for paired samples</em></li>
</ul>
<p>Each type of test can be run using the R function <code>t.test()</code>.The function comes with the following arguments;</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">t.test</span>(x, <span class="at" style="color: #657422;">y =</span> <span class="cn" style="color: #8f5902;">NULL</span>, </span>
<span id="cb1-2">       <span class="at" style="color: #657422;">alternative =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"two-sided"</span>, <span class="st" style="color: #20794D;">"less"</span>, <span class="st" style="color: #20794D;">"greater"</span>),</span>
<span id="cb1-3">       <span class="at" style="color: #657422;">mu =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">paired =</span>  <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">var.equal =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">conf.level =</span> <span class="fl" style="color: #AD0000;">0.95</span>, ...)</span></code></pre></div>
<p>where: <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y"> are the vectors of data elements <img src="https://latex.codecogs.com/png.latex?alternative">: the stated alternative hypothesis <img src="https://latex.codecogs.com/png.latex?mu">: the true value of the mean <img src="https://latex.codecogs.com/png.latex?paired">: whether or not to run a paired test <img src="https://latex.codecogs.com/png.latex?var.equal">: whether to assume that the vaarinaces between the values in the vector are equal <img src="https://latex.codecogs.com/png.latex?con.level">: The confidence level to use</p>
<p>Before we proceed, we need functions from various packages and accessing these functions when needed may render this task tedious. Therefore, lets load the packages in advance. These packages include <strong>tidyverse</strong> <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span>, <strong>patchwork</strong><span class="citation" data-cites="patchwork">(Pedersen 2020)</span> and <strong>magrittr</strong><span class="citation" data-cites="magrittr">(Bache and Wickham 2014)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">require</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;">require</span>(patchwork)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;">require</span>(magrittr)</span></code></pre></div>
</div>
<section id="one-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="one-sample-t-test">One sample t-test</h2>
<p>One sample t-test is widely used in statistical analysis to determine whether the population’s mean is equal to given mean value. The given mean value can be the sample mean for instance. A <code>t.test</code> function in R is used to test one sample parametric test. Let’s consider a situation where we want to determine whether the total length of Nile perch collected during a survey conducted in December 2022 is not equal to a long term mean length of 61cm. Let’s generate a sample by creating a data frame that contain sample of 350 individual of nile perch. Using a <code>run_if</code> function help us simulate weight of nile perch once given the minimum and maximum values. The code for simulating the total length is highlighted in the code chunk below;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sample <span class="ot" style="color: #003B4F;">=</span> tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;">id =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">350</span>,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;">tl =</span> <span class="fu" style="color: #4758AB;">runif</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">350</span>, <span class="at" style="color: #657422;">min =</span> <span class="dv" style="color: #AD0000;">48</span>, <span class="at" style="color: #657422;">max =</span> <span class="dv" style="color: #AD0000;">65</span>)</span>
<span id="cb3-4">  )</span>
<span id="cb3-5"></span>
<span id="cb3-6">sample</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 350 x 2
      id    tl
   &lt;int&gt; &lt;dbl&gt;
 1     1  61.3
 2     2  49.7
 3     3  50.4
 4     4  48.5
 5     5  54.9
 6     6  57.3
 7     7  60.6
 8     8  61.9
 9     9  50.4
10    10  49.0
# ... with 340 more rows</code></pre>
</div>
</div>
<p>Let’s use a histogram to check the distribution of the data and add a vertical line of the population mean to identify whether the data is leading away is around the population</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sample <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> tl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="at" style="color: #657422;">bins =</span> <span class="dv" style="color: #AD0000;">30</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"ivory"</span>, <span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"cyan4"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">geom_vline</span>(<span class="at" style="color: #657422;">xintercept =</span> <span class="dv" style="color: #AD0000;">61</span>, <span class="at" style="color: #657422;">linetype =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"Total length (cm.)"</span>, <span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">40</span>,<span class="dv" style="color: #AD0000;">80</span>,<span class="dv" style="color: #AD0000;">4</span>)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"Frequency"</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ttest/index_files/figure-html/fig-hist-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: <strong>?(caption)</strong></figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Now we notice that the position of the population mean of the sample dataset, we can not test to determine whether the sample mean total length is lower than the sample mean</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sample <span class="sc" style="color: #5E5E5E;">%$%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">t.test</span>(<span class="at" style="color: #657422;">x =</span> tl, <span class="at" style="color: #657422;">mu =</span> <span class="dv" style="color: #AD0000;">61</span>, <span class="at" style="color: #657422;">alternative =</span> <span class="st" style="color: #20794D;">"less"</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    One Sample t-test

data:  tl
t = -17.907, df = 349, p-value &lt; 2.2e-16
alternative hypothesis: true mean is less than 61
95 percent confidence interval:
     -Inf 56.50406
sample estimates:
mean of x 
 56.04797 </code></pre>
</div>
</div>
<p>The one sample t-test determine the whether the sample mean total length of nile perch was less than the long-term mean length suggest that the sample total length (56.68cm) was less than the population mean (61cm) and the difference was statistically significant (t(349) = -18.19, p &lt; 0.001). Lets try change the alternative to <code>greater</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sample <span class="sc" style="color: #5E5E5E;">%$%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">t.test</span>(<span class="at" style="color: #657422;">x =</span> tl, <span class="at" style="color: #657422;">mu =</span> <span class="dv" style="color: #AD0000;">61</span>, <span class="at" style="color: #657422;">alternative =</span> <span class="st" style="color: #20794D;">"greater"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    One Sample t-test

data:  tl
t = -17.907, df = 349, p-value = 1
alternative hypothesis: true mean is greater than 61
95 percent confidence interval:
 55.59189      Inf
sample estimates:
mean of x 
 56.04797 </code></pre>
</div>
</div>
<p>Notice that the test is not statistically significant (t(349) = 18.91, p = 1) because the population mean (61cm) is greater than the sample mean (56.68).</p>
</section>
<section id="two-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="two-sample-t-test">Two Sample t-test</h2>
<p>A two sample t-test is used to determine whether the means of two independent samples are equal. Lets consider that two independent survey to measure the stock of nile perch was conducted in two independent period. The first survey was conducted in June 2001 and the subsequency survey was conducted in July 2021. The two survey were conducted during the cool and dry season but with a 20 years time difference. Therefore, we want to determine whether the mean sample of nile perch collected in 2021 is smaller than the those sampled in 2001</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">1254</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3">sample2 <span class="ot" style="color: #003B4F;">=</span> tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb10-4">  <span class="at" style="color: #657422;">id =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">350</span>,</span>
<span id="cb10-5">  <span class="at" style="color: #657422;">tl21 =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">350</span>,<span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">52</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">18</span>),</span>
<span id="cb10-6">  <span class="at" style="color: #657422;">tl01 =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">350</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">61</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">20</span>)</span>
<span id="cb10-7">  )</span>
<span id="cb10-8"></span>
<span id="cb10-9">sample2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 350 x 3
      id  tl21  tl01
   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;
 1     1 41.7   54.4
 2     2 68.4   52.2
 3     3 47.1   69.1
 4     4 38.7   43.2
 5     5  3.41  46.9
 6     6 42.6   64.3
 7     7 67.3   70.4
 8     8 65.7   72.9
 9     9 26.3   25.0
10    10 56.2   64.5
# ... with 340 more rows</code></pre>
</div>
</div>
<p>Once we have created a dataframe with values for the two sampling survey, it’s a good practice to visualize the value to see the patterns.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">sample2 <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> tl21<span class="sc" style="color: #5E5E5E;">:</span>tl01) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> value, <span class="at" style="color: #657422;">fill =</span> name))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;">geom_density</span>(<span class="at" style="color: #657422;">position =</span> <span class="st" style="color: #20794D;">"identity"</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">4</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">scale_fill_brewer</span>(<span class="at" style="color: #657422;">name =</span><span class="st" style="color: #20794D;">"Surveys"</span> ,<span class="at" style="color: #657422;">palette =</span> <span class="st" style="color: #20794D;">"Set2"</span>, <span class="at" style="color: #657422;">label =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"2001"</span>, <span class="st" style="color: #20794D;">"2021"</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;">scale_x_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"Total length (cm)"</span>, <span class="at" style="color: #657422;">breaks =</span> <span class="fu" style="color: #4758AB;">seq</span>(<span class="dv" style="color: #AD0000;">20</span>,<span class="dv" style="color: #AD0000;">150</span>,<span class="dv" style="color: #AD0000;">20</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"Density"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ttest/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We notice from a figure above a slight difference in the density shape with the median value for 2001 far east from the 2021, suggesting the size of 2001 is relatively higher than 2001. Let’s perform two sample t-test to determine whether that difference is significant;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">sample2 <span class="sc" style="color: #5E5E5E;">%$%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">t.test</span>(<span class="at" style="color: #657422;">x =</span> tl21, <span class="at" style="color: #657422;">y =</span> tl01, <span class="at" style="color: #657422;">alternative =</span> <span class="st" style="color: #20794D;">"less"</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Welch Two Sample t-test

data:  tl21 and tl01
t = -6.4619, df = 690.02, p-value = 9.771e-11
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
      -Inf -6.905485
sample estimates:
mean of x mean of y 
 51.80015  61.06788 </code></pre>
</div>
</div>
<p>The output display the Welch Two Sample t-test to determine whether the total length of nile perch sampled in 2021 is less than those of 2001. The result suggest that the sample mean in 2021 was 51.8 cm which is less than 61.07 cm of nile perch sampled in 2001. The result suggest that the 2021 nile perch were small in size than those of 2001, and the difference was significant (t(690) = 6.46, p &lt; 0.01).</p>
</section>
<section id="paired-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="paired-sample-t-test">Paired sample t-test</h2>
<p>This test is normally used to determine whether the values in paired dataset have different mean. For instance, the weight in nile perch measured after captured and kept in cage for three months and measured again. Therefore, the nile perch individuals were measured before taken to cage and then measured after three months. This means we have measurement before and after. Let’s create a dataframe and simulate before and after total length of nile perch.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;">set.seed</span>(<span class="dv" style="color: #AD0000;">1254</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3">sample3 <span class="ot" style="color: #003B4F;">=</span> tibble<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb15-4">  <span class="at" style="color: #657422;">id =</span> <span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">:</span><span class="dv" style="color: #AD0000;">50</span>,</span>
<span id="cb15-5">  <span class="at" style="color: #657422;">before =</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">50</span>,<span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">52</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">12</span>),</span>
<span id="cb15-6">  <span class="at" style="color: #657422;">after =</span> before <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">50</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">abs</span>()</span>
<span id="cb15-7">  )</span>
<span id="cb15-8"></span>
<span id="cb15-9">sample3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 50 x 3
      id before after
   &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;
 1     1   45.1  46.2
 2     2   62.9  64.7
 3     3   48.7  49.3
 4     4   43.2  43.6
 5     5   19.6  20.4
 6     6   45.7  46.1
 7     7   62.2  63.2
 8     8   61.1  62.5
 9     9   34.9  35.2
10    10   54.8  56.0
# ... with 40 more rows</code></pre>
</div>
</div>
<p>Then we perform paired sample t-test</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sample3 <span class="sc" style="color: #5E5E5E;">%$%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;">t.test</span>(<span class="at" style="color: #657422;">x =</span> before, <span class="at" style="color: #657422;">y =</span> after, <span class="at" style="color: #657422;">paired =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Paired t-test

data:  before and after
t = -11.171, df = 49, p-value = 4.484e-15
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.9512640 -0.6612062
sample estimates:
mean of the differences 
             -0.8062351 </code></pre>
</div>
</div>
<p>Since the p &lt; 0.05, we reject the null hypothesis that the mean total length before and after is significant. Therefore, fattening nile perch in cage for three months increased the total length and that increase is significant (t(49) = -11.17, p &lt; 0.001)</p>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-magrittr" class="csl-entry">
Bache, Stefan Milton, and Hadley Wickham. 2014. <em>Magrittr: A Forward-Pipe Operator for r</em>. <a href="https://CRAN.R-project.org/package=magrittr">https://CRAN.R-project.org/package=magrittr</a>.
</div>
<div id="ref-patchwork" class="csl-entry">
Pedersen, Thomas Lin. 2020. <em>Patchwork: The Composer of Plots</em>. <a href="https://CRAN.R-project.org/package=patchwork">https://CRAN.R-project.org/package=patchwork</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/ttest/index.html</guid>
  <pubDate>Tue, 14 Feb 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Combining plots in R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <dc:creator>Nyamisi Peter</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/combining_plots/index.html</link>
  <description><![CDATA[ 



<p>The ggplot2 package doesn’t provide a function to arrange multiple plots in a single figure <span class="citation" data-cites="ggplot">(Wickham 2016)</span>. Still, some packages allow combining multiple plots into a single figure with custom layouts, width, and height, such as cowplot <span class="citation" data-cites="cowplot">(Wilke 2018)</span>, gridExtra, and patchwork <span class="citation" data-cites="patchwork">(Pedersen 2020)</span>. In this post we are going to use several packages, let’us load them in our session</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">require</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">require</span>(patchwork)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">require</span>(cowplot)</span></code></pre></div>
</div>
<p>Sample datasets</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;"># tuna = tibble(</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;">#   tl = runif(n = 120, min = 30, max = 120),</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;">#   seasons = rep(c("Northeast", "Southeast", "Inter"), each = 40)</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;"># )</span></span>
<span id="cb2-5"></span>
<span id="cb2-6">tuna <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">tibble</span>(</span>
<span id="cb2-7">  <span class="at" style="color: #657422;">tl =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">40</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">80</span>, <span class="at" style="color: #657422;">sd =</span> <span class="dv" style="color: #AD0000;">30</span>), </span>
<span id="cb2-8">            <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">40</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">61</span>,<span class="dv" style="color: #AD0000;">10</span>),</span>
<span id="cb2-9">            <span class="fu" style="color: #4758AB;">rnorm</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">40</span>, <span class="at" style="color: #657422;">mean =</span> <span class="dv" style="color: #AD0000;">96</span>, <span class="dv" style="color: #AD0000;">25</span>)),</span>
<span id="cb2-10">  <span class="at" style="color: #657422;">seasons =</span> <span class="fu" style="color: #4758AB;">rep</span>(<span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Northeast"</span>, <span class="st" style="color: #20794D;">"Southeast"</span>, <span class="st" style="color: #20794D;">"Inter"</span>), <span class="at" style="color: #657422;">each =</span> <span class="dv" style="color: #AD0000;">40</span>)</span>
<span id="cb2-11">)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ridges <span class="ot" style="color: #003B4F;">=</span> tuna <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">ggplot</span>() <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-3">  ggridges<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_density_ridges</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> tl, <span class="at" style="color: #657422;">y =</span> seasons, <span class="at" style="color: #657422;">fill =</span> seasons), <span class="at" style="color: #657422;">position =</span> <span class="st" style="color: #20794D;">"identity"</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">6</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">legend.position =</span> <span class="st" style="color: #20794D;">"none"</span>)</span>
<span id="cb3-5"></span>
<span id="cb3-6">ridges</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-3-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">box <span class="ot" style="color: #003B4F;">=</span> tuna <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> seasons, <span class="at" style="color: #657422;">y =</span> tl)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">geom_boxplot</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"cyan4"</span>)</span>
<span id="cb4-4"></span>
<span id="cb4-5">  box</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">hist <span class="ot" style="color: #003B4F;">=</span> tuna <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> tl, <span class="at" style="color: #657422;">fill =</span> seasons, <span class="at" style="color: #657422;">color =</span> seasons)) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">geom_histogram</span>(<span class="at" style="color: #657422;">bins =</span> <span class="dv" style="color: #AD0000;">8</span>,<span class="at" style="color: #657422;">position =</span> <span class="st" style="color: #20794D;">"identity"</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">4</span>)</span>
<span id="cb5-4"></span>
<span id="cb5-5">hist</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="gridextra" class="level2">
<h2 class="anchored" data-anchor-id="gridextra">gridExtra</h2>
<p>The gridExtra package provides the <code>grid.arrange</code> function to combine several plots on a single figure.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">gridExtra<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">grid.arrange</span>(hist, box, ridges)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can also specify the number of rows with nrow, the number of columns with ncol, and the sizes with widths and heights, and also we can add labels at the top, bottom, left, and right of the figures.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">gridExtra<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">grid.arrange</span>(hist, box, ridges, <span class="at" style="color: #657422;">nrow =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">top =</span> <span class="st" style="color: #20794D;">"Top Panel"</span>, <span class="at" style="color: #657422;">bottom =</span> <span class="st" style="color: #20794D;">"Bottom Panel"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="patchwork" class="level1">
<h1>Patchwork</h1>
<p><strong>patchwork</strong> is designed to combine ggplot2 plots into the same figure easily. You only need to call the package in the session and then do the manipulation</p>
<p>For instance, we combine plots using <code>+</code> operator</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">hist <span class="sc" style="color: #5E5E5E;">+</span> box <span class="sc" style="color: #5E5E5E;">+</span> ridges</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The | operator places plots in a row. This operator is similar to + when you have two plots but | will place all plots in a single row while + will try to create a square layout if possible.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">hist <span class="sc" style="color: #5E5E5E;">|</span> ridges</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-9-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>if we want to arrange plots along a column (stack), then we use the <code>/</code> operator</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">hist <span class="sc" style="color: #5E5E5E;">/</span> ridges</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can create complex layouts. The | and / operators can be used to create complex layouts combining plots. In the following example, we are creating a layout with two plots at the top and one wider at the bottom.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">(hist <span class="sc" style="color: #5E5E5E;">/</span> ridges)<span class="sc" style="color: #5E5E5E;">|</span> box</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Similary, we can swap the operator and see the different of the figure below as compared to the previous one</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">(hist <span class="sc" style="color: #5E5E5E;">|</span> ridges)<span class="sc" style="color: #5E5E5E;">/</span> box</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>You can add a title, subtitle, and captions to all plots with the plot_annotation function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">(hist <span class="sc" style="color: #5E5E5E;">|</span> ridges)<span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">plot_annotation</span>(<span class="at" style="color: #657422;">tag_levels =</span> <span class="st" style="color: #20794D;">"A"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The labels can be customized with the tag_prefix, tag_suffix, and tag_sep arguments.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">(hist <span class="sc" style="color: #5E5E5E;">|</span> ridges)<span class="sc" style="color: #5E5E5E;">/</span> box <span class="sc" style="color: #5E5E5E;">+</span> <span class="fu" style="color: #4758AB;">plot_annotation</span>(<span class="at" style="color: #657422;">tag_levels =</span> <span class="st" style="color: #20794D;">"A"</span>, <span class="at" style="color: #657422;">tag_prefix =</span> <span class="st" style="color: #20794D;">"Plot "</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">box <span class="sc" style="color: #5E5E5E;">+</span><span class="fu" style="color: #4758AB;">geom_jitter</span>(<span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"cyan3"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>patchwork also provides the &amp; operator to modify all the plots at the same time to set the same theme for all plots at the same time.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">(hist <span class="sc" style="color: #5E5E5E;">|</span> box)<span class="sc" style="color: #5E5E5E;">/</span> ridges   <span class="sc" style="color: #5E5E5E;">&amp;</span> <span class="fu" style="color: #4758AB;">theme_classic</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>If you want to label each plot individually you can make use of the labels argument of the function, where you can specify a vector of labels or use the “A” or “a” keywords for automatic labels in uppercase or lowercase, respectively. The function also provides several arguments to customize the style of the texts.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="fu" style="color: #4758AB;">plot_grid</span>(hist, box, ridges, <span class="at" style="color: #657422;">labels =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"A"</span>, <span class="st" style="color: #20794D;">"B"</span>, <span class="st" style="color: #20794D;">"C"</span>), <span class="at" style="color: #657422;">label_fontfamily =</span> <span class="st" style="color: #20794D;">"serif"</span>, <span class="at" style="color: #657422;">label_fontface =</span> <span class="st" style="color: #20794D;">"bold"</span>, <span class="at" style="color: #657422;">label_colour =</span> <span class="st" style="color: #20794D;">"dodgerblue2"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>With cowplot you can also create more complex layouts combining <code>plot_grid</code> functions, as shown in the example below, where we are creating a layout with two plots at the bottom and one at the top.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;">plot_grid</span>(<span class="fu" style="color: #4758AB;">plot_grid</span>(hist, ridges), box, <span class="at" style="color: #657422;">rows =</span> <span class="dv" style="color: #AD0000;">2</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/combining_plots/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="cited-materials" class="level2">




</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-patchwork" class="csl-entry">
Pedersen, Thomas Lin. 2020. <em>Patchwork: The Composer of Plots</em>. <a href="https://CRAN.R-project.org/package=patchwork">https://CRAN.R-project.org/package=patchwork</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
<div id="ref-cowplot" class="csl-entry">
Wilke, Claus O. 2018. <em>Cowplot: Streamlined Plot Theme and Plot Annotations for ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=cowplot">https://CRAN.R-project.org/package=cowplot</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/combining_plots/index.html</guid>
  <pubDate>Fri, 03 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/combining_plots/combine_plot.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Forecasting Rising Temperature with prophet package in R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Time-series analysis aims to analyse and learn the temporal behavior of datasets over a period. Examples include the investigation of long-term records of temperature , sea-level fluctuations, the effect of the El Niño/Southern Oscillation on tropical rainfall, and surface current influences on distribution of temperature and rainfall. Th e temporal pattern of a sequence of events in a time series data can be either random, clustered, cyclic, or chaotic.</p>
<p>Time-series analysis provides various tools with which to detect these temporal patterns. Moreover, it helps in learning the behavior of the dataset by plotting the time series object on the graph. In R language, time series objects are handled easily using <code>ts()</code> function that takes the data vector and converts it into time series object as specified in function parameters. Therefore, understanding the underlying processes that produced the observed data allows us to predict future values of the variable.</p>
<p>In this post we learn how to forecast in R. We will use the <strong>prophet</strong> package <span class="citation" data-cites="prophet">(<strong>prophet?</strong>)</span>, which contain all the necessary routines for time-series analysis. <strong>Prophet</strong> is a package developed by Facebook for forecasting time series objects or data. <strong>Prophet</strong> package is based on decompose model i.e., trend, seasonality and holidays that helps in making more accurate predictive models. It is much better than the ARIMA model as it helps in tuning and adjusting the input parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">require</span>(sf)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">require</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">require</span>(patchwork)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">require</span>(magrittr)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">require</span>(tmap)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">require</span>(prophet)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="do" style="color: #5E5E5E;
font-style: italic;">## basemap shapefile from tmap package</span></span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;">data</span>(<span class="st" style="color: #20794D;">"World"</span>)</span>
<span id="cb1-10"></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;"># color codes</span></span>
<span id="cb1-13">mycolor3 <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"#9000B0"</span>, <span class="st" style="color: #20794D;">"#C900B0"</span>, <span class="st" style="color: #20794D;">"#C760AF"</span>, <span class="st" style="color: #20794D;">"#1190F9"</span>, <span class="st" style="color: #20794D;">"#60C8F8"</span>, <span class="st" style="color: #20794D;">"#90C9F8"</span>, <span class="st" style="color: #20794D;">"#F8F8F8"</span>, <span class="st" style="color: #20794D;">"#F8F800"</span>,  <span class="st" style="color: #20794D;">"#F8D730"</span>, <span class="st" style="color: #20794D;">"#f8b030"</span>, <span class="st" style="color: #20794D;">"#f8602f"</span>, <span class="st" style="color: #20794D;">"#f80000"</span>)</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We will use the NASA GISTEMP V4 dataset that combine NOAA GHCN meteorological stations and ERSST ocean temperature to form a comprehensive long record of temperature variability of the earth surface. The dataset contains monthly temperature values from 1880 to present, which is widely used to monitor the weather and climate at regional and global scale. Rather than using absolute temperature values, the dataset uses anomaly obtained by using base period (1951-1980).</p>
<p>NASA’s analysis incorporates surface temperature measurements from more than 26,000 weather stations and thousands of ship- and buoy-based observations of sea surface temperatures. These raw measurements are analyzed using an algorithm that considers the varied spacing of temperature stations around the globe and urban heating effects that could skew the conclusions if not taken into account. The result of these calculations is an estimate of the global average temperature difference from a baseline period of 1951 to 1980.</p>
<p>This dataset is open and free to download as netCDF format file at <a href="https://data.giss.nasa.gov/gistemp/">GISTEMP</a>. I have processed the file and we can load as the csv file here.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">global <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"../data/temperature_lss_global_1990_2020_2021.csv"</span>)</span></code></pre></div>
</div>
<p>The Earth’s global average surface temperature in 2021 tied 2018 (<em>See</em> Figure&nbsp;1) is the sixth-warmest year on record, according to independent analyses from NASA and the National Oceanic and Atmospheric Administration (NOAA). According to scientists at NASA’s Goddard Institute for Space Studies (GISS), global temperatures in 2021 were 0.85 degrees Celsius above the average for NASA’s baseline period,</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">temperature <span class="ot" style="color: #003B4F;">=</span> global <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(year <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">2021</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">ggplot</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-4">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_contour_fill</span>(<span class="at" style="color: #657422;">data =</span> temperature, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">z =</span> temperature),<span class="at" style="color: #657422;">bins =</span> <span class="dv" style="color: #AD0000;">120</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-5">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_contour2</span>(<span class="at" style="color: #657422;">data =</span> temperature, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">z =</span> temperature,<span class="at" style="color: #657422;">label =</span> ..level..), <span class="at" style="color: #657422;">breaks =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-6">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">layer_spatial</span>(<span class="at" style="color: #657422;">data =</span> World, <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NA</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;">coord_sf</span>(<span class="at" style="color: #657422;">xlim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">180</span>,<span class="dv" style="color: #AD0000;">180</span>), <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">70</span>,<span class="dv" style="color: #AD0000;">70</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-8">  <span class="co" style="color: #5E5E5E;"># metR::scale_fill_divergent(midpoint = 0)+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;">colours =</span> mycolor3, </span>
<span id="cb3-10">                       <span class="co" style="color: #5E5E5E;"># trans = scales::modulus_trans(p = .1),</span></span>
<span id="cb3-11">                       <span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">expression</span>(T<span class="sc" style="color: #5E5E5E;">~</span>(degree<span class="sc" style="color: #5E5E5E;">*</span>C))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb3-14">  <span class="co" style="color: #5E5E5E;"># metR::scale_y_latitude(ticks = 15)+</span></span>
<span id="cb3-15">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_x_longitude</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-temperature" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index_files/figure-html/fig-temperature-1.png" class="img-fluid figure-img" width="768"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Global land and sea surface temperature anomaly for a year 2021 compared to to the 1950-1980 average</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Regardless of the COVID-19 pandemic that reduction in mobility and human activities, along with reduced industrial production, has led to lower levels of nitrogen dioxide (NO2) and and the subsequent decrease of fossil fuel burning and CO<sub>2</sub> emissions, NASA found that the year 2020 (Figure&nbsp;2) was the hottest year on record. Continuing the planet’s long-term warming trend, the year’s globally averaged temperature was 1.02 degrees Celsius warmer than the baseline 1951-1980 mean, according to scientists at NASA’s Goddard Institute for Space Studies (GISS) in New York. 2020 edged out 2016 by a very small amount, within the margin of error of the analysis, making the years effectively tied for the warmest year on record. The last seven years have been the warmest seven years on record.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">temperature <span class="ot" style="color: #003B4F;">=</span> global <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">filter</span>(year <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">2020</span>)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;">ggplot</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-4">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_contour_fill</span>(<span class="at" style="color: #657422;">data =</span> temperature, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">z =</span> temperature),<span class="at" style="color: #657422;">bins =</span> <span class="dv" style="color: #AD0000;">120</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-5">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">geom_contour2</span>(<span class="at" style="color: #657422;">data =</span> temperature, <span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">z =</span> temperature,<span class="at" style="color: #657422;">label =</span> ..level..), <span class="at" style="color: #657422;">breaks =</span> <span class="dv" style="color: #AD0000;">0</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-6">  ggspatial<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">layer_spatial</span>(<span class="at" style="color: #657422;">data =</span> World, <span class="at" style="color: #657422;">fill =</span> <span class="cn" style="color: #8f5902;">NA</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-7">  <span class="fu" style="color: #4758AB;">coord_sf</span>(<span class="at" style="color: #657422;">xlim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">180</span>,<span class="dv" style="color: #AD0000;">180</span>), <span class="at" style="color: #657422;">ylim =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">70</span>,<span class="dv" style="color: #AD0000;">70</span>))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-8">  <span class="co" style="color: #5E5E5E;"># metR::scale_fill_divergent(midpoint = 0)+</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;">colours =</span> mycolor3, </span>
<span id="cb4-10">                       <span class="co" style="color: #5E5E5E;"># trans = scales::modulus_trans(p = .1),</span></span>
<span id="cb4-11">                       <span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">expression</span>(T<span class="sc" style="color: #5E5E5E;">~</span>(degree<span class="sc" style="color: #5E5E5E;">*</span>C))) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb4-14">  <span class="co" style="color: #5E5E5E;"># metR::scale_y_latitude(ticks = 15)+</span></span>
<span id="cb4-15">  metR<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">scale_x_longitude</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hottest" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index_files/figure-html/fig-hottest-1.png" class="img-fluid figure-img" width="768"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: 2020! the hottest year on record</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="data-preparation-exploration" class="level2">
<h2 class="anchored" data-anchor-id="data-preparation-exploration">Data Preparation &amp; Exploration</h2>
<p>Prophet works best with periodicity data with at least one year of historical data. It’s possible to use Prophet to forecast using sub-daily or monthly data, but for the purposes of this post, we’ll use the monthly periodicity of global temperature—land and ocean . Let’s us read the file into our session</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">monthly <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">read_csv</span>(<span class="st" style="color: #20794D;">"../data/temperature_lss.csv"</span>)</span>
<span id="cb5-2"></span>
<span id="cb5-3">monthly <span class="sc" style="color: #5E5E5E;">%&gt;%</span> FSA<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">headtail</span>(<span class="at" style="color: #657422;">n =</span> <span class="dv" style="color: #AD0000;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>           time temperature
1    1880-01-15  -0.2322751
2    1880-02-15  -0.4008110
3    1880-03-15  -0.1818604
4    1880-04-15  -0.2003687
5    1880-05-15  -0.1266611
1701 2021-09-15   1.1336590
1702 2021-10-15   1.3624321
1703 2021-11-15   1.0853070
1704 2021-12-15   0.9597652
1705 2022-01-15   1.1144421</code></pre>
</div>
</div>
<p>Looking on the printed dataset, we note that we have records of land and sea temperature since January 1880 through January 2022. That is the long historical data that suits our analysis. The first thing we need to do is to create a time-series object in R. This is done by using a <code>ts</code> function and specify the start year and the frequency of observation. Since we have monthly records, the frequency for each year will be 12 as the chunk highlight</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">ts.temp <span class="ot" style="color: #003B4F;">=</span> monthly <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">pull</span>(temperature) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">ts</span>(<span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1880</span>,<span class="dv" style="color: #AD0000;">1</span>), <span class="at" style="color: #657422;">frequency =</span> <span class="dv" style="color: #AD0000;">12</span>)</span></code></pre></div>
</div>
<p>But, although we have that long historical dataset, we are more interested in the most recent records. Therefore, we filter all records since 1980 for our analysis. We can achieve this by simply passing the limiting year and month in the <code>window</code> function. Once we have filtered the dataset, we then convert the ts object to prophet format using a <code>ts_to_prophet</code> function from <strong>TSstudio</strong> package</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">ts.df <span class="ot" style="color: #003B4F;">=</span> ts.temp <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">window</span>(<span class="at" style="color: #657422;">start =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="dv" style="color: #AD0000;">1980</span>,<span class="dv" style="color: #AD0000;">1</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb8-3">  TSstudio<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">ts_to_prophet</span>()</span></code></pre></div>
</div>
<p>Tracking global temperature trends provides a critical indicator of the impact of human activities— specifically, greenhouse gas emissions – on our planet. Visualizing the dataset as seen in Figure&nbsp;3. It’s an undeniable fact the global mean temperature is constantly rising. Earth’s average temperature has risen above 1.2 degrees Celsius) since the late 19th century and the IPCC has pointed out the increase should be limited to 1.5 °C above pre-industrial levels, to have any hope of mitigating the harmful effects of climate change.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">ts.df <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">ggplot</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">x =</span> ds, <span class="at" style="color: #657422;">y =</span> y))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">geom_line</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">geom_smooth</span>(<span class="at" style="color: #657422;">fill =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"red"</span>, <span class="at" style="color: #657422;">alpha =</span> .<span class="dv" style="color: #AD0000;">2</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">expression</span>(Temperature<span class="sc" style="color: #5E5E5E;">~</span>(degree<span class="sc" style="color: #5E5E5E;">*</span>C)))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-6">  <span class="fu" style="color: #4758AB;">scale_x_date</span>(<span class="at" style="color: #657422;">date_breaks =</span> <span class="st" style="color: #20794D;">"3 year"</span>, <span class="at" style="color: #657422;">labels =</span> scales<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">label_date_short</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>(), <span class="at" style="color: #657422;">panel.grid.minor =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-trend" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index_files/figure-html/fig-trend-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Trend of global temperature</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="forecasting" class="level2">
<h2 class="anchored" data-anchor-id="forecasting">Forecasting</h2>
<p>The first step in creating a forecast using Prophet is importing the <strong>prophet</strong> library into our R session. Once the prophet library is loaded into our session, we’re ready to fit a model to our historical data. We can achieve that by simply calling the<code>prophet()</code> function using your prepared dataframe as an input:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">m <span class="ot" style="color: #003B4F;">=</span> ts.df <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">prophet</span>()</span></code></pre></div>
</div>
<p>Once we have used <strong>Prophet</strong> to fit the model dataset, we can now start making predictions for future dates. Prophet has a built-in helper function <code>make_future_dataframe</code> to create a dataframe of future dates. The <code>make_future_dataframe</code> function, which allows to specify the frequency and number of periods we would like to forecast into the future. By default, the frequency is set to days. Since we are using daily periodicity data in this example, we will leave freq at it’s default and set the periods argument to 365, indicating that we would like to forecast 365 days into the future.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">future <span class="ot" style="color: #003B4F;">=</span> m <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">make_future_dataframe</span>(<span class="dv" style="color: #AD0000;">120</span>,<span class="at" style="color: #657422;">freq =</span> <span class="st" style="color: #20794D;">"month"</span>)</span></code></pre></div>
</div>
<p>We can now use the <code>predict()</code> function to make predictions for each row in the future dataframe.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">forecast <span class="ot" style="color: #003B4F;">=</span> m <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">predict</span>(future)</span></code></pre></div>
</div>
<p>At this point, Prophet will have created a new dataframe assigned to the forecast variable that contains the forecasted values for future dates under a column called yhat, as well as uncertainty intervals and components for the forecast. We can visualize the forecast using Prophet’s built-in plot helper function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;">plot</span>(<span class="at" style="color: #657422;">x =</span> m, <span class="at" style="color: #657422;">fcst =</span> forecast, <span class="at" style="color: #657422;">uncertainty =</span> T,<span class="at" style="color: #657422;">plot_cap =</span> T,)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;">scale_y_continuous</span>(<span class="at" style="color: #657422;">name =</span> <span class="fu" style="color: #4758AB;">expression</span>(Temperature<span class="sc" style="color: #5E5E5E;">~</span>(degree<span class="sc" style="color: #5E5E5E;">*</span>C)))<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-3">  <span class="co" style="color: #5E5E5E;"># scale_x_date(date_breaks = "3 year", labels = scales::label_date_short())+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;">theme_bw</span>(<span class="at" style="color: #657422;">base_size =</span> <span class="dv" style="color: #AD0000;">12</span>)<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;">theme</span>(<span class="at" style="color: #657422;">axis.title.x =</span> <span class="fu" style="color: #4758AB;">element_blank</span>())<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;">add_changepoints_to_plot</span>(<span class="at" style="color: #657422;">m =</span> m, <span class="at" style="color: #657422;">threshold =</span> <span class="fl" style="color: #AD0000;">0.1</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-forecast" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index_files/figure-html/fig-forecast-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Forecasted sea surface temperature</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>If we want to visualize the individual forecast components, we can use Prophet’s built-in plot_components function:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;">plot_forecast_component</span>(<span class="at" style="color: #657422;">m =</span> m, <span class="at" style="color: #657422;">fcst =</span> forecast, <span class="at" style="color: #657422;">name =</span> <span class="st" style="color: #20794D;">"trend"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-trend1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index_files/figure-html/fig-trend1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Visualize the trend</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-references" class="level2">
<h2 class="anchored" data-anchor-id="cited-references">Cited references</h2>


</section>

 ]]></description>
  <category>code</category>
  <category>analysis</category>
  <category>spatial</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/index.html</guid>
  <pubDate>Fri, 12 Aug 2022 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/forecastingTimeseries/forecast.png" medium="image" type="image/png" height="54" width="144"/>
</item>
<item>
  <title>Teacher’s Employment Allocations by LGA</title>
  <dc:creator>Masjumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/newvisuals/index.html</link>
  <description><![CDATA[ 



<p>On April, 2022, the government of the United Republic of Tanzania approved permission of TAMISEMI to recruit and employ 9,800 primary and secondary school teachers, and 7,612 health experts. A total of 165,948 applied for the positions where for Health Cadres is 42,558, and the Teaching Cadre is 123,390.</p>
<p>Allocation of health and Teaching position in Centers of providing health services and schools have considered the requirements of employees in the respective regions. The allocation of new employees was based on the needs of employees in Councils with new Hospitals, Centers New health, and new completed clinics that faced shortage of medical staffs.</p>
<p>In addition, teachers were allocated to councils based on the division of space for each subject, and the qualifications. In this post, we are going to discuss</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;">require</span>(sf)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">require</span>(highcharter)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">require</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">require</span>(chorddiag)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">require</span>(treemapify)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(RColorBrewer)</span></code></pre></div>
</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">districts <span class="ot" style="color: #003B4F;">=</span> <span class="fu" style="color: #4758AB;">st_read</span>(<span class="st" style="color: #20794D;">"data/spatial/Districts and TC as 2020.shp"</span>, <span class="at" style="color: #657422;">quiet =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> janitor<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">clean_names</span>()</span>
<span id="cb2-2"></span>
<span id="cb2-3"></span>
<span id="cb2-4">district.tb <span class="ot" style="color: #003B4F;">=</span> districts <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;">st_point_on_surface</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-6">  wior<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">point_tb</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="fu" style="color: #4758AB;">across</span>(is.numeric, round, <span class="dv" style="color: #AD0000;">0</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;">separate</span>(new_dist20, <span class="at" style="color: #657422;">into =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"district"</span>, <span class="st" style="color: #20794D;">"lga"</span>), <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>)<span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;">separate</span>(district, <span class="at" style="color: #657422;">into =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"code"</span>, <span class="st" style="color: #20794D;">"aa"</span>), <span class="at" style="color: #657422;">sep =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">remove =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">code =</span> <span class="fu" style="color: #4758AB;">str_to_upper</span>(code),</span>
<span id="cb2-11">         <span class="at" style="color: #657422;">zone =</span> <span class="fu" style="color: #4758AB;">case_when</span>(region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">'Tanga'</span>, <span class="st" style="color: #20794D;">'Morogoro'</span>, <span class="st" style="color: #20794D;">'Pwani'</span>,<span class="st" style="color: #20794D;">'Dar-es-salaam'</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Coast"</span>,</span>
<span id="cb2-12">                          region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Arusha"</span>,<span class="st" style="color: #20794D;">"Kilimanjaro"</span>, <span class="st" style="color: #20794D;">"Manyara"</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Northern"</span>,</span>
<span id="cb2-13">                          region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">'Tabora'</span>, <span class="st" style="color: #20794D;">'Kigoma'</span>, <span class="st" style="color: #20794D;">'Shinyanga'</span>, <span class="st" style="color: #20794D;">'Kagera'</span>, <span class="st" style="color: #20794D;">'Mwanza'</span>,<span class="st" style="color: #20794D;">"Geita"</span>, <span class="st" style="color: #20794D;">'Mara'</span>, <span class="st" style="color: #20794D;">"Simiyu"</span>, <span class="st" style="color: #20794D;">"Katavi"</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Lake"</span>,</span>
<span id="cb2-14">                          region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Dodoma"</span>, <span class="st" style="color: #20794D;">"Singida"</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Central"</span>,</span>
<span id="cb2-15">                          region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"Iringa"</span>, <span class="st" style="color: #20794D;">"Mbeya"</span>, <span class="st" style="color: #20794D;">"Songwe"</span>, <span class="st" style="color: #20794D;">"Ruvuma"</span>, <span class="st" style="color: #20794D;">"Rukwa"</span>, <span class="st" style="color: #20794D;">"Njombe"</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Southern Highland"</span>,</span>
<span id="cb2-16">                          region_nam <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">'Lindi'</span>, <span class="st" style="color: #20794D;">'Mtwara'</span>,<span class="st" style="color: #20794D;">'Ruvuma'</span>)<span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"Southern"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;">filter</span>(<span class="sc" style="color: #5E5E5E;">!</span><span class="fu" style="color: #4758AB;">is.na</span>(zone))</span></code></pre></div>
</div>
<section id="tilemap" class="level2">
<h2 class="anchored" data-anchor-id="tilemap">Tilemap</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">district.tb <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">hchart</span>(<span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"tilemap"</span>, <span class="fu" style="color: #4758AB;">hcaes</span>(<span class="at" style="color: #657422;">x =</span> lon, <span class="at" style="color: #657422;">y =</span> lat, <span class="at" style="color: #657422;">name =</span> district, <span class="at" style="color: #657422;">group =</span> zone)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;">hc_chart</span>(<span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"tilemap"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;">hc_plotOptions</span>(</span>
<span id="cb3-5">    <span class="at" style="color: #657422;">series =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb3-6">      <span class="at" style="color: #657422;">dataLabels =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb3-7">        <span class="at" style="color: #657422;">enabled =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb3-8">        <span class="at" style="color: #657422;">format =</span> <span class="st" style="color: #20794D;">"{point.code}"</span>,</span>
<span id="cb3-9">        <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"white"</span>,</span>
<span id="cb3-10">        <span class="at" style="color: #657422;">style =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">textOutline =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span>
<span id="cb3-11">      )</span>
<span id="cb3-12">    )</span>
<span id="cb3-13">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;">hc_tooltip</span>(</span>
<span id="cb3-15">    <span class="at" style="color: #657422;">headerFormat =</span> <span class="st" style="color: #20794D;">""</span>,</span>
<span id="cb3-16">    <span class="at" style="color: #657422;">pointFormat =</span> <span class="st" style="color: #20794D;">"&lt;b&gt;{point.name}&lt;/b&gt; is in &lt;b&gt;{point.region_nam}&lt;/b&gt;"</span></span>
<span id="cb3-17">    ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-18">  <span class="fu" style="color: #4758AB;">hc_xAxis</span>(<span class="at" style="color: #657422;">visible =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-19">  <span class="fu" style="color: #4758AB;">hc_yAxis</span>(<span class="at" style="color: #657422;">visible =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-20">  <span class="fu" style="color: #4758AB;">hc_size</span>(<span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">800</span>, <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">600</span>)</span></code></pre></div>
<div class="cell-output-display">

<div id="htmlwidget-e0bbc13a619c6812b255" style="width:100%;height:866px;" class="highchart html-widget"></div>
<script type="application/json" data-for="htmlwidget-e0bbc13a619c6812b255">{"x":{"hc_opts":{"chart":{"reflow":true,"type":"tilemap","width":600,"height":800},"title":{"text":null},"yAxis":{"title":{"text":"lat"},"type":"linear","visible":false},"credits":{"enabled":false},"exporting":{"enabled":false},"boost":{"enabled":false},"plotOptions":{"series":{"label":{"enabled":false},"turboThreshold":0,"showInLegend":true,"dataLabels":{"enabled":true,"format":"{point.code}","color":"white","style":{"textOutline":false}}},"treemap":{"layoutAlgorithm":"squarified"},"scatter":{"marker":{"symbol":"circle"}}},"series":[{"name":"Central","data":[{"lon":35,"lat":-6,"region_nam":"Dodoma","region_cod":1,"district_c":6,"district":"Bahi","code":"BAH","aa":"i","lga":"DC","zone":"Central","x":35,"y":-6,"name":"Bahi"},{"lon":36,"lat":-6,"region_nam":"Dodoma","region_cod":1,"district_c":4,"district":"Chamwino","code":"CHA","aa":"mwino","lga":"DC","zone":"Central","x":36,"y":-6,"name":"Chamwino"},{"lon":36,"lat":-5,"region_nam":"Dodoma","region_cod":1,"district_c":7,"district":"Chemba","code":"CHE","aa":"mba","lga":"DC","zone":"Central","x":36,"y":-5,"name":"Chemba"},{"lon":36,"lat":-6,"region_nam":"Dodoma","region_cod":1,"district_c":5,"district":"Dodoma","code":"DOD","aa":"oma","lga":"CC","zone":"Central","x":36,"y":-6,"name":"Dodoma"},{"lon":36,"lat":-5,"region_nam":"Dodoma","region_cod":1,"district_c":1,"district":"Kondoa","code":"KON","aa":"doa","lga":"DC","zone":"Central","x":36,"y":-5,"name":"Kondoa"},{"lon":37,"lat":-6,"region_nam":"Dodoma","region_cod":1,"district_c":3,"district":"Kongwa","code":"KON","aa":"gwa","lga":"DC","zone":"Central","x":37,"y":-6,"name":"Kongwa"},{"lon":36,"lat":-7,"region_nam":"Dodoma","region_cod":1,"district_c":2,"district":"Mpwapwa","code":"MPW","aa":"apwa","lga":"DC","zone":"Central","x":36,"y":-7,"name":"Mpwapwa"},{"lon":35,"lat":-5,"region_nam":"Singida","region_cod":13,"district_c":5,"district":"Ikungi","code":"IKU","aa":"ngi","lga":"DC","zone":"Central","x":35,"y":-5,"name":"Ikungi"},{"lon":34,"lat":-4,"region_nam":"Singida","region_cod":13,"district_c":1,"district":"Iramba","code":"IRA","aa":"mba","lga":"DC","zone":"Central","x":34,"y":-4,"name":"Iramba"},{"lon":35,"lat":-6,"region_nam":"Singida","region_cod":13,"district_c":3,"district":"Manyoni","code":"MAN","aa":"yoni","lga":"DC","zone":"Central","x":35,"y":-6,"name":"Manyoni"},{"lon":35,"lat":-4,"region_nam":"Singida","region_cod":13,"district_c":6,"district":"Mkalama","code":"MKA","aa":"lama","lga":"DC","zone":"Central","x":35,"y":-4,"name":"Mkalama"},{"lon":35,"lat":-5,"region_nam":"Singida","region_cod":13,"district_c":2,"district":"Singida","code":"SIN","aa":"gida","lga":"DC","zone":"Central","x":35,"y":-5,"name":"Singida"},{"lon":35,"lat":-5,"region_nam":"Singida","region_cod":13,"district_c":4,"district":"Singida","code":"SIN","aa":"gida","lga":"MC","zone":"Central","x":35,"y":-5,"name":"Singida"},{"lon":34,"lat":-6,"region_nam":"Singida","region_cod":13,"district_c":7,"district":"Itigi","code":"ITI","aa":"gi","lga":"DC","zone":"Central","x":34,"y":-6,"name":"Itigi"},{"lon":36,"lat":-5,"region_nam":"Dodoma","region_cod":1,"district_c":8,"district":"Kondoa","code":"KON","aa":"doa","lga":"TC","zone":"Central","x":36,"y":-5,"name":"Kondoa"}],"type":"tilemap"},{"name":"Coast","data":[{"lon":39,"lat":-7,"region_nam":"Dar-es-salaam","region_cod":7,"district_c":2,"district":"Dar","code":"DAR","aa":"","lga":"es","zone":"Coast","x":39,"y":-7,"name":"Dar"},{"lon":39,"lat":-7,"region_nam":"Dar-es-salaam","region_cod":7,"district_c":1,"district":"Kinondoni","code":"KIN","aa":"ondoni","lga":"MC","zone":"Coast","x":39,"y":-7,"name":"Kinondoni"},{"lon":39,"lat":-7,"region_nam":"Dar-es-salaam","region_cod":7,"district_c":3,"district":"Temeke","code":"TEM","aa":"eke","lga":"MC","zone":"Coast","x":39,"y":-7,"name":"Temeke"},{"lon":37,"lat":-6,"region_nam":"Morogoro","region_cod":5,"district_c":7,"district":"Gairo","code":"GAI","aa":"ro","lga":"DC","zone":"Coast","x":37,"y":-6,"name":"Gairo"},{"lon":37,"lat":-8,"region_nam":"Morogoro","region_cod":5,"district_c":3,"district":"Mlimba","code":"MLI","aa":"mba","lga":"DC","zone":"Coast","x":37,"y":-8,"name":"Mlimba"},{"lon":37,"lat":-7,"region_nam":"Morogoro","region_cod":5,"district_c":1,"district":"Kilosa","code":"KIL","aa":"osa","lga":"DC","zone":"Coast","x":37,"y":-7,"name":"Kilosa"},{"lon":38,"lat":-7,"region_nam":"Morogoro","region_cod":5,"district_c":2,"district":"Morogoro","code":"MOR","aa":"ogoro","lga":"DC","zone":"Coast","x":38,"y":-7,"name":"Morogoro"},{"lon":38,"lat":-7,"region_nam":"Morogoro","region_cod":5,"district_c":5,"district":"Morogoro","code":"MOR","aa":"ogoro","lga":"MC","zone":"Coast","x":38,"y":-7,"name":"Morogoro"},{"lon":38,"lat":-7,"region_nam":"Morogoro","region_cod":5,"district_c":6,"district":"Mvomero","code":"MVO","aa":"mero","lga":"DC","zone":"Coast","x":38,"y":-7,"name":"Mvomero"},{"lon":37,"lat":-9,"region_nam":"Morogoro","region_cod":5,"district_c":4,"district":"Ulanga","code":"ULA","aa":"nga","lga":"DC","zone":"Coast","x":37,"y":-9,"name":"Ulanga"},{"lon":38,"lat":-6,"region_nam":"Pwani","region_cod":6,"district_c":9,"district":"Chalinze","code":"CHA","aa":"linze","lga":"DC","zone":"Coast","x":38,"y":-6,"name":"Chalinze"},{"lon":39,"lat":-7,"region_nam":"Pwani","region_cod":6,"district_c":2,"district":"Kibaha","code":"KIB","aa":"aha","lga":"DC","zone":"Coast","x":39,"y":-7,"name":"Kibaha"},{"lon":39,"lat":-7,"region_nam":"Pwani","region_cod":6,"district_c":7,"district":"Kibaha","code":"KIB","aa":"aha","lga":"TC","zone":"Coast","x":39,"y":-7,"name":"Kibaha"},{"lon":39,"lat":-7,"region_nam":"Pwani","region_cod":6,"district_c":3,"district":"Kisarawe","code":"KIS","aa":"arawe","lga":"DC","zone":"Coast","x":39,"y":-7,"name":"Kisarawe"},{"lon":40,"lat":-8,"region_nam":"Pwani","region_cod":6,"district_c":6,"district":"Mafia","code":"MAF","aa":"ia","lga":"DC","zone":"Coast","x":40,"y":-8,"name":"Mafia"},{"lon":39,"lat":-7,"region_nam":"Pwani","region_cod":6,"district_c":4,"district":"Mkuranga","code":"MKU","aa":"ranga","lga":"DC","zone":"Coast","x":39,"y":-7,"name":"Mkuranga"},{"lon":38,"lat":-8,"region_nam":"Pwani","region_cod":6,"district_c":5,"district":"Rufiji","code":"RUF","aa":"iji","lga":"DC","zone":"Coast","x":38,"y":-8,"name":"Rufiji"},{"lon":38,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":6,"district":"Handeni","code":"HAN","aa":"deni","lga":"DC","zone":"Coast","x":38,"y":-5,"name":"Handeni"},{"lon":38,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":10,"district":"Handeni","code":"HAN","aa":"deni","lga":"TC","zone":"Coast","x":38,"y":-5,"name":"Handeni"},{"lon":38,"lat":-6,"region_nam":"Tanga","region_cod":4,"district_c":7,"district":"Kilindi","code":"KIL","aa":"indi","lga":"DC","zone":"Coast","x":38,"y":-6,"name":"Kilindi"},{"lon":38,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":2,"district":"Korogwe","code":"KOR","aa":"ogwe","lga":"DC","zone":"Coast","x":38,"y":-5,"name":"Korogwe"},{"lon":38,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":9,"district":"Korogwe","code":"KOR","aa":"ogwe","lga":"TC","zone":"Coast","x":38,"y":-5,"name":"Korogwe"},{"lon":38,"lat":-4,"region_nam":"Tanga","region_cod":4,"district_c":1,"district":"Lushoto","code":"LUS","aa":"hoto","lga":"DC","zone":"Coast","x":38,"y":-4,"name":"Lushoto"},{"lon":39,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":8,"district":"Mkinga","code":"MKI","aa":"nga","lga":"DC","zone":"Coast","x":39,"y":-5,"name":"Mkinga"},{"lon":39,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":3,"district":"Muheza","code":"MUH","aa":"eza","lga":"DC","zone":"Coast","x":39,"y":-5,"name":"Muheza"},{"lon":39,"lat":-6,"region_nam":"Tanga","region_cod":4,"district_c":5,"district":"Pangani","code":"PAN","aa":"gani","lga":"DC","zone":"Coast","x":39,"y":-6,"name":"Pangani"},{"lon":39,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":4,"district":"Tanga","code":"TAN","aa":"ga","lga":"CC","zone":"Coast","x":39,"y":-5,"name":"Tanga"},{"lon":38,"lat":-5,"region_nam":"Tanga","region_cod":4,"district_c":11,"district":"Bumbuli","code":"BUM","aa":"buli","lga":"DC","zone":"Coast","x":38,"y":-5,"name":"Bumbuli"},{"lon":39,"lat":-6,"region_nam":"Pwani","region_cod":6,"district_c":1,"district":"Bagamoyo","code":"BAG","aa":"amoyo","lga":"DC","zone":"Coast","x":39,"y":-6,"name":"Bagamoyo"},{"lon":37,"lat":-8,"region_nam":"Morogoro","region_cod":5,"district_c":9,"district":"Ifakara","code":"IFA","aa":"kara","lga":"TC","zone":"Coast","x":37,"y":-8,"name":"Ifakara"},{"lon":39,"lat":-8,"region_nam":"Pwani","region_cod":6,"district_c":8,"district":"Kibiti","code":"KIB","aa":"iti","lga":"DC","zone":"Coast","x":39,"y":-8,"name":"Kibiti"},{"lon":39,"lat":-7,"region_nam":"Dar-es-salaam","region_cod":7,"district_c":5,"district":"Kigamboni","code":"KIG","aa":"amboni","lga":"MC","zone":"Coast","x":39,"y":-7,"name":"Kigamboni"},{"lon":36,"lat":-9,"region_nam":"Morogoro","region_cod":5,"district_c":8,"district":"Malinyi","code":"MAL","aa":"inyi","lga":"DC","zone":"Coast","x":36,"y":-9,"name":"Malinyi"},{"lon":39,"lat":-7,"region_nam":"Dar-es-salaam","region_cod":7,"district_c":4,"district":"Ubungo","code":"UBU","aa":"ngo","lga":"MC","zone":"Coast","x":39,"y":-7,"name":"Ubungo"}],"type":"tilemap"},{"name":"Lake","data":[{"lon":32,"lat":-4,"region_nam":"Geita","region_cod":25,"district_c":4,"district":"Bukombe","code":"BUK","aa":"ombe","lga":"DC","zone":"Lake","x":32,"y":-4,"name":"Bukombe"},{"lon":32,"lat":-3,"region_nam":"Geita","region_cod":25,"district_c":5,"district":"Chato","code":"CHA","aa":"to","lga":"DC","zone":"Lake","x":32,"y":-3,"name":"Chato"},{"lon":32,"lat":-3,"region_nam":"Geita","region_cod":25,"district_c":1,"district":"Geita","code":"GEI","aa":"ta","lga":"DC","zone":"Lake","x":32,"y":-3,"name":"Geita"},{"lon":32,"lat":-3,"region_nam":"Geita","region_cod":25,"district_c":3,"district":"Mbogwe","code":"MBO","aa":"gwe","lga":"DC","zone":"Lake","x":32,"y":-3,"name":"Mbogwe"},{"lon":33,"lat":-3,"region_nam":"Geita","region_cod":25,"district_c":2,"district":"Nyang'wale","code":"NYA","aa":"ng'wale","lga":"DC","zone":"Lake","x":33,"y":-3,"name":"Nyang'wale"},{"lon":31,"lat":-3,"region_nam":"Kagera","region_cod":18,"district_c":4,"district":"Biharamulo","code":"BIH","aa":"aramulo","lga":"DC","zone":"Lake","x":31,"y":-3,"name":"Biharamulo"},{"lon":32,"lat":-1,"region_nam":"Kagera","region_cod":18,"district_c":2,"district":"Bukoba","code":"BUK","aa":"oba","lga":"DC","zone":"Lake","x":32,"y":-1,"name":"Bukoba"},{"lon":32,"lat":-1,"region_nam":"Kagera","region_cod":18,"district_c":6,"district":"Bukoba","code":"BUK","aa":"oba","lga":"MC","zone":"Lake","x":32,"y":-1,"name":"Bukoba"},{"lon":31,"lat":-2,"region_nam":"Kagera","region_cod":18,"district_c":1,"district":"Karagwe","code":"KAR","aa":"agwe","lga":"DC","zone":"Lake","x":31,"y":-2,"name":"Karagwe"},{"lon":31,"lat":-1,"region_nam":"Kagera","region_cod":18,"district_c":8,"district":"Kyerwa","code":"KYE","aa":"rwa","lga":"DC","zone":"Lake","x":31,"y":-1,"name":"Kyerwa"},{"lon":31,"lat":-1,"region_nam":"Kagera","region_cod":18,"district_c":7,"district":"Missenyi","code":"MIS","aa":"senyi","lga":"DC","zone":"Lake","x":31,"y":-1,"name":"Missenyi"},{"lon":32,"lat":-2,"region_nam":"Kagera","region_cod":18,"district_c":3,"district":"Muleba","code":"MUL","aa":"eba","lga":"DC","zone":"Lake","x":32,"y":-2,"name":"Muleba"},{"lon":31,"lat":-3,"region_nam":"Kagera","region_cod":18,"district_c":5,"district":"Ngara","code":"NGA","aa":"ra","lga":"DC","zone":"Lake","x":31,"y":-3,"name":"Ngara"},{"lon":32,"lat":-6,"region_nam":"Katavi","region_cod":23,"district_c":3,"district":"Mlele","code":"MLE","aa":"le","lga":"DC","zone":"Lake","x":32,"y":-6,"name":"Mlele"},{"lon":31,"lat":-6,"region_nam":"Katavi","region_cod":23,"district_c":2,"district":"Mpanda","code":"MPA","aa":"nda","lga":"DC","zone":"Lake","x":31,"y":-6,"name":"Mpanda"},{"lon":31,"lat":-6,"region_nam":"Katavi","region_cod":23,"district_c":1,"district":"Mpanda","code":"MPA","aa":"nda","lga":"MC","zone":"Lake","x":31,"y":-6,"name":"Mpanda"},{"lon":30,"lat":-4,"region_nam":"Kigoma","region_cod":16,"district_c":6,"district":"Buhigwe","code":"BUH","aa":"igwe","lga":"DC","zone":"Lake","x":30,"y":-4,"name":"Buhigwe"},{"lon":31,"lat":-3,"region_nam":"Kigoma","region_cod":16,"district_c":7,"district":"Kakonko","code":"KAK","aa":"onko","lga":"DC","zone":"Lake","x":31,"y":-3,"name":"Kakonko"},{"lon":30,"lat":-4,"region_nam":"Kigoma","region_cod":16,"district_c":2,"district":"Kasulu","code":"KAS","aa":"ulu","lga":"DC","zone":"Lake","x":30,"y":-4,"name":"Kasulu"},{"lon":30,"lat":-5,"region_nam":"Kigoma","region_cod":16,"district_c":8,"district":"Kasulu","code":"KAS","aa":"ulu","lga":"TC","zone":"Lake","x":30,"y":-5,"name":"Kasulu"},{"lon":31,"lat":-4,"region_nam":"Kigoma","region_cod":16,"district_c":1,"district":"Kibondo","code":"KIB","aa":"ondo","lga":"DC","zone":"Lake","x":31,"y":-4,"name":"Kibondo"},{"lon":30,"lat":-5,"region_nam":"Kigoma","region_cod":16,"district_c":4,"district":"Kigoma","code":"KIG","aa":"oma","lga":"MC","zone":"Lake","x":30,"y":-5,"name":"Kigoma"},{"lon":30,"lat":-5,"region_nam":"Kigoma","region_cod":16,"district_c":3,"district":"Kigoma","code":"KIG","aa":"oma","lga":"DC","zone":"Lake","x":30,"y":-5,"name":"Kigoma"},{"lon":30,"lat":-6,"region_nam":"Kigoma","region_cod":16,"district_c":5,"district":"Uvinza","code":"UVI","aa":"nza","lga":"DC","zone":"Lake","x":30,"y":-6,"name":"Uvinza"},{"lon":33,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":4,"district":"Bunda","code":"BUN","aa":"da","lga":"DC","zone":"Lake","x":33,"y":-2,"name":"Bunda"},{"lon":34,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":3,"district":"Musoma","code":"MUS","aa":"oma","lga":"DC","zone":"Lake","x":34,"y":-2,"name":"Musoma"},{"lon":34,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":5,"district":"Musoma","code":"MUS","aa":"oma","lga":"MC","zone":"Lake","x":34,"y":-2,"name":"Musoma"},{"lon":34,"lat":-1,"region_nam":"Mara","region_cod":20,"district_c":6,"district":"Rorya","code":"ROR","aa":"ya","lga":"DC","zone":"Lake","x":34,"y":-1,"name":"Rorya"},{"lon":35,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":2,"district":"Serengeti","code":"SER","aa":"engeti","lga":"DC","zone":"Lake","x":35,"y":-2,"name":"Serengeti"},{"lon":35,"lat":-1,"region_nam":"Mara","region_cod":20,"district_c":1,"district":"Tarime","code":"TAR","aa":"ime","lga":"DC","zone":"Lake","x":35,"y":-1,"name":"Tarime"},{"lon":33,"lat":-2,"region_nam":"Mwanza","region_cod":19,"district_c":6,"district":"Ilemela","code":"ILE","aa":"mela","lga":"MC","zone":"Lake","x":33,"y":-2,"name":"Ilemela"},{"lon":33,"lat":-3,"region_nam":"Mwanza","region_cod":19,"district_c":4,"district":"Kwimba","code":"KWI","aa":"mba","lga":"DC","zone":"Lake","x":33,"y":-3,"name":"Kwimba"},{"lon":33,"lat":-3,"region_nam":"Mwanza","region_cod":19,"district_c":2,"district":"Magu","code":"MAG","aa":"u","lga":"DC","zone":"Lake","x":33,"y":-3,"name":"Magu"},{"lon":33,"lat":-3,"region_nam":"Mwanza","region_cod":19,"district_c":7,"district":"Misungwi","code":"MIS","aa":"ungwi","lga":"DC","zone":"Lake","x":33,"y":-3,"name":"Misungwi"},{"lon":33,"lat":-3,"region_nam":"Mwanza","region_cod":19,"district_c":3,"district":"Mwanza","code":"MWA","aa":"nza","lga":"CC","zone":"Lake","x":33,"y":-3,"name":"Mwanza"},{"lon":33,"lat":-3,"region_nam":"Mwanza","region_cod":19,"district_c":5,"district":"Sengerema","code":"SEN","aa":"gerema","lga":"DC","zone":"Lake","x":33,"y":-3,"name":"Sengerema"},{"lon":33,"lat":-2,"region_nam":"Mwanza","region_cod":19,"district_c":1,"district":"Ukerewe","code":"UKE","aa":"rewe","lga":"DC","zone":"Lake","x":33,"y":-2,"name":"Ukerewe"},{"lon":33,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":4,"district":"Msalala","code":"MSA","aa":"lala","lga":"DC","zone":"Lake","x":33,"y":-4,"name":"Msalala"},{"lon":33,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":5,"district":"Kahama","code":"KAH","aa":"ama","lga":"MC","zone":"Lake","x":33,"y":-4,"name":"Kahama"},{"lon":34,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":2,"district":"Kishapu","code":"KIS","aa":"hapu","lga":"DC","zone":"Lake","x":34,"y":-4,"name":"Kishapu"},{"lon":33,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":3,"district":"Shinyanga","code":"SHI","aa":"nyanga","lga":"DC","zone":"Lake","x":33,"y":-4,"name":"Shinyanga"},{"lon":33,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":1,"district":"Shinyanga","code":"SHI","aa":"nyanga","lga":"MC","zone":"Lake","x":33,"y":-4,"name":"Shinyanga"},{"lon":35,"lat":-3,"region_nam":"Simiyu","region_cod":24,"district_c":1,"district":"Bariadi","code":"BAR","aa":"iadi","lga":"DC","zone":"Lake","x":35,"y":-3,"name":"Bariadi"},{"lon":34,"lat":-2,"region_nam":"Simiyu","region_cod":24,"district_c":5,"district":"Busega","code":"BUS","aa":"ega","lga":"DC","zone":"Lake","x":34,"y":-2,"name":"Busega"},{"lon":35,"lat":-3,"region_nam":"Simiyu","region_cod":24,"district_c":2,"district":"Itilima","code":"ITI","aa":"lima","lga":"DC","zone":"Lake","x":35,"y":-3,"name":"Itilima"},{"lon":34,"lat":-3,"region_nam":"Simiyu","region_cod":24,"district_c":4,"district":"Maswa","code":"MAS","aa":"wa","lga":"DC","zone":"Lake","x":34,"y":-3,"name":"Maswa"},{"lon":34,"lat":-4,"region_nam":"Simiyu","region_cod":24,"district_c":3,"district":"Meatu","code":"MEA","aa":"tu","lga":"DC","zone":"Lake","x":34,"y":-4,"name":"Meatu"},{"lon":34,"lat":-4,"region_nam":"Tabora","region_cod":14,"district_c":2,"district":"Igunga","code":"IGU","aa":"nga","lga":"DC","zone":"Lake","x":34,"y":-4,"name":"Igunga"},{"lon":32,"lat":-5,"region_nam":"Tabora","region_cod":14,"district_c":7,"district":"Kaliua","code":"KAL","aa":"iua","lga":"DC","zone":"Lake","x":32,"y":-5,"name":"Kaliua"},{"lon":33,"lat":-4,"region_nam":"Tabora","region_cod":14,"district_c":1,"district":"Nzega","code":"NZE","aa":"ga","lga":"DC","zone":"Lake","x":33,"y":-4,"name":"Nzega"},{"lon":33,"lat":-6,"region_nam":"Tabora","region_cod":14,"district_c":5,"district":"Sikonge","code":"SIK","aa":"onge","lga":"DC","zone":"Lake","x":33,"y":-6,"name":"Sikonge"},{"lon":33,"lat":-5,"region_nam":"Tabora","region_cod":14,"district_c":6,"district":"Tabora","code":"TAB","aa":"ora","lga":"MC","zone":"Lake","x":33,"y":-5,"name":"Tabora"},{"lon":32,"lat":-5,"region_nam":"Tabora","region_cod":14,"district_c":4,"district":"Urambo","code":"URA","aa":"mbo","lga":"DC","zone":"Lake","x":32,"y":-5,"name":"Urambo"},{"lon":33,"lat":-5,"region_nam":"Tabora","region_cod":14,"district_c":3,"district":"Uyui","code":"UYU","aa":"i","lga":"DC","zone":"Lake","x":33,"y":-5,"name":"Uyui"},{"lon":34,"lat":-3,"region_nam":"Simiyu","region_cod":24,"district_c":6,"district":"Bariadi","code":"BAR","aa":"iadi","lga":"TC","zone":"Lake","x":34,"y":-3,"name":"Bariadi"},{"lon":32,"lat":-2,"region_nam":"Mwanza","region_cod":19,"district_c":8,"district":"Buchosa","code":"BUC","aa":"hosa","lga":"DC","zone":"Lake","x":32,"y":-2,"name":"Buchosa"},{"lon":34,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":8,"district":"Bunda","code":"BUN","aa":"da","lga":"TC","zone":"Lake","x":34,"y":-2,"name":"Bunda"},{"lon":32,"lat":-3,"region_nam":"Geita","region_cod":25,"district_c":6,"district":"Geita","code":"GEI","aa":"ta","lga":"TC","zone":"Lake","x":32,"y":-3,"name":"Geita"},{"lon":32,"lat":-4,"region_nam":"Shinyanga","region_cod":17,"district_c":6,"district":"Ushetu","code":"USH","aa":"etu","lga":"DC","zone":"Lake","x":32,"y":-4,"name":"Ushetu"},{"lon":32,"lat":-7,"region_nam":"Katavi","region_cod":23,"district_c":4,"district":"Mpimbwe","code":"MPI","aa":"mbwe","lga":"DC","zone":"Lake","x":32,"y":-7,"name":"Mpimbwe"},{"lon":31,"lat":-6,"region_nam":"Katavi","region_cod":23,"district_c":5,"district":"Nsimbo","code":"NSI","aa":"mbo","lga":"DC","zone":"Lake","x":31,"y":-6,"name":"Nsimbo"},{"lon":33,"lat":-4,"region_nam":"Tabora","region_cod":14,"district_c":8,"district":"Nzega","code":"NZE","aa":"ga","lga":"TC","zone":"Lake","x":33,"y":-4,"name":"Nzega"},{"lon":34,"lat":-1,"region_nam":"Mara","region_cod":20,"district_c":9,"district":"Tarime","code":"TAR","aa":"ime","lga":"TC","zone":"Lake","x":34,"y":-1,"name":"Tarime"},{"lon":34,"lat":-2,"region_nam":"Mara","region_cod":20,"district_c":7,"district":"Butiama","code":"BUT","aa":"iama","lga":"DC","zone":"Lake","x":34,"y":-2,"name":"Butiama"}],"type":"tilemap"},{"name":"Northern","data":[{"lon":37,"lat":-4,"region_nam":"Arusha","region_cod":2,"district_c":6,"district":"Arusha","code":"ARU","aa":"sha","lga":"DC","zone":"Northern","x":37,"y":-4,"name":"Arusha"},{"lon":37,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":3,"district":"Arusha","code":"ARU","aa":"sha","lga":"CC","zone":"Northern","x":37,"y":-3,"name":"Arusha"},{"lon":36,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":4,"district":"Karatu","code":"KAR","aa":"atu","lga":"DC","zone":"Northern","x":36,"y":-3,"name":"Karatu"},{"lon":36,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":7,"district":"Longido","code":"LON","aa":"gido","lga":"DC","zone":"Northern","x":36,"y":-3,"name":"Longido"},{"lon":37,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":2,"district":"Meru","code":"MER","aa":"u","lga":"DC","zone":"Northern","x":37,"y":-3,"name":"Meru"},{"lon":36,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":1,"district":"Monduli","code":"MON","aa":"duli","lga":"DC","zone":"Northern","x":36,"y":-3,"name":"Monduli"},{"lon":36,"lat":-3,"region_nam":"Arusha","region_cod":2,"district_c":5,"district":"Ngorongoro","code":"NGO","aa":"rongoro","lga":"DC","zone":"Northern","x":36,"y":-3,"name":"Ngorongoro"},{"lon":37,"lat":-3,"region_nam":"Kilimanjaro","region_cod":3,"district_c":5,"district":"Hai","code":"HAI","aa":"","lga":"DC","zone":"Northern","x":37,"y":-3,"name":"Hai"},{"lon":37,"lat":-3,"region_nam":"Kilimanjaro","region_cod":3,"district_c":4,"district":"Moshi","code":"MOS","aa":"hi","lga":"DC","zone":"Northern","x":37,"y":-3,"name":"Moshi"},{"lon":37,"lat":-3,"region_nam":"Kilimanjaro","region_cod":3,"district_c":6,"district":"Moshi","code":"MOS","aa":"hi","lga":"MC","zone":"Northern","x":37,"y":-3,"name":"Moshi"},{"lon":38,"lat":-4,"region_nam":"Kilimanjaro","region_cod":3,"district_c":2,"district":"Mwanga","code":"MWA","aa":"nga","lga":"DC","zone":"Northern","x":38,"y":-4,"name":"Mwanga"},{"lon":38,"lat":-3,"region_nam":"Kilimanjaro","region_cod":3,"district_c":1,"district":"Rombo","code":"ROM","aa":"bo","lga":"DC","zone":"Northern","x":38,"y":-3,"name":"Rombo"},{"lon":38,"lat":-4,"region_nam":"Kilimanjaro","region_cod":3,"district_c":3,"district":"Same","code":"SAM","aa":"e","lga":"DC","zone":"Northern","x":38,"y":-4,"name":"Same"},{"lon":37,"lat":-3,"region_nam":"Kilimanjaro","region_cod":3,"district_c":7,"district":"Siha","code":"SIH","aa":"a","lga":"DC","zone":"Northern","x":37,"y":-3,"name":"Siha"},{"lon":36,"lat":-4,"region_nam":"Manyara","region_cod":21,"district_c":1,"district":"Babati","code":"BAB","aa":"ati","lga":"DC","zone":"Northern","x":36,"y":-4,"name":"Babati"},{"lon":36,"lat":-4,"region_nam":"Manyara","region_cod":21,"district_c":6,"district":"Babati","code":"BAB","aa":"ati","lga":"TC","zone":"Northern","x":36,"y":-4,"name":"Babati"},{"lon":35,"lat":-5,"region_nam":"Manyara","region_cod":21,"district_c":2,"district":"Hanang","code":"HAN","aa":"ang","lga":"DC","zone":"Northern","x":35,"y":-5,"name":"Hanang"},{"lon":37,"lat":-5,"region_nam":"Manyara","region_cod":21,"district_c":5,"district":"Kiteto","code":"KIT","aa":"eto","lga":"DC","zone":"Northern","x":37,"y":-5,"name":"Kiteto"},{"lon":35,"lat":-4,"region_nam":"Manyara","region_cod":21,"district_c":3,"district":"Mbulu","code":"MBU","aa":"lu","lga":"DC","zone":"Northern","x":35,"y":-4,"name":"Mbulu"},{"lon":37,"lat":-4,"region_nam":"Manyara","region_cod":21,"district_c":4,"district":"Simanjiro","code":"SIM","aa":"anjiro","lga":"DC","zone":"Northern","x":37,"y":-4,"name":"Simanjiro"},{"lon":36,"lat":-4,"region_nam":"Manyara","region_cod":21,"district_c":7,"district":"Mbulu","code":"MBU","aa":"lu","lga":"TC","zone":"Northern","x":36,"y":-4,"name":"Mbulu"}],"type":"tilemap"},{"name":"Southern","data":[{"lon":39,"lat":-9,"region_nam":"Lindi","region_cod":8,"district_c":1,"district":"Kilwa","code":"KIL","aa":"wa","lga":"DC","zone":"Southern","x":39,"y":-9,"name":"Kilwa"},{"lon":39,"lat":-10,"region_nam":"Lindi","region_cod":8,"district_c":2,"district":"Lindi","code":"LIN","aa":"di","lga":"DC","zone":"Southern","x":39,"y":-10,"name":"Lindi"},{"lon":40,"lat":-10,"region_nam":"Lindi","region_cod":8,"district_c":6,"district":"Lindi","code":"LIN","aa":"di","lga":"MC","zone":"Southern","x":40,"y":-10,"name":"Lindi"},{"lon":38,"lat":-9,"region_nam":"Lindi","region_cod":8,"district_c":4,"district":"Liwale","code":"LIW","aa":"ale","lga":"DC","zone":"Southern","x":38,"y":-9,"name":"Liwale"},{"lon":38,"lat":-10,"region_nam":"Lindi","region_cod":8,"district_c":3,"district":"Nachingwea","code":"NAC","aa":"hingwea","lga":"DC","zone":"Southern","x":38,"y":-10,"name":"Nachingwea"},{"lon":39,"lat":-10,"region_nam":"Lindi","region_cod":8,"district_c":5,"district":"Ruangwa","code":"RUA","aa":"ngwa","lga":"DC","zone":"Southern","x":39,"y":-10,"name":"Ruangwa"},{"lon":39,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":3,"district":"Masasi","code":"MAS","aa":"asi","lga":"DC","zone":"Southern","x":39,"y":-11,"name":"Masasi"},{"lon":39,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":7,"district":"Masasi","code":"MAS","aa":"asi","lga":"TC","zone":"Southern","x":39,"y":-11,"name":"Masasi"},{"lon":40,"lat":-10,"region_nam":"Mtwara","region_cod":9,"district_c":1,"district":"Mtwara","code":"MTW","aa":"ara","lga":"DC","zone":"Southern","x":40,"y":-10,"name":"Mtwara"},{"lon":40,"lat":-10,"region_nam":"Mtwara","region_cod":9,"district_c":5,"district":"Mtwara","code":"MTW","aa":"ara","lga":"MC","zone":"Southern","x":40,"y":-10,"name":"Mtwara"},{"lon":38,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":6,"district":"Nanyumbu","code":"NAN","aa":"yumbu","lga":"DC","zone":"Southern","x":38,"y":-11,"name":"Nanyumbu"},{"lon":39,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":2,"district":"Newala","code":"NEW","aa":"ala","lga":"DC","zone":"Southern","x":39,"y":-11,"name":"Newala"},{"lon":40,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":4,"district":"Tandahimba","code":"TAN","aa":"dahimba","lga":"DC","zone":"Southern","x":40,"y":-11,"name":"Tandahimba"},{"lon":40,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":8,"district":"Nanyamba","code":"NAN","aa":"yamba","lga":"TC","zone":"Southern","x":40,"y":-11,"name":"Nanyamba"},{"lon":39,"lat":-11,"region_nam":"Mtwara","region_cod":9,"district_c":9,"district":"Newala","code":"NEW","aa":"ala","lga":"TC","zone":"Southern","x":39,"y":-11,"name":"Newala"}],"type":"tilemap"},{"name":"Southern Highland","data":[{"lon":35,"lat":-8,"region_nam":"Iringa","region_cod":11,"district_c":1,"district":"Iringa","code":"IRI","aa":"nga","lga":"DC","zone":"Southern Highland","x":35,"y":-8,"name":"Iringa"},{"lon":36,"lat":-8,"region_nam":"Iringa","region_cod":11,"district_c":3,"district":"Iringa","code":"IRI","aa":"nga","lga":"MC","zone":"Southern Highland","x":36,"y":-8,"name":"Iringa"},{"lon":36,"lat":-8,"region_nam":"Iringa","region_cod":11,"district_c":4,"district":"Kilolo","code":"KIL","aa":"olo","lga":"DC","zone":"Southern Highland","x":36,"y":-8,"name":"Kilolo"},{"lon":35,"lat":-8,"region_nam":"Iringa","region_cod":11,"district_c":5,"district":"Mafinga","code":"MAF","aa":"inga","lga":"TC","zone":"Southern Highland","x":35,"y":-8,"name":"Mafinga"},{"lon":35,"lat":-9,"region_nam":"Iringa","region_cod":11,"district_c":2,"district":"Mufindi","code":"MUF","aa":"indi","lga":"DC","zone":"Southern Highland","x":35,"y":-9,"name":"Mufindi"},{"lon":33,"lat":-8,"region_nam":"Mbeya","region_cod":12,"district_c":1,"district":"Chunya","code":"CHU","aa":"nya","lga":"DC","zone":"Southern Highland","x":33,"y":-8,"name":"Chunya"},{"lon":33,"lat":-9,"region_nam":"Songwe","region_cod":26,"district_c":1,"district":"Ileje","code":"ILE","aa":"je","lga":"DC","zone":"Southern Highland","x":33,"y":-9,"name":"Ileje"},{"lon":34,"lat":-10,"region_nam":"Mbeya","region_cod":12,"district_c":3,"district":"Kyela","code":"KYE","aa":"la","lga":"DC","zone":"Southern Highland","x":34,"y":-10,"name":"Kyela"},{"lon":34,"lat":-8,"region_nam":"Mbeya","region_cod":12,"district_c":6,"district":"Mbarali","code":"MBA","aa":"rali","lga":"DC","zone":"Southern Highland","x":34,"y":-8,"name":"Mbarali"},{"lon":33,"lat":-9,"region_nam":"Mbeya","region_cod":12,"district_c":2,"district":"Mbeya","code":"MBE","aa":"ya","lga":"DC","zone":"Southern Highland","x":33,"y":-9,"name":"Mbeya"},{"lon":33,"lat":-9,"region_nam":"Mbeya","region_cod":12,"district_c":5,"district":"Mbeya","code":"MBE","aa":"ya","lga":"CC","zone":"Southern Highland","x":33,"y":-9,"name":"Mbeya"},{"lon":33,"lat":-9,"region_nam":"Songwe","region_cod":26,"district_c":2,"district":"Mbozi","code":"MBO","aa":"zi","lga":"DC","zone":"Southern Highland","x":33,"y":-9,"name":"Mbozi"},{"lon":32,"lat":-9,"region_nam":"Songwe","region_cod":26,"district_c":3,"district":"Momba","code":"MOM","aa":"ba","lga":"DC","zone":"Southern Highland","x":32,"y":-9,"name":"Momba"},{"lon":34,"lat":-9,"region_nam":"Mbeya","region_cod":12,"district_c":4,"district":"Rungwe","code":"RUN","aa":"gwe","lga":"DC","zone":"Southern Highland","x":34,"y":-9,"name":"Rungwe"},{"lon":33,"lat":-9,"region_nam":"Songwe","region_cod":26,"district_c":4,"district":"Tunduma","code":"TUN","aa":"duma","lga":"TC","zone":"Southern Highland","x":33,"y":-9,"name":"Tunduma"},{"lon":35,"lat":-10,"region_nam":"Njombe","region_cod":22,"district_c":5,"district":"Ludewa","code":"LUD","aa":"ewa","lga":"DC","zone":"Southern Highland","x":35,"y":-10,"name":"Ludewa"},{"lon":35,"lat":-9,"region_nam":"Njombe","region_cod":22,"district_c":6,"district":"Makambako","code":"MAK","aa":"ambako","lga":"TC","zone":"Southern Highland","x":35,"y":-9,"name":"Makambako"},{"lon":34,"lat":-9,"region_nam":"Njombe","region_cod":22,"district_c":3,"district":"Makete","code":"MAK","aa":"ete","lga":"DC","zone":"Southern Highland","x":34,"y":-9,"name":"Makete"},{"lon":35,"lat":-9,"region_nam":"Njombe","region_cod":22,"district_c":4,"district":"Njombe","code":"NJO","aa":"mbe","lga":"DC","zone":"Southern Highland","x":35,"y":-9,"name":"Njombe"},{"lon":35,"lat":-9,"region_nam":"Njombe","region_cod":22,"district_c":1,"district":"Njombe","code":"NJO","aa":"mbe","lga":"TC","zone":"Southern Highland","x":35,"y":-9,"name":"Njombe"},{"lon":35,"lat":-9,"region_nam":"Njombe","region_cod":22,"district_c":2,"district":"Wanging'ombe","code":"WAN","aa":"ging'ombe","lga":"DC","zone":"Southern Highland","x":35,"y":-9,"name":"Wanging'ombe"},{"lon":32,"lat":-9,"region_nam":"Rukwa","region_cod":15,"district_c":1,"district":"Kalambo","code":"KAL","aa":"ambo","lga":"DC","zone":"Southern Highland","x":32,"y":-9,"name":"Kalambo"},{"lon":31,"lat":-8,"region_nam":"Rukwa","region_cod":15,"district_c":3,"district":"Nkasi","code":"NKA","aa":"si","lga":"DC","zone":"Southern Highland","x":31,"y":-8,"name":"Nkasi"},{"lon":32,"lat":-8,"region_nam":"Rukwa","region_cod":15,"district_c":2,"district":"Sumbawanga","code":"SUM","aa":"bawanga","lga":"DC","zone":"Southern Highland","x":32,"y":-8,"name":"Sumbawanga"},{"lon":32,"lat":-8,"region_nam":"Rukwa","region_cod":15,"district_c":4,"district":"Sumbawanga","code":"SUM","aa":"bawanga","lga":"MC","zone":"Southern Highland","x":32,"y":-8,"name":"Sumbawanga"},{"lon":35,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":3,"district":"Mbinga","code":"MBI","aa":"nga","lga":"DC","zone":"Southern Highland","x":35,"y":-11,"name":"Mbinga"},{"lon":36,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":5,"district":"Namtumbo","code":"NAM","aa":"tumbo","lga":"DC","zone":"Southern Highland","x":36,"y":-11,"name":"Namtumbo"},{"lon":35,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":6,"district":"Nyasa","code":"NYA","aa":"sa","lga":"DC","zone":"Southern Highland","x":35,"y":-11,"name":"Nyasa"},{"lon":36,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":2,"district":"Songea","code":"SON","aa":"gea","lga":"DC","zone":"Southern Highland","x":36,"y":-11,"name":"Songea"},{"lon":36,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":4,"district":"Songea","code":"SON","aa":"gea","lga":"MC","zone":"Southern Highland","x":36,"y":-11,"name":"Songea"},{"lon":37,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":1,"district":"Tunduru","code":"TUN","aa":"duru","lga":"DC","zone":"Southern Highland","x":37,"y":-11,"name":"Tunduru"},{"lon":34,"lat":-9,"region_nam":"Mbeya","region_cod":12,"district_c":7,"district":"Busokelo","code":"BUS","aa":"okelo","lga":"DC","zone":"Southern Highland","x":34,"y":-9,"name":"Busokelo"},{"lon":35,"lat":-10,"region_nam":"Ruvuma","region_cod":10,"district_c":7,"district":"Madaba","code":"MAD","aa":"aba","lga":"DC","zone":"Southern Highland","x":35,"y":-10,"name":"Madaba"},{"lon":35,"lat":-11,"region_nam":"Ruvuma","region_cod":10,"district_c":8,"district":"Mbinga","code":"MBI","aa":"nga","lga":"TC","zone":"Southern Highland","x":35,"y":-11,"name":"Mbinga"},{"lon":33,"lat":-8,"region_nam":"Songwe","region_cod":26,"district_c":5,"district":"Songwe","code":"SON","aa":"gwe","lga":"DC","zone":"Southern Highland","x":33,"y":-8,"name":"Songwe"}],"type":"tilemap"}],"xAxis":{"type":"linear","title":{"text":"lon"},"visible":false},"tooltip":{"headerFormat":"","pointFormat":"<b>{point.name}<\/b> is in <b>{point.region_nam}<\/b>"}},"theme":{"chart":{"backgroundColor":"transparent"},"colors":["#7cb5ec","#434348","#90ed7d","#f7a35c","#8085e9","#f15c80","#e4d354","#2b908f","#f45b5b","#91e8e1"]},"conf_opts":{"global":{"Date":null,"VMLRadialGradientURL":"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png","canvasToolsURL":"http =//code.highcharts.com/list(version)/modules/canvas-tools.js","getTimezoneOffset":null,"timezoneOffset":0,"useUTC":true},"lang":{"contextButtonTitle":"Chart context menu","decimalPoint":".","downloadCSV":"Download CSV","downloadJPEG":"Download JPEG image","downloadPDF":"Download PDF document","downloadPNG":"Download PNG image","downloadSVG":"Download SVG vector image","downloadXLS":"Download XLS","drillUpText":"◁ Back to {series.name}","exitFullscreen":"Exit from full screen","exportData":{"annotationHeader":"Annotations","categoryDatetimeHeader":"DateTime","categoryHeader":"Category"},"hideData":"Hide data table","invalidDate":null,"loading":"Loading...","months":["January","February","March","April","May","June","July","August","September","October","November","December"],"noData":"No data to display","numericSymbolMagnitude":1000,"numericSymbols":["k","M","G","T","P","E"],"printChart":"Print chart","resetZoom":"Reset zoom","resetZoomTitle":"Reset zoom level 1:1","shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"shortWeekdays":["Sat","Sun","Mon","Tue","Wed","Thu","Fri"],"thousandsSep":" ","viewData":"View data table","viewFullscreen":"View in full screen","weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]}},"type":"chart","fonts":[],"debug":false},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="packedbubble" class="level2">
<h2 class="anchored" data-anchor-id="packedbubble">packedbubble</h2>
<p>A bubble chart requires three dimensions of data; the x-value and y-value to position the bubble along the value axes and a third value for its volume. Packed Bubble charts have a simpler data structure, a flat, one-dimensional array with volumes is sufficient. The bubble’s x/y position is automatically calculated using an algorithm that packs the bubbles in a cluster. The series data point configuration has support for setting colors and label values. Drag’n drop feature was also added to give the user a chance to quickly move one bubble between series and then check how their relations will change.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">walimu.lga <span class="ot" style="color: #003B4F;">=</span> walimu.clean <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;">separate</span>(halmashauri, <span class="at" style="color: #657422;">into =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"district"</span>, <span class="st" style="color: #20794D;">"b"</span>, <span class="st" style="color: #20794D;">"c"</span>), <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">unite</span>(<span class="at" style="color: #657422;">col =</span> code, b<span class="sc" style="color: #5E5E5E;">:</span>c, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">" "</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">lga =</span> <span class="fu" style="color: #4758AB;">case_when</span>(code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"District Council"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"DC"</span>,</span>
<span id="cb4-5">                         code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Municipal Council"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"MC"</span>,</span>
<span id="cb4-6">                         code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"City Council"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"CC"</span>,</span>
<span id="cb4-7">                         code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Town Council"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"TC"</span>,</span>
<span id="cb4-8">                         code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Mikindani Municipal"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"MC"</span>,</span>
<span id="cb4-9">                         code <span class="sc" style="color: #5E5E5E;">==</span> <span class="st" style="color: #20794D;">"Ujiji Municipal"</span><span class="sc" style="color: #5E5E5E;">~</span><span class="st" style="color: #20794D;">"MC"</span>))</span>
<span id="cb4-10"></span>
<span id="cb4-11">  </span>
<span id="cb4-12">walimu.lga.freq <span class="ot" style="color: #003B4F;">=</span> walimu.lga <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;">group_by</span>(district, lga) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;">count</span>()</span>
<span id="cb4-15"></span>
<span id="cb4-16">district.walimu <span class="ot" style="color: #003B4F;">=</span> district.tb <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-17">  <span class="fu" style="color: #4758AB;">left_join</span>(walimu.lga.freq) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-18">  <span class="fu" style="color: #4758AB;">select</span>(region_nam, zone, n, district)<span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-19">  <span class="fu" style="color: #4758AB;">separate</span>(district, <span class="at" style="color: #657422;">into =</span> <span class="fu" style="color: #4758AB;">c</span>(<span class="st" style="color: #20794D;">"code"</span>, <span class="st" style="color: #20794D;">"aa"</span>), <span class="at" style="color: #657422;">sep =</span> <span class="dv" style="color: #AD0000;">3</span>, <span class="at" style="color: #657422;">remove =</span> <span class="cn" style="color: #8f5902;">FALSE</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">code =</span> <span class="fu" style="color: #4758AB;">str_to_upper</span>(code)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb4-21">  <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>aa)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">hc <span class="ot" style="color: #003B4F;">=</span> district.walimu <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">   <span class="fu" style="color: #4758AB;">hchart</span>(<span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"packedbubble"</span>, <span class="fu" style="color: #4758AB;">hcaes</span>(<span class="at" style="color: #657422;">name =</span> district, <span class="at" style="color: #657422;">value =</span> n, <span class="at" style="color: #657422;">group =</span> zone))</span>
<span id="cb5-3"></span>
<span id="cb5-4"></span>
<span id="cb5-5"></span>
<span id="cb5-6">q95 <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">as.numeric</span>(<span class="fu" style="color: #4758AB;">quantile</span>(district.walimu<span class="sc" style="color: #5E5E5E;">$</span>n, .<span class="dv" style="color: #AD0000;">95</span>, <span class="at" style="color: #657422;">na.rm =</span> <span class="cn" style="color: #8f5902;">TRUE</span>))</span>
<span id="cb5-7"></span>
<span id="cb5-8">hc <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;">hc_tooltip</span>(</span>
<span id="cb5-10">    <span class="at" style="color: #657422;">useHTML =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb5-11">    <span class="at" style="color: #657422;">pointFormat =</span> <span class="st" style="color: #20794D;">"&lt;b&gt;{point.name}:&lt;/b&gt; {point.n}"</span></span>
<span id="cb5-12">  ) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;">hc_plotOptions</span>(</span>
<span id="cb5-14">    <span class="at" style="color: #657422;">packedbubble =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb5-15">      <span class="at" style="color: #657422;">maxSize =</span> <span class="st" style="color: #20794D;">"150%"</span>,</span>
<span id="cb5-16">      <span class="at" style="color: #657422;">zMin =</span> <span class="dv" style="color: #AD0000;">0</span>,</span>
<span id="cb5-17">      <span class="at" style="color: #657422;">layoutAlgorithm =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb5-18">        <span class="at" style="color: #657422;">gravitationalConstant =</span>  <span class="fl" style="color: #AD0000;">0.05</span>,</span>
<span id="cb5-19">        <span class="at" style="color: #657422;">splitSeries =</span>  <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="co" style="color: #5E5E5E;"># TRUE to group points</span></span>
<span id="cb5-20">        <span class="at" style="color: #657422;">seriesInteraction =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb5-21">        <span class="at" style="color: #657422;">dragBetweenSeries =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb5-22">        <span class="at" style="color: #657422;">parentNodeLimit =</span> <span class="cn" style="color: #8f5902;">TRUE</span></span>
<span id="cb5-23">      ),</span>
<span id="cb5-24">      <span class="at" style="color: #657422;">dataLabels =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb5-25">        <span class="at" style="color: #657422;">enabled =</span> <span class="cn" style="color: #8f5902;">TRUE</span>,</span>
<span id="cb5-26">        <span class="at" style="color: #657422;">format =</span> <span class="st" style="color: #20794D;">"{point.code}"</span>,</span>
<span id="cb5-27">        <span class="at" style="color: #657422;">filter =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb5-28">          <span class="at" style="color: #657422;">property =</span> <span class="st" style="color: #20794D;">"y"</span>,</span>
<span id="cb5-29">          <span class="at" style="color: #657422;">operator =</span> <span class="st" style="color: #20794D;">"&gt;"</span>,</span>
<span id="cb5-30">          <span class="at" style="color: #657422;">value =</span> q95</span>
<span id="cb5-31">        ),</span>
<span id="cb5-32">        <span class="at" style="color: #657422;">style =</span> <span class="fu" style="color: #4758AB;">list</span>(</span>
<span id="cb5-33">          <span class="at" style="color: #657422;">color =</span> <span class="st" style="color: #20794D;">"black"</span>,</span>
<span id="cb5-34">          <span class="at" style="color: #657422;">textOutline =</span> <span class="st" style="color: #20794D;">"none"</span>,</span>
<span id="cb5-35">          <span class="at" style="color: #657422;">fontWeight =</span> <span class="st" style="color: #20794D;">"normal"</span></span>
<span id="cb5-36">        )</span>
<span id="cb5-37">      )</span>
<span id="cb5-38">    )</span>
<span id="cb5-39">  )</span></code></pre></div>
<div class="cell-output-display">

<div id="htmlwidget-36a18b2682cff5dbf001" style="width:100%;height:464px;" class="highchart html-widget"></div>
<script type="application/json" data-for="htmlwidget-36a18b2682cff5dbf001">{"x":{"hc_opts":{"chart":{"reflow":true},"title":{"text":null},"yAxis":{"title":{"text":[]}},"credits":{"enabled":false},"exporting":{"enabled":false},"boost":{"enabled":false},"plotOptions":{"series":{"label":{"enabled":false},"turboThreshold":0,"showInLegend":true},"treemap":{"layoutAlgorithm":"squarified"},"scatter":{"marker":{"symbol":"circle"}},"packedbubble":{"maxSize":"150%","zMin":0,"layoutAlgorithm":{"gravitationalConstant":0.05,"splitSeries":true,"seriesInteraction":true,"dragBetweenSeries":true,"parentNodeLimit":true},"dataLabels":{"enabled":true,"format":"{point.code}","filter":{"property":"y","operator":">","value":116.3},"style":{"color":"black","textOutline":"none","fontWeight":"normal"}}}},"series":[{"name":"Central","data":[{"region_nam":"Dodoma","zone":"Central","n":65,"district":"Bahi","code":"BAH","name":"Bahi","value":65},{"region_nam":"Dodoma","zone":"Central","n":100,"district":"Chamwino","code":"CHA","name":"Chamwino","value":100},{"region_nam":"Dodoma","zone":"Central","n":95,"district":"Chemba","code":"CHE","name":"Chemba","value":95},{"region_nam":"Dodoma","zone":"Central","n":57,"district":"Dodoma","code":"DOD","name":"Dodoma","value":57},{"region_nam":"Dodoma","zone":"Central","n":86,"district":"Kondoa","code":"KON","name":"Kondoa","value":86},{"region_nam":"Dodoma","zone":"Central","n":113,"district":"Kongwa","code":"KON","name":"Kongwa","value":113},{"region_nam":"Dodoma","zone":"Central","n":95,"district":"Mpwapwa","code":"MPW","name":"Mpwapwa","value":95},{"region_nam":"Singida","zone":"Central","n":145,"district":"Ikungi","code":"IKU","name":"Ikungi","value":145},{"region_nam":"Singida","zone":"Central","n":75,"district":"Iramba","code":"IRA","name":"Iramba","value":75},{"region_nam":"Singida","zone":"Central","n":45,"district":"Manyoni","code":"MAN","name":"Manyoni","value":45},{"region_nam":"Singida","zone":"Central","n":70,"district":"Mkalama","code":"MKA","name":"Mkalama","value":70},{"region_nam":"Singida","zone":"Central","n":68,"district":"Singida","code":"SIN","name":"Singida","value":68},{"region_nam":"Singida","zone":"Central","n":21,"district":"Singida","code":"SIN","name":"Singida","value":21},{"region_nam":"Singida","zone":"Central","n":78,"district":"Itigi","code":"ITI","name":"Itigi","value":78},{"region_nam":"Dodoma","zone":"Central","n":8,"district":"Kondoa","code":"KON","name":"Kondoa","value":8}],"type":"packedbubble"},{"name":"Coast","data":[{"region_nam":"Dar-es-salaam","zone":"Coast","n":null,"district":"Dar","code":"DAR","name":"Dar","value":null},{"region_nam":"Dar-es-salaam","zone":"Coast","n":32,"district":"Kinondoni","code":"KIN","name":"Kinondoni","value":32},{"region_nam":"Dar-es-salaam","zone":"Coast","n":25,"district":"Temeke","code":"TEM","name":"Temeke","value":25},{"region_nam":"Morogoro","zone":"Coast","n":58,"district":"Gairo","code":"GAI","name":"Gairo","value":58},{"region_nam":"Morogoro","zone":"Coast","n":69,"district":"Mlimba","code":"MLI","name":"Mlimba","value":69},{"region_nam":"Morogoro","zone":"Coast","n":129,"district":"Kilosa","code":"KIL","name":"Kilosa","value":129},{"region_nam":"Morogoro","zone":"Coast","n":78,"district":"Morogoro","code":"MOR","name":"Morogoro","value":78},{"region_nam":"Morogoro","zone":"Coast","n":27,"district":"Morogoro","code":"MOR","name":"Morogoro","value":27},{"region_nam":"Morogoro","zone":"Coast","n":88,"district":"Mvomero","code":"MVO","name":"Mvomero","value":88},{"region_nam":"Morogoro","zone":"Coast","n":18,"district":"Ulanga","code":"ULA","name":"Ulanga","value":18},{"region_nam":"Pwani","zone":"Coast","n":43,"district":"Chalinze","code":"CHA","name":"Chalinze","value":43},{"region_nam":"Pwani","zone":"Coast","n":6,"district":"Kibaha","code":"KIB","name":"Kibaha","value":6},{"region_nam":"Pwani","zone":"Coast","n":7,"district":"Kibaha","code":"KIB","name":"Kibaha","value":7},{"region_nam":"Pwani","zone":"Coast","n":18,"district":"Kisarawe","code":"KIS","name":"Kisarawe","value":18},{"region_nam":"Pwani","zone":"Coast","n":2,"district":"Mafia","code":"MAF","name":"Mafia","value":2},{"region_nam":"Pwani","zone":"Coast","n":73,"district":"Mkuranga","code":"MKU","name":"Mkuranga","value":73},{"region_nam":"Pwani","zone":"Coast","n":29,"district":"Rufiji","code":"RUF","name":"Rufiji","value":29},{"region_nam":"Tanga","zone":"Coast","n":71,"district":"Handeni","code":"HAN","name":"Handeni","value":71},{"region_nam":"Tanga","zone":"Coast","n":14,"district":"Handeni","code":"HAN","name":"Handeni","value":14},{"region_nam":"Tanga","zone":"Coast","n":61,"district":"Kilindi","code":"KIL","name":"Kilindi","value":61},{"region_nam":"Tanga","zone":"Coast","n":38,"district":"Korogwe","code":"KOR","name":"Korogwe","value":38},{"region_nam":"Tanga","zone":"Coast","n":11,"district":"Korogwe","code":"KOR","name":"Korogwe","value":11},{"region_nam":"Tanga","zone":"Coast","n":160,"district":"Lushoto","code":"LUS","name":"Lushoto","value":160},{"region_nam":"Tanga","zone":"Coast","n":39,"district":"Mkinga","code":"MKI","name":"Mkinga","value":39},{"region_nam":"Tanga","zone":"Coast","n":46,"district":"Muheza","code":"MUH","name":"Muheza","value":46},{"region_nam":"Tanga","zone":"Coast","n":13,"district":"Pangani","code":"PAN","name":"Pangani","value":13},{"region_nam":"Tanga","zone":"Coast","n":18,"district":"Tanga","code":"TAN","name":"Tanga","value":18},{"region_nam":"Tanga","zone":"Coast","n":36,"district":"Bumbuli","code":"BUM","name":"Bumbuli","value":36},{"region_nam":"Pwani","zone":"Coast","n":12,"district":"Bagamoyo","code":"BAG","name":"Bagamoyo","value":12},{"region_nam":"Morogoro","zone":"Coast","n":32,"district":"Ifakara","code":"IFA","name":"Ifakara","value":32},{"region_nam":"Pwani","zone":"Coast","n":36,"district":"Kibiti","code":"KIB","name":"Kibiti","value":36},{"region_nam":"Dar-es-salaam","zone":"Coast","n":15,"district":"Kigamboni","code":"KIG","name":"Kigamboni","value":15},{"region_nam":"Morogoro","zone":"Coast","n":20,"district":"Malinyi","code":"MAL","name":"Malinyi","value":20},{"region_nam":"Dar-es-salaam","zone":"Coast","n":30,"district":"Ubungo","code":"UBU","name":"Ubungo","value":30}],"type":"packedbubble"},{"name":"Lake","data":[{"region_nam":"Geita","zone":"Lake","n":100,"district":"Bukombe","code":"BUK","name":"Bukombe","value":100},{"region_nam":"Geita","zone":"Lake","n":188,"district":"Chato","code":"CHA","name":"Chato","value":188},{"region_nam":"Geita","zone":"Lake","n":122,"district":"Geita","code":"GEI","name":"Geita","value":122},{"region_nam":"Geita","zone":"Lake","n":61,"district":"Mbogwe","code":"MBO","name":"Mbogwe","value":61},{"region_nam":"Geita","zone":"Lake","n":null,"district":"Nyang'wale","code":"NYA","name":"Nyang'wale","value":null},{"region_nam":"Kagera","zone":"Lake","n":100,"district":"Biharamulo","code":"BIH","name":"Biharamulo","value":100},{"region_nam":"Kagera","zone":"Lake","n":78,"district":"Bukoba","code":"BUK","name":"Bukoba","value":78},{"region_nam":"Kagera","zone":"Lake","n":18,"district":"Bukoba","code":"BUK","name":"Bukoba","value":18},{"region_nam":"Kagera","zone":"Lake","n":82,"district":"Karagwe","code":"KAR","name":"Karagwe","value":82},{"region_nam":"Kagera","zone":"Lake","n":85,"district":"Kyerwa","code":"KYE","name":"Kyerwa","value":85},{"region_nam":"Kagera","zone":"Lake","n":37,"district":"Missenyi","code":"MIS","name":"Missenyi","value":37},{"region_nam":"Kagera","zone":"Lake","n":148,"district":"Muleba","code":"MUL","name":"Muleba","value":148},{"region_nam":"Kagera","zone":"Lake","n":99,"district":"Ngara","code":"NGA","name":"Ngara","value":99},{"region_nam":"Katavi","zone":"Lake","n":49,"district":"Mlele","code":"MLE","name":"Mlele","value":49},{"region_nam":"Katavi","zone":"Lake","n":null,"district":"Mpanda","code":"MPA","name":"Mpanda","value":null},{"region_nam":"Katavi","zone":"Lake","n":55,"district":"Mpanda","code":"MPA","name":"Mpanda","value":55},{"region_nam":"Kigoma","zone":"Lake","n":55,"district":"Buhigwe","code":"BUH","name":"Buhigwe","value":55},{"region_nam":"Kigoma","zone":"Lake","n":72,"district":"Kakonko","code":"KAK","name":"Kakonko","value":72},{"region_nam":"Kigoma","zone":"Lake","n":147,"district":"Kasulu","code":"KAS","name":"Kasulu","value":147},{"region_nam":"Kigoma","zone":"Lake","n":45,"district":"Kasulu","code":"KAS","name":"Kasulu","value":45},{"region_nam":"Kigoma","zone":"Lake","n":51,"district":"Kibondo","code":"KIB","name":"Kibondo","value":51},{"region_nam":"Kigoma","zone":"Lake","n":26,"district":"Kigoma","code":"KIG","name":"Kigoma","value":26},{"region_nam":"Kigoma","zone":"Lake","n":60,"district":"Kigoma","code":"KIG","name":"Kigoma","value":60},{"region_nam":"Kigoma","zone":"Lake","n":156,"district":"Uvinza","code":"UVI","name":"Uvinza","value":156},{"region_nam":"Mara","zone":"Lake","n":44,"district":"Bunda","code":"BUN","name":"Bunda","value":44},{"region_nam":"Mara","zone":"Lake","n":61,"district":"Musoma","code":"MUS","name":"Musoma","value":61},{"region_nam":"Mara","zone":"Lake","n":19,"district":"Musoma","code":"MUS","name":"Musoma","value":19},{"region_nam":"Mara","zone":"Lake","n":113,"district":"Rorya","code":"ROR","name":"Rorya","value":113},{"region_nam":"Mara","zone":"Lake","n":99,"district":"Serengeti","code":"SER","name":"Serengeti","value":99},{"region_nam":"Mara","zone":"Lake","n":111,"district":"Tarime","code":"TAR","name":"Tarime","value":111},{"region_nam":"Mwanza","zone":"Lake","n":26,"district":"Ilemela","code":"ILE","name":"Ilemela","value":26},{"region_nam":"Mwanza","zone":"Lake","n":72,"district":"Kwimba","code":"KWI","name":"Kwimba","value":72},{"region_nam":"Mwanza","zone":"Lake","n":72,"district":"Magu","code":"MAG","name":"Magu","value":72},{"region_nam":"Mwanza","zone":"Lake","n":97,"district":"Misungwi","code":"MIS","name":"Misungwi","value":97},{"region_nam":"Mwanza","zone":"Lake","n":33,"district":"Mwanza","code":"MWA","name":"Mwanza","value":33},{"region_nam":"Mwanza","zone":"Lake","n":52,"district":"Sengerema","code":"SEN","name":"Sengerema","value":52},{"region_nam":"Mwanza","zone":"Lake","n":72,"district":"Ukerewe","code":"UKE","name":"Ukerewe","value":72},{"region_nam":"Shinyanga","zone":"Lake","n":59,"district":"Msalala","code":"MSA","name":"Msalala","value":59},{"region_nam":"Shinyanga","zone":"Lake","n":58,"district":"Kahama","code":"KAH","name":"Kahama","value":58},{"region_nam":"Shinyanga","zone":"Lake","n":145,"district":"Kishapu","code":"KIS","name":"Kishapu","value":145},{"region_nam":"Shinyanga","zone":"Lake","n":53,"district":"Shinyanga","code":"SHI","name":"Shinyanga","value":53},{"region_nam":"Shinyanga","zone":"Lake","n":28,"district":"Shinyanga","code":"SHI","name":"Shinyanga","value":28},{"region_nam":"Simiyu","zone":"Lake","n":69,"district":"Bariadi","code":"BAR","name":"Bariadi","value":69},{"region_nam":"Simiyu","zone":"Lake","n":56,"district":"Busega","code":"BUS","name":"Busega","value":56},{"region_nam":"Simiyu","zone":"Lake","n":69,"district":"Itilima","code":"ITI","name":"Itilima","value":69},{"region_nam":"Simiyu","zone":"Lake","n":107,"district":"Maswa","code":"MAS","name":"Maswa","value":107},{"region_nam":"Simiyu","zone":"Lake","n":51,"district":"Meatu","code":"MEA","name":"Meatu","value":51},{"region_nam":"Tabora","zone":"Lake","n":98,"district":"Igunga","code":"IGU","name":"Igunga","value":98},{"region_nam":"Tabora","zone":"Lake","n":116,"district":"Kaliua","code":"KAL","name":"Kaliua","value":116},{"region_nam":"Tabora","zone":"Lake","n":96,"district":"Nzega","code":"NZE","name":"Nzega","value":96},{"region_nam":"Tabora","zone":"Lake","n":53,"district":"Sikonge","code":"SIK","name":"Sikonge","value":53},{"region_nam":"Tabora","zone":"Lake","n":41,"district":"Tabora","code":"TAB","name":"Tabora","value":41},{"region_nam":"Tabora","zone":"Lake","n":48,"district":"Urambo","code":"URA","name":"Urambo","value":48},{"region_nam":"Tabora","zone":"Lake","n":101,"district":"Uyui","code":"UYU","name":"Uyui","value":101},{"region_nam":"Simiyu","zone":"Lake","n":25,"district":"Bariadi","code":"BAR","name":"Bariadi","value":25},{"region_nam":"Mwanza","zone":"Lake","n":36,"district":"Buchosa","code":"BUC","name":"Buchosa","value":36},{"region_nam":"Mara","zone":"Lake","n":29,"district":"Bunda","code":"BUN","name":"Bunda","value":29},{"region_nam":"Geita","zone":"Lake","n":39,"district":"Geita","code":"GEI","name":"Geita","value":39},{"region_nam":"Shinyanga","zone":"Lake","n":61,"district":"Ushetu","code":"USH","name":"Ushetu","value":61},{"region_nam":"Katavi","zone":"Lake","n":55,"district":"Mpimbwe","code":"MPI","name":"Mpimbwe","value":55},{"region_nam":"Katavi","zone":"Lake","n":78,"district":"Nsimbo","code":"NSI","name":"Nsimbo","value":78},{"region_nam":"Tabora","zone":"Lake","n":12,"district":"Nzega","code":"NZE","name":"Nzega","value":12},{"region_nam":"Mara","zone":"Lake","n":7,"district":"Tarime","code":"TAR","name":"Tarime","value":7},{"region_nam":"Mara","zone":"Lake","n":48,"district":"Butiama","code":"BUT","name":"Butiama","value":48}],"type":"packedbubble"},{"name":"Northern","data":[{"region_nam":"Arusha","zone":"Northern","n":25,"district":"Arusha","code":"ARU","name":"Arusha","value":25},{"region_nam":"Arusha","zone":"Northern","n":33,"district":"Arusha","code":"ARU","name":"Arusha","value":33},{"region_nam":"Arusha","zone":"Northern","n":27,"district":"Karatu","code":"KAR","name":"Karatu","value":27},{"region_nam":"Arusha","zone":"Northern","n":28,"district":"Longido","code":"LON","name":"Longido","value":28},{"region_nam":"Arusha","zone":"Northern","n":52,"district":"Meru","code":"MER","name":"Meru","value":52},{"region_nam":"Arusha","zone":"Northern","n":7,"district":"Monduli","code":"MON","name":"Monduli","value":7},{"region_nam":"Arusha","zone":"Northern","n":63,"district":"Ngorongoro","code":"NGO","name":"Ngorongoro","value":63},{"region_nam":"Kilimanjaro","zone":"Northern","n":30,"district":"Hai","code":"HAI","name":"Hai","value":30},{"region_nam":"Kilimanjaro","zone":"Northern","n":65,"district":"Moshi","code":"MOS","name":"Moshi","value":65},{"region_nam":"Kilimanjaro","zone":"Northern","n":13,"district":"Moshi","code":"MOS","name":"Moshi","value":13},{"region_nam":"Kilimanjaro","zone":"Northern","n":34,"district":"Mwanga","code":"MWA","name":"Mwanga","value":34},{"region_nam":"Kilimanjaro","zone":"Northern","n":54,"district":"Rombo","code":"ROM","name":"Rombo","value":54},{"region_nam":"Kilimanjaro","zone":"Northern","n":61,"district":"Same","code":"SAM","name":"Same","value":61},{"region_nam":"Kilimanjaro","zone":"Northern","n":20,"district":"Siha","code":"SIH","name":"Siha","value":20},{"region_nam":"Manyara","zone":"Northern","n":94,"district":"Babati","code":"BAB","name":"Babati","value":94},{"region_nam":"Manyara","zone":"Northern","n":8,"district":"Babati","code":"BAB","name":"Babati","value":8},{"region_nam":"Manyara","zone":"Northern","n":95,"district":"Hanang","code":"HAN","name":"Hanang","value":95},{"region_nam":"Manyara","zone":"Northern","n":37,"district":"Kiteto","code":"KIT","name":"Kiteto","value":37},{"region_nam":"Manyara","zone":"Northern","n":23,"district":"Mbulu","code":"MBU","name":"Mbulu","value":23},{"region_nam":"Manyara","zone":"Northern","n":35,"district":"Simanjiro","code":"SIM","name":"Simanjiro","value":35},{"region_nam":"Manyara","zone":"Northern","n":27,"district":"Mbulu","code":"MBU","name":"Mbulu","value":27}],"type":"packedbubble"},{"name":"Southern","data":[{"region_nam":"Lindi","zone":"Southern","n":80,"district":"Kilwa","code":"KIL","name":"Kilwa","value":80},{"region_nam":"Lindi","zone":"Southern","n":null,"district":"Lindi","code":"LIN","name":"Lindi","value":null},{"region_nam":"Lindi","zone":"Southern","n":59,"district":"Lindi","code":"LIN","name":"Lindi","value":59},{"region_nam":"Lindi","zone":"Southern","n":23,"district":"Liwale","code":"LIW","name":"Liwale","value":23},{"region_nam":"Lindi","zone":"Southern","n":41,"district":"Nachingwea","code":"NAC","name":"Nachingwea","value":41},{"region_nam":"Lindi","zone":"Southern","n":30,"district":"Ruangwa","code":"RUA","name":"Ruangwa","value":30},{"region_nam":"Mtwara","zone":"Southern","n":60,"district":"Masasi","code":"MAS","name":"Masasi","value":60},{"region_nam":"Mtwara","zone":"Southern","n":18,"district":"Masasi","code":"MAS","name":"Masasi","value":18},{"region_nam":"Mtwara","zone":"Southern","n":39,"district":"Mtwara","code":"MTW","name":"Mtwara","value":39},{"region_nam":"Mtwara","zone":"Southern","n":14,"district":"Mtwara","code":"MTW","name":"Mtwara","value":14},{"region_nam":"Mtwara","zone":"Southern","n":48,"district":"Nanyumbu","code":"NAN","name":"Nanyumbu","value":48},{"region_nam":"Mtwara","zone":"Southern","n":20,"district":"Newala","code":"NEW","name":"Newala","value":20},{"region_nam":"Mtwara","zone":"Southern","n":30,"district":"Tandahimba","code":"TAN","name":"Tandahimba","value":30},{"region_nam":"Mtwara","zone":"Southern","n":30,"district":"Nanyamba","code":"NAN","name":"Nanyamba","value":30},{"region_nam":"Mtwara","zone":"Southern","n":24,"district":"Newala","code":"NEW","name":"Newala","value":24}],"type":"packedbubble"},{"name":"Southern Highland","data":[{"region_nam":"Iringa","zone":"Southern Highland","n":39,"district":"Iringa","code":"IRI","name":"Iringa","value":39},{"region_nam":"Iringa","zone":"Southern Highland","n":14,"district":"Iringa","code":"IRI","name":"Iringa","value":14},{"region_nam":"Iringa","zone":"Southern Highland","n":31,"district":"Kilolo","code":"KIL","name":"Kilolo","value":31},{"region_nam":"Iringa","zone":"Southern Highland","n":14,"district":"Mafinga","code":"MAF","name":"Mafinga","value":14},{"region_nam":"Iringa","zone":"Southern Highland","n":22,"district":"Mufindi","code":"MUF","name":"Mufindi","value":22},{"region_nam":"Mbeya","zone":"Southern Highland","n":79,"district":"Chunya","code":"CHU","name":"Chunya","value":79},{"region_nam":"Songwe","zone":"Southern Highland","n":23,"district":"Ileje","code":"ILE","name":"Ileje","value":23},{"region_nam":"Mbeya","zone":"Southern Highland","n":22,"district":"Kyela","code":"KYE","name":"Kyela","value":22},{"region_nam":"Mbeya","zone":"Southern Highland","n":66,"district":"Mbarali","code":"MBA","name":"Mbarali","value":66},{"region_nam":"Mbeya","zone":"Southern Highland","n":84,"district":"Mbeya","code":"MBE","name":"Mbeya","value":84},{"region_nam":"Mbeya","zone":"Southern Highland","n":50,"district":"Mbeya","code":"MBE","name":"Mbeya","value":50},{"region_nam":"Songwe","zone":"Southern Highland","n":84,"district":"Mbozi","code":"MBO","name":"Mbozi","value":84},{"region_nam":"Songwe","zone":"Southern Highland","n":42,"district":"Momba","code":"MOM","name":"Momba","value":42},{"region_nam":"Mbeya","zone":"Southern Highland","n":24,"district":"Rungwe","code":"RUN","name":"Rungwe","value":24},{"region_nam":"Songwe","zone":"Southern Highland","n":56,"district":"Tunduma","code":"TUN","name":"Tunduma","value":56},{"region_nam":"Njombe","zone":"Southern Highland","n":12,"district":"Ludewa","code":"LUD","name":"Ludewa","value":12},{"region_nam":"Njombe","zone":"Southern Highland","n":16,"district":"Makambako","code":"MAK","name":"Makambako","value":16},{"region_nam":"Njombe","zone":"Southern Highland","n":21,"district":"Makete","code":"MAK","name":"Makete","value":21},{"region_nam":"Njombe","zone":"Southern Highland","n":13,"district":"Njombe","code":"NJO","name":"Njombe","value":13},{"region_nam":"Njombe","zone":"Southern Highland","n":15,"district":"Njombe","code":"NJO","name":"Njombe","value":15},{"region_nam":"Njombe","zone":"Southern Highland","n":28,"district":"Wanging'ombe","code":"WAN","name":"Wanging'ombe","value":28},{"region_nam":"Rukwa","zone":"Southern Highland","n":39,"district":"Kalambo","code":"KAL","name":"Kalambo","value":39},{"region_nam":"Rukwa","zone":"Southern Highland","n":64,"district":"Nkasi","code":"NKA","name":"Nkasi","value":64},{"region_nam":"Rukwa","zone":"Southern Highland","n":37,"district":"Sumbawanga","code":"SUM","name":"Sumbawanga","value":37},{"region_nam":"Rukwa","zone":"Southern Highland","n":14,"district":"Sumbawanga","code":"SUM","name":"Sumbawanga","value":14},{"region_nam":"Ruvuma","zone":"Southern Highland","n":88,"district":"Mbinga","code":"MBI","name":"Mbinga","value":88},{"region_nam":"Ruvuma","zone":"Southern Highland","n":53,"district":"Namtumbo","code":"NAM","name":"Namtumbo","value":53},{"region_nam":"Ruvuma","zone":"Southern Highland","n":44,"district":"Nyasa","code":"NYA","name":"Nyasa","value":44},{"region_nam":"Ruvuma","zone":"Southern Highland","n":44,"district":"Songea","code":"SON","name":"Songea","value":44},{"region_nam":"Ruvuma","zone":"Southern Highland","n":37,"district":"Songea","code":"SON","name":"Songea","value":37},{"region_nam":"Ruvuma","zone":"Southern Highland","n":85,"district":"Tunduru","code":"TUN","name":"Tunduru","value":85},{"region_nam":"Mbeya","zone":"Southern Highland","n":26,"district":"Busokelo","code":"BUS","name":"Busokelo","value":26},{"region_nam":"Ruvuma","zone":"Southern Highland","n":8,"district":"Madaba","code":"MAD","name":"Madaba","value":8},{"region_nam":"Ruvuma","zone":"Southern Highland","n":30,"district":"Mbinga","code":"MBI","name":"Mbinga","value":30},{"region_nam":"Songwe","zone":"Southern Highland","n":41,"district":"Songwe","code":"SON","name":"Songwe","value":41}],"type":"packedbubble"}],"xAxis":{"type":null,"title":{"text":[]},"categories":null},"tooltip":{"useHTML":true,"pointFormat":"<b>{point.name}:<\/b> {point.n}"}},"theme":{"chart":{"backgroundColor":"transparent"},"colors":["#7cb5ec","#434348","#90ed7d","#f7a35c","#8085e9","#f15c80","#e4d354","#2b908f","#f45b5b","#91e8e1"]},"conf_opts":{"global":{"Date":null,"VMLRadialGradientURL":"http =//code.highcharts.com/list(version)/gfx/vml-radial-gradient.png","canvasToolsURL":"http =//code.highcharts.com/list(version)/modules/canvas-tools.js","getTimezoneOffset":null,"timezoneOffset":0,"useUTC":true},"lang":{"contextButtonTitle":"Chart context menu","decimalPoint":".","downloadCSV":"Download CSV","downloadJPEG":"Download JPEG image","downloadPDF":"Download PDF document","downloadPNG":"Download PNG image","downloadSVG":"Download SVG vector image","downloadXLS":"Download XLS","drillUpText":"◁ Back to {series.name}","exitFullscreen":"Exit from full screen","exportData":{"annotationHeader":"Annotations","categoryDatetimeHeader":"DateTime","categoryHeader":"Category"},"hideData":"Hide data table","invalidDate":null,"loading":"Loading...","months":["January","February","March","April","May","June","July","August","September","October","November","December"],"noData":"No data to display","numericSymbolMagnitude":1000,"numericSymbols":["k","M","G","T","P","E"],"printChart":"Print chart","resetZoom":"Reset zoom","resetZoomTitle":"Reset zoom level 1:1","shortMonths":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"shortWeekdays":["Sat","Sun","Mon","Tue","Wed","Thu","Fri"],"thousandsSep":" ","viewData":"View data table","viewFullscreen":"View in full screen","weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]}},"type":"chart","fonts":[],"debug":false},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="sankey" class="level2">
<h2 class="anchored" data-anchor-id="sankey">Sankey</h2>
<p>A sankey diagram is a visualization used to depict a flow from one set of values to another. The things being connected are called nodes and the connections are called links.Sankey diagrams can also visualize the energy accounts, material flow accounts on a regional or national level, and cost breakdowns.[1] The diagrams are often used in the visualization of material flow analysis.</p>
<p>Sankey diagrams emphasize the major transfers or flows within a system. They help locate the most important contributions to a flow. They often show conserved quantities within defined system boundaries.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">   quest.tb <span class="ot" style="color: #003B4F;">=</span>  walimu.clean <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-2">      <span class="fu" style="color: #4758AB;">group_by</span>(kiwango_cha_elimu, jinsi) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-3">      <span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">value =</span> <span class="fu" style="color: #4758AB;">n</span>(), <span class="at" style="color: #657422;">.groups =</span> <span class="st" style="color: #20794D;">"drop"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-4">      <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">source =</span> <span class="dv" style="color: #AD0000;">2</span>, <span class="at" style="color: #657422;">target =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-5">      <span class="fu" style="color: #4758AB;">filter</span>(value <span class="sc" style="color: #5E5E5E;">&gt;</span> <span class="dv" style="color: #AD0000;">100</span>)<span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-6">      <span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb6-7">        </span>
<span id="cb6-8">    </span>
<span id="cb6-9">    <span class="co" style="color: #5E5E5E;"># From these flows we need to create a node data frame: it lists every entities involved in the flow</span></span>
<span id="cb6-10">    nodes <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">data.frame</span>(<span class="at" style="color: #657422;">name=</span><span class="fu" style="color: #4758AB;">c</span>(<span class="fu" style="color: #4758AB;">as.character</span>(quest.tb<span class="sc" style="color: #5E5E5E;">$</span>source), </span>
<span id="cb6-11">                               <span class="fu" style="color: #4758AB;">as.character</span>(quest.tb<span class="sc" style="color: #5E5E5E;">$</span>target)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-12">                          <span class="fu" style="color: #4758AB;">unique</span>())</span>
<span id="cb6-13">    </span>
<span id="cb6-14">    nodes <span class="ot" style="color: #003B4F;">=</span> quest.tb <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-15">      <span class="fu" style="color: #4758AB;">select</span>(<span class="sc" style="color: #5E5E5E;">-</span>value) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-16">      <span class="fu" style="color: #4758AB;">pivot_longer</span>(<span class="at" style="color: #657422;">cols =</span> source<span class="sc" style="color: #5E5E5E;">:</span>target) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-17">      <span class="fu" style="color: #4758AB;">distinct</span>(value) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-18">      <span class="fu" style="color: #4758AB;">rename</span>(<span class="at" style="color: #657422;">name =</span> <span class="dv" style="color: #AD0000;">1</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-19">      <span class="fu" style="color: #4758AB;">as.data.frame</span>()</span>
<span id="cb6-20">    </span>
<span id="cb6-21">    <span class="co" style="color: #5E5E5E;"># With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.</span></span>
<span id="cb6-22">    quest.tb<span class="sc" style="color: #5E5E5E;">$</span>IDsource<span class="ot" style="color: #003B4F;">=</span><span class="fu" style="color: #4758AB;">match</span>(quest.tb<span class="sc" style="color: #5E5E5E;">$</span>source, nodes<span class="sc" style="color: #5E5E5E;">$</span>name)<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span> </span>
<span id="cb6-23">    quest.tb<span class="sc" style="color: #5E5E5E;">$</span>IDtarget<span class="ot" style="color: #003B4F;">=</span><span class="fu" style="color: #4758AB;">match</span>(quest.tb<span class="sc" style="color: #5E5E5E;">$</span>target, nodes<span class="sc" style="color: #5E5E5E;">$</span>name)<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span></span>
<span id="cb6-24">    </span>
<span id="cb6-25">    </span>
<span id="cb6-26">    <span class="co" style="color: #5E5E5E;"># Make the Network </span></span>
<span id="cb6-27">    networkD3<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">sankeyNetwork</span>(<span class="at" style="color: #657422;">Links =</span> quest.tb, </span>
<span id="cb6-28">                             <span class="at" style="color: #657422;">Nodes =</span> nodes,</span>
<span id="cb6-29">                             <span class="at" style="color: #657422;">Source =</span> <span class="st" style="color: #20794D;">"IDsource"</span>, </span>
<span id="cb6-30">                             <span class="at" style="color: #657422;">Target =</span> <span class="st" style="color: #20794D;">"IDtarget"</span>,</span>
<span id="cb6-31">                             <span class="at" style="color: #657422;">Value =</span> <span class="st" style="color: #20794D;">"value"</span>, </span>
<span id="cb6-32">                             <span class="at" style="color: #657422;">NodeID =</span> <span class="st" style="color: #20794D;">"name"</span>, </span>
<span id="cb6-33">                             <span class="at" style="color: #657422;">fontFamily =</span> <span class="st" style="color: #20794D;">"Myriad Pro"</span>,</span>
<span id="cb6-34">                             <span class="at" style="color: #657422;">LinkGroup =</span> <span class="st" style="color: #20794D;">"source"</span>,</span>
<span id="cb6-35">                             <span class="at" style="color: #657422;">sinksRight=</span><span class="cn" style="color: #8f5902;">FALSE</span>,</span>
<span id="cb6-36">                             <span class="co" style="color: #5E5E5E;"># height = 600, width = 800,</span></span>
<span id="cb6-37">                             <span class="co" style="color: #5E5E5E;"># colourScale=ColourScal,</span></span>
<span id="cb6-38">                             <span class="at" style="color: #657422;">nodeWidth=</span><span class="dv" style="color: #AD0000;">30</span>, </span>
<span id="cb6-39">                             <span class="at" style="color: #657422;">iterations =</span> <span class="dv" style="color: #AD0000;">5</span>,</span>
<span id="cb6-40">                             <span class="at" style="color: #657422;">fontSize=</span><span class="dv" style="color: #AD0000;">14</span>, </span>
<span id="cb6-41">                             <span class="at" style="color: #657422;">nodePadding=</span><span class="dv" style="color: #AD0000;">30</span>, </span>
<span id="cb6-42">                             <span class="at" style="color: #657422;">width =</span> <span class="dv" style="color: #AD0000;">1000</span>, </span>
<span id="cb6-43">                             <span class="at" style="color: #657422;">height =</span> <span class="dv" style="color: #AD0000;">400</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="htmlwidget-bc8085eb0808b4056d52" style="width:100%;height:260px;" class="sankeyNetwork html-widget"></div>
<script type="application/json" data-for="htmlwidget-bc8085eb0808b4056d52">{"x":{"links":{"source":[0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2],"target":[1,1,3,3,4,4,5,5,6,6,7,7,8,8,9,9],"value":[406,1362,266,488,250,250,943,1252,500,500,500,501,229,207,425,1478],"group":["Female","Male","Female","Male","Female","Male","Female","Male","Female","Male","Female","Male","Female","Male","Female","Male"]},"nodes":{"name":["Female","Bachelor Degree Education  (Science)","Male","Bachelor Degree Education (Arts)","Bachelor of Education in Early Childhood Education","Certificate in Primary Education","Diploma in Early Child Education","Diploma in Primary School","Diploma in Secondary Education (Arts)","Diploma in Secondary Education (Science)"],"group":["Female","Bachelor Degree Education  (Science)","Male","Bachelor Degree Education (Arts)","Bachelor of Education in Early Childhood Education","Certificate in Primary Education","Diploma in Early Child Education","Diploma in Primary School","Diploma in Secondary Education (Arts)","Diploma in Secondary Education (Science)"]},"options":{"NodeID":"name","NodeGroup":"name","LinkGroup":"source","colourScale":"d3.scaleOrdinal(d3.schemeCategory20);","fontSize":14,"fontFamily":"Myriad Pro","nodeWidth":30,"nodePadding":30,"units":"","margin":{"top":null,"right":null,"bottom":null,"left":null},"iterations":5,"sinksRight":false}},"evals":[],"jsHooks":[]}</script>
</div>
</div>
</section>
<section id="cited-references" class="level2">
<h2 class="anchored" data-anchor-id="cited-references">Cited references</h2>


</section>

 ]]></description>
  <category>Visualization</category>
  <category>Analysis</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/newvisuals/index.html</guid>
  <pubDate>Wed, 10 Aug 2022 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/newvisuals/packedbubble.png" medium="image" type="image/png" height="84" width="144"/>
</item>
<item>
  <title>Spatial Data is Maturing in R</title>
  <dc:creator>Masjumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/spatialState/index.html</link>
  <description><![CDATA[ 



<p>R is particularly powerful for spatial statistical analysis and quantitative researchers in particular may find R more useful than GIS desktop applications</p>
<p>R is particularly powerful for spatial statistical analysis and quantitative researchers in particular may find R more useful than GIS desktop applications. As data becomes more geographical, there is a growing necessity to make spatial data more accessible and easy to process. While there are plenty of tools out there that can make your life much easier when processing spatial data (e.g.&nbsp;QGIS and ArcMap) using R to conduct spatial analysis can be just as easy. This is especially true if you’re new to some of these packages and don’t feel like reading through all of the documentation to learn the package or, even more tedious, writing hundreds of lines of your own code to do something relatively simple. In this article I discuss a few packages that make common spatial statistics methods easy to perform in R <span class="citation" data-cites="bivand2006implementing">(Bivand 2006)</span>.</p>
<p>We will conduct a high-level assessment of the R packages that are dedicated for spatial analysis. By showing network connection across package dependencies — which packages utilize code from another package to execute a task – we will undertake a high-level assessment of the condition of spatial in R. For comparison, we’ll compare our Analysis of Spatial Data task view to the tidyverse, one of R’s most well-known collections of packages, as well as the venerable Environmetrics task view, which includes numerous environmental analysis tools. To accomplish so, we’ll need to write some R code and install the following packages:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode markdown code-with-copy"><code class="sourceCode markdown"><span id="cb1-1"><span class="in" style="color: #5E5E5E;">```{r, eval=TRUE}</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;">library</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;">library</span>(tidygraph)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;">library</span>(ggraph)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;">library</span>(ctv)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;">library</span>(tools)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;">library</span>(cranlogs)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;">require</span>(highcharter)</span>
<span id="cb1-9"><span class="in" style="color: #5E5E5E;">```</span></span></code></pre></div>
</div>
<p>We will use the handy <code>CRAN_package_db</code> function from the <strong>tools</strong> package which conveniently grabs information from the <code>DESCRIPTION</code> file of every package on CRAN and turns it into a dataframe.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">all_cran_packages <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">CRAN_package_db</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">all_cran_packages <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 19,050
Columns: 66
$ Package                   &lt;chr&gt; "A3", "aaSEA", "AATtools", "ABACUS", "abbrev~
$ Version                   &lt;chr&gt; "1.0.0", "1.1.0", "0.0.1", "1.0.0", "0.1", "~
$ Priority                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Depends                   &lt;chr&gt; "R (&gt;= 2.15.0), xtable, pbapply", "R(&gt;= 3.4.~
$ Imports                   &lt;chr&gt; NA, "DT(&gt;= 0.4), networkD3(&gt;= 0.4), shiny(&gt;=~
$ LinkingTo                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, "Rcpp, B~
$ Suggests                  &lt;chr&gt; "randomForest, e1071", "knitr, rmarkdown", N~
$ Enhances                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ License                   &lt;chr&gt; "GPL (&gt;= 2)", "GPL-3", "GPL-3", "GPL-3", "GP~
$ License_is_FOSS           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ License_restricts_use     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ OS_type                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Archs                     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ MD5sum                    &lt;chr&gt; "027ebdd8affce8f0effaecfcd5f5ade2", "0f9aaef~
$ NeedsCompilation          &lt;chr&gt; "no", "no", "no", "no", "no", "no", "no", "n~
$ Additional_repositories   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Author                    &lt;chr&gt; "Scott Fortmann-Roe", "Raja Sekhara Reddy D.~
$ `Authors@R`               &lt;chr&gt; NA, NA, "person(\"Sercan\", \"Kahveci\", ema~
$ Biarch                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ BugReports                &lt;chr&gt; NA, NA, "https://github.com/Spiritspeak/AATt~
$ BuildKeepEmpty            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ BuildManual               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ BuildResaveData           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ BuildVignettes            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Built                     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ ByteCompile               &lt;chr&gt; NA, NA, "true", NA, NA, NA, NA, NA, NA, NA, ~
$ `Classification/ACM`      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Classification/ACM-2012` &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Classification/JEL`      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Classification/MSC`      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Classification/MSC-2010` &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Collate                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Collate.unix              &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Collate.windows           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Contact                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, "Ian Morison~
$ Copyright                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Date                      &lt;chr&gt; "2015-08-15", NA, NA, NA, "2021-12-12", NA, ~
$ Description               &lt;chr&gt; "Supplies tools for tabulating and analyzing~
$ Encoding                  &lt;chr&gt; NA, "UTF-8", "UTF-8", "UTF-8", "UTF-8", NA, ~
$ KeepSource                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Language                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ LazyData                  &lt;chr&gt; NA, "true", "true", "true", NA, "true", NA, ~
$ LazyDataCompression       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ LazyLoad                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, "yes~
$ MailingList               &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Maintainer                &lt;chr&gt; "Scott Fortmann-Roe &lt;scottfr@berkeley.edu&gt;",~
$ Note                      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Packaged                  &lt;chr&gt; "2015-08-16 14:17:33 UTC; scott", "2019-11-0~
$ RdMacros                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ StagedInstall             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ SysDataCompression        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ SystemRequirements        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, "GNU make", ~
$ Title                     &lt;chr&gt; "Accurate, Adaptable, and Accessible Error M~
$ Type                      &lt;chr&gt; "Package", "Package", "Package", NA, "Packag~
$ URL                       &lt;chr&gt; NA, NA, NA, "https://shiny.abdn.ac.uk/Stats/~
$ UseLTO                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ VignetteBuilder           &lt;chr&gt; NA, "knitr", NA, "knitr", NA, "knitr", NA, N~
$ ZipData                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ Published                 &lt;chr&gt; "2015-08-16", "2019-11-09", "2020-06-14", "2~
$ Path                      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `X-CRAN-Comment`          &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Reverse depends`         &lt;chr&gt; NA, NA, NA, NA, NA, NA, "abctools, EasyABC",~
$ `Reverse imports`         &lt;chr&gt; NA, NA, NA, NA, NA, NA, "ecolottery, poems",~
$ `Reverse linking to`      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~
$ `Reverse suggests`        &lt;chr&gt; NA, NA, NA, NA, NA, NA, "coala", "abctools",~
$ `Reverse enhances`        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, ~</code></pre>
</div>
</div>
<p>Here we are interested with the package and imports columns, so we will select them and drop the rest from the dataset. Then, we parse clean and tidy the columns in the dataset to make it a little easier to work with:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">tidied_cran_imports <span class="ot" style="color: #003B4F;">=</span> all_cran_packages <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-2">  janitor<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">clean_names</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;">select</span>(package, imports) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;">separate_rows</span>(imports, <span class="at" style="color: #657422;">sep =</span> <span class="st" style="color: #20794D;">","</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">imports =</span> <span class="fu" style="color: #4758AB;">str_replace</span>(imports,<span class="st" style="color: #20794D;">"</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">s*</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">([^</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)]+</span><span class="sc" style="color: #5E5E5E;">\\</span><span class="st" style="color: #20794D;">)"</span>,<span class="st" style="color: #20794D;">""</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">imports =</span> <span class="fu" style="color: #4758AB;">str_trim</span>(imports, <span class="at" style="color: #657422;">side =</span> <span class="st" style="color: #20794D;">"both"</span>)) </span>
<span id="cb5-8"></span>
<span id="cb5-9">tidied_cran_imports <span class="sc" style="color: #5E5E5E;">%&gt;%</span> <span class="fu" style="color: #4758AB;">head</span>(<span class="dv" style="color: #AD0000;">10</span>)</span></code></pre></div>
</div>
<section id="package-connectivity" class="level2">
<h2 class="anchored" data-anchor-id="package-connectivity">Package Connectivity</h2>
<p>Let’s start with a look at the tidyverse. We can take the unusual step of actually employing a function from the tidyverse package (aptly titled <code>tidyverse_packages</code>), which identifies those packages that are formally part of the tidyverse. To see package connection, we filter for those packages and their imports, convert to <code>tbl_graph</code>, then plot using <strong>ggraph</strong>:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">tidyverse_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> tidied_cran_imports <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">filter</span>(package <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">tidyverse_packages</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;">filter</span>(imports <span class="sc" style="color: #5E5E5E;">%in%</span> <span class="fu" style="color: #4758AB;">tidyverse_packages</span>()) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;">as_tbl_graph</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;">ggraph</span>(tidyverse_tbl, <span class="at" style="color: #657422;">layout =</span> <span class="st" style="color: #20794D;">"nicely"</span>)  <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">geom_edge_link</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey50"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;">geom_node_point</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;">geom_node_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">label =</span> name), <span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">3.5</span>, <span class="at" style="color: #657422;">parse =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">repel =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">check_overlap =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">nudge_y =</span> .<span class="dv" style="color: #AD0000;">12</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/spatialState/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Many intersecting lines traverse in all directions, as one might anticipate, because many packages in tidyverse import other packages. As the tidyverse develops, this is to be expected.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">env_packages <span class="ot" style="color: #003B4F;">&lt;-</span> ctv<span class="sc" style="color: #5E5E5E;">:::</span><span class="fu" style="color: #4758AB;">.get_pkgs_from_ctv_or_repos</span>(<span class="at" style="color: #657422;">views =</span> <span class="st" style="color: #20794D;">"Environmetrics"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="at" style="color: #657422;">use.names =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">env_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> tidied_cran_imports <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;">filter</span>(package <span class="sc" style="color: #5E5E5E;">%in%</span> env_packages) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;">filter</span>(imports <span class="sc" style="color: #5E5E5E;">%in%</span> env_packages) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;">as_tbl_graph</span>()</span>
<span id="cb9-5"></span>
<span id="cb9-6">env_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;">ggraph</span>(<span class="at" style="color: #657422;">layout =</span> <span class="st" style="color: #20794D;">'nicely'</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;">geom_edge_link</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey50"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;">geom_node_point</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-10">  <span class="fu" style="color: #4758AB;">geom_node_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">label =</span> name), <span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">3.5</span>, <span class="at" style="color: #657422;">parse =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">repel =</span> <span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">check_overlap =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">nudge_y =</span> .<span class="dv" style="color: #AD0000;">3</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/spatialState/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Next, let’s look at the Spatial Analysis task view, where we might not expect to see the same level of connectedness. The infrastructure underlying CRAN task views, the <strong>ctv</strong> package, (sort of) provides a function to obtain a vector of package names for a given task view, which we can use to make a network plot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">spatial_packages <span class="ot" style="color: #003B4F;">&lt;-</span> ctv<span class="sc" style="color: #5E5E5E;">:::</span><span class="fu" style="color: #4758AB;">.get_pkgs_from_ctv_or_repos</span>(<span class="at" style="color: #657422;">views =</span> <span class="st" style="color: #20794D;">"Spatial"</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;">unlist</span>(<span class="at" style="color: #657422;">use.names =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</div>
<p>We then pull the packages that are in spatial analysis task view that are found in all packages that are tidied and convert them to ggraph table and plot the network</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">sp_tbl <span class="ot" style="color: #003B4F;">&lt;-</span> tidied_cran_imports <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;">filter</span>(package <span class="sc" style="color: #5E5E5E;">%in%</span> spatial_packages) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;">filter</span>(imports <span class="sc" style="color: #5E5E5E;">%in%</span> spatial_packages) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;">as_tbl_graph</span>()</span>
<span id="cb11-5"></span>
<span id="cb11-6">sp_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;">ggraph</span>(<span class="at" style="color: #657422;">layout =</span> <span class="st" style="color: #20794D;">'fr'</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;">geom_edge_link</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;">geom_node_point</span>(<span class="at" style="color: #657422;">colour=</span><span class="st" style="color: #20794D;">"lightblue"</span>, <span class="at" style="color: #657422;">size=</span><span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;">geom_node_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">label=</span>name), <span class="at" style="color: #657422;">repel=</span><span class="cn" style="color: #8f5902;">FALSE</span>, <span class="at" style="color: #657422;">check_overlap =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">nudge_y =</span> .<span class="dv" style="color: #AD0000;">2</span>) <span class="sc" style="color: #5E5E5E;">+</span>  </span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;">theme_graph</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/spatialState/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">sp_tbl <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;">ggraph</span>(<span class="at" style="color: #657422;">layout =</span> <span class="st" style="color: #20794D;">'linear'</span>,<span class="at" style="color: #657422;">circular =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;">geom_edge_link</span>(<span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"grey50"</span>) <span class="sc" style="color: #5E5E5E;">+</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;">geom_node_point</span>()<span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;">geom_node_text</span>(<span class="fu" style="color: #4758AB;">aes</span>(<span class="at" style="color: #657422;">label =</span> name), <span class="at" style="color: #657422;">colour =</span> <span class="st" style="color: #20794D;">"black"</span>, <span class="at" style="color: #657422;">size =</span> <span class="fl" style="color: #AD0000;">3.5</span>, <span class="at" style="color: #657422;">parse =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">repel =</span> <span class="cn" style="color: #8f5902;">TRUE</span>, <span class="at" style="color: #657422;">check_overlap =</span> <span class="cn" style="color: #8f5902;">TRUE</span>) <span class="sc" style="color: #5E5E5E;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;">theme_void</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/spatialState/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>There is clearly some connectivity among spatial-related packages, which serves as a reminder that task views on CRAN aren’t the only location where users find packages to use. Some programs, like <strong>sf</strong>, establish a hub of related packages because they share a package maintainer, while others, like <strong>sp</strong>, investigate spatial systems using a wide range of spatial packages. The graph below shows the number of downloads of the <strong>cranlogs</strong> package from the RStudio CRAN mirror over the last year.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">kgcount <span class="ot" style="color: #003B4F;">&lt;-</span> <span class="fu" style="color: #4758AB;">cran_downloads</span>(<span class="at" style="color: #657422;">packages =</span> spatial_packages, </span>
<span id="cb13-2">                           <span class="at" style="color: #657422;">from =</span> <span class="fu" style="color: #4758AB;">Sys.Date</span>()<span class="sc" style="color: #5E5E5E;">-</span><span class="dv" style="color: #AD0000;">1</span><span class="sc" style="color: #5E5E5E;">*</span><span class="dv" style="color: #AD0000;">365</span>, </span>
<span id="cb13-3">                           <span class="at" style="color: #657422;">to =</span> <span class="fu" style="color: #4758AB;">Sys.Date</span>())</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">kgcount <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;">group_by</span>(package) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;">summarise</span>(<span class="at" style="color: #657422;">downloads =</span> <span class="fu" style="color: #4758AB;">sum</span>(count)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;">filter</span>(downloads <span class="sc" style="color: #5E5E5E;">&gt;=</span> <span class="dv" style="color: #AD0000;">450000</span>) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;">arrange</span>(<span class="fu" style="color: #4758AB;">desc</span>(downloads)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb14-6">  <span class="fu" style="color: #4758AB;">hchart</span>(<span class="at" style="color: #657422;">type =</span> <span class="st" style="color: #20794D;">"bar"</span>, <span class="fu" style="color: #4758AB;">hcaes</span>(<span class="at" style="color: #657422;">x =</span> package, <span class="at" style="color: #657422;">y =</span> downloads)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb14-7">  <span class="fu" style="color: #4758AB;">hc_xAxis</span>(<span class="at" style="color: #657422;">title =</span> <span class="fu" style="color: #4758AB;">list</span>(<span class="at" style="color: #657422;">text =</span> <span class="st" style="color: #20794D;">"Mothly downloads"</span>)) <span class="sc" style="color: #5E5E5E;">%&gt;%</span> </span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;">hc_yAxis</span>(<span class="at" style="color: #657422;">title =</span> <span class="cn" style="color: #8f5902;">FALSE</span>)</span></code></pre></div>
</div>
</section>
<section id="reference" class="level1 unnumbered">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Reference</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-bivand2006implementing" class="csl-entry">
Bivand, Roger. 2006. <span>“Implementing Spatial Data Analysis Software Tools in r.”</span> <em>Geographical Analysis</em> 38 (1): 23–40.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Spatial</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/spatialState/index.html</guid>
  <pubDate>Sun, 07 Aug 2022 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/spatialState/spatial.png" medium="image" type="image/png" height="66" width="144"/>
</item>
</channel>
</rss>
