<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>ng&#39;ara</title>
<link>https://lugoga.github.io/semba-quarto/blog.html</link>
<atom:link href="https://lugoga.github.io/semba-quarto/blog.xml" rel="self" type="application/rss+xml"/>
<description>Coding for all for better today and tommorow</description>
<generator>quarto-1.3.319</generator>
<lastBuildDate>Sat, 01 Jul 2023 21:00:00 GMT</lastBuildDate>
<item>
  <title>Plotting with ggcharts Package in R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/ggcharts/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Data visualization is an essential tool for data analysis and interpretation. R is a popular programming language for data analysis and visualization, and ggplot2 <span class="citation" data-cites="ggplot">(Wickham, 2016)</span> is a widely used package for creating high-quality graphics. However, ggplot2 can be challenging for beginners due to its steep learning curve. The <strong>ggcharts</strong> <span class="citation" data-cites="ggchart">(Neitmann, 2020)</span> package provides a simpler and more intuitive interface for creating charts using ggplot2. In this blog post, we will focus on the <code>bar_chart</code> and <code>lollipop_chart</code> functions in ggcharts and provide illustrative examples.</p>
<p>Let’s install the package in our machine if not installed</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggcharts"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">installed.packages</span>()) {</span>
<span id="cb1-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggcharts"</span>)</span>
<span id="cb1-3">}</span></code></pre></div>
</div>
<p>Then load the packages in our machine</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(ggcharts)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(gt)</span></code></pre></div>
</div>
<section id="bar-chart-function" class="level3">
<h3 class="anchored" data-anchor-id="bar-chart-function">Bar Chart Function</h3>
<p>The bar_chart function in ggcharts creates a vertical bar chart with optional error bars. The function takes a data frame, <code>x</code> and <code>y</code> variables, and optional arguments such as error bars, color, and fill. Here is an example of how to create a bar chart using the <strong>ggcharts</strong> package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>),</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb3-4">  )</span>
<span id="cb3-5"></span>
<span id="cb3-6">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(</span>
<span id="cb3-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> category, </span>
<span id="cb3-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, </span>
<span id="cb3-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span></span>
<span id="cb3-11">    )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-4-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="lollipop-chart-function" class="level3">
<h3 class="anchored" data-anchor-id="lollipop-chart-function">Lollipop Chart Function</h3>
<p>The <code>lollipop_chart</code> function in ggcharts creates a lollipop chart, which is a combination of a scatter plot and a bar chart. The function takes a data frame, x and y variables, and optional arguments such as color, fill, and size. Here is an example of how to create a lollipop chart using the ggcharts package:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"D"</span>),</span>
<span id="cb4-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb4-4">  )</span>
<span id="cb4-5">data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(</span>
<span id="cb4-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span>  category, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> value, </span>
<span id="cb4-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, </span>
<span id="cb4-9">    )</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-5-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="gross-domestic-product-gdp-growth-annual" class="level2">
<h2 class="anchored" data-anchor-id="gross-domestic-product-gdp-growth-annual">Gross Domestic Product (GDP) growth annual</h2>
<p>To demonstrate the use of ggcharts package, we need a dataset that contains annual GDP growth data. For this example, let’s assume we have a dataframe named “gdp_data” with three columns: “country”, “year” and “gdp.” Ensure your data is in a similar format before proceeding. The annual Gross Domestic Product (GDP) growth for the world was extracted from the website https://data.worldbank.org/country. This data is crucial in understanding the economic progress of countries across the globe. The GDP growth rate is a measure of the increase in the value of goods and services produced by a country over a specific period. It is an important indicator of a country’s economic health and development. By analyzing this data, policymakers can make informed decisions to improve their country’s economic performance. The World Bank’s website provides a comprehensive database of GDP growth rates for countries around the world, making it a valuable resource for researchers, policymakers, and investors.</p>
<p>Let read the data from our working directory into the R session using <code>read_csv</code> function from <strong>readr</strong> package <span class="citation" data-cites="readr">(Wickham et al., 2017)</span> and assign the variables with appropriate names with <code>rename</code> function from <strong>dplyr</strong> <span class="citation" data-cites="dplyr">(Wickham et al., 2019)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">gdp.world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp.csv"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">code =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4">gdp.world</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 266 × 68
   country   code  `Indicator Name` `Indicator Code` `1960` `1961` `1962` `1963`
   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;            &lt;chr&gt;            &lt;lgl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
 1 Aruba     ABW   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 2 Africa E… AFE   GDP growth (ann… NY.GDP.MKTP.KD.… NA      0.255  7.97    5.15
 3 Afghanis… AFG   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 4 Africa W… AFW   GDP growth (ann… NY.GDP.MKTP.KD.… NA      1.85   3.77    7.28
 5 Angola    AGO   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 6 Albania   ALB   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 7 Andorra   AND   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 8 Arab Wor… ARB   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
 9 United A… ARE   GDP growth (ann… NY.GDP.MKTP.KD.… NA     NA     NA      NA   
10 Argentina ARG   GDP growth (ann… NY.GDP.MKTP.KD.… NA      5.43  -0.852  -5.31
# ℹ 256 more rows
# ℹ 60 more variables: `1964` &lt;dbl&gt;, `1965` &lt;dbl&gt;, `1966` &lt;dbl&gt;, `1967` &lt;dbl&gt;,
#   `1968` &lt;dbl&gt;, `1969` &lt;dbl&gt;, `1970` &lt;dbl&gt;, `1971` &lt;dbl&gt;, `1972` &lt;dbl&gt;,
#   `1973` &lt;dbl&gt;, `1974` &lt;dbl&gt;, `1975` &lt;dbl&gt;, `1976` &lt;dbl&gt;, `1977` &lt;dbl&gt;,
#   `1978` &lt;dbl&gt;, `1979` &lt;dbl&gt;, `1980` &lt;dbl&gt;, `1981` &lt;dbl&gt;, `1982` &lt;dbl&gt;,
#   `1983` &lt;dbl&gt;, `1984` &lt;dbl&gt;, `1985` &lt;dbl&gt;, `1986` &lt;dbl&gt;, `1987` &lt;dbl&gt;,
#   `1988` &lt;dbl&gt;, `1989` &lt;dbl&gt;, `1990` &lt;dbl&gt;, `1991` &lt;dbl&gt;, `1992` &lt;dbl&gt;, …</code></pre>
</div>
</div>
<p>The dataset is for global, but we are interested for countries in Africa and get rid of countries from other continent. However, the gdp dataset does not have field for world continents. We can fix that by joining that information from other datase. Let’s us load the country_codes informtion from the <strong>geodata</strong> package <span class="citation" data-cites="geodata">(Hijmans et al., 2023)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">africa.countries <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> geodata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">country_codes</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(continent <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Africa"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">country =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">code =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb7-5"></span>
<span id="cb7-6">africa.countries</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 59 × 2
   country                  code 
   &lt;chr&gt;                    &lt;chr&gt;
 1 Algeria                  DZA  
 2 Angola                   AGO  
 3 Benin                    BEN  
 4 Botswana                 BWA  
 5 Burkina Faso             BFA  
 6 Burundi                  BDI  
 7 Cameroon                 CMR  
 8 Cabo Verde               CPV  
 9 Central African Republic CAF  
10 Chad                     TCD  
# ℹ 49 more rows</code></pre>
</div>
</div>
<p>Now we can merge the two dataset and then filter the gdp information for Africa countries</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">gdp.africa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> africa.countries <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(gdp.world) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">67</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(country, year, gdp) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(year))</span>
<span id="cb9-6"></span>
<span id="cb9-7">gdp.africa</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3,717 × 3
   country  year    gdp
   &lt;chr&gt;   &lt;int&gt;  &lt;dbl&gt;
 1 Algeria  1960  NA   
 2 Algeria  1961 -13.6 
 3 Algeria  1962 -19.7 
 4 Algeria  1963  34.3 
 5 Algeria  1964   5.84
 6 Algeria  1965   6.21
 7 Algeria  1966  -4.80
 8 Algeria  1967   9.45
 9 Algeria  1968  10.8 
10 Algeria  1969   8.43
# ℹ 3,707 more rows</code></pre>
</div>
</div>
<p>Table&nbsp;1 shows the annual growth in percentage of the gross domestic product across Africa over the last five year.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span>  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(year)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gdp"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_prefix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Year "</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">drop_na</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-6">  gt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gt</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fmt_number(decimals = 1) |&gt;</span></span>
<span id="cb11-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fmt_integer(ID) |&gt;</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cols_label_with</span>(</span>
<span id="cb11-10">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fn =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_clean_names</span>(., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">case =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all_caps"</span>)</span>
<span id="cb11-11">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_color</span>(</span>
<span id="cb11-13">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year 2018'</span>,</span>
<span id="cb11-14">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roma"</span>)</span>
<span id="cb11-15">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_color</span>(</span>
<span id="cb11-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year 2019'</span>,</span>
<span id="cb11-18">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roma"</span>)</span>
<span id="cb11-19">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_color</span>(</span>
<span id="cb11-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year 2020'</span>,</span>
<span id="cb11-22">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Roma"</span>)</span>
<span id="cb11-23">  )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_color</span>(</span>
<span id="cb11-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year 2021'</span>,</span>
<span id="cb11-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GnBu"</span>)</span>
<span id="cb11-27">  )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb11-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data_color</span>(</span>
<span id="cb11-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Year 2022'</span>,</span>
<span id="cb11-30">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GnBu"</span>)</span>
<span id="cb11-31">  )</span></code></pre></div>
<div class="cell-output-display">
<div id="tbl-gdp" class="anchored">

<div id="iztkgqjnwu" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>#iztkgqjnwu table {
  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#iztkgqjnwu thead, #iztkgqjnwu tbody, #iztkgqjnwu tfoot, #iztkgqjnwu tr, #iztkgqjnwu td, #iztkgqjnwu th {
  border-style: none;
}

#iztkgqjnwu p {
  margin: 0;
  padding: 0;
}

#iztkgqjnwu .gt_table {
  display: table;
  border-collapse: collapse;
  line-height: normal;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#iztkgqjnwu .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#iztkgqjnwu .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#iztkgqjnwu .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 3px;
  padding-bottom: 5px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#iztkgqjnwu .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iztkgqjnwu .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iztkgqjnwu .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#iztkgqjnwu .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#iztkgqjnwu .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#iztkgqjnwu .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#iztkgqjnwu .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#iztkgqjnwu .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#iztkgqjnwu .gt_spanner_row {
  border-bottom-style: hidden;
}

#iztkgqjnwu .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#iztkgqjnwu .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#iztkgqjnwu .gt_from_md > :first-child {
  margin-top: 0;
}

#iztkgqjnwu .gt_from_md > :last-child {
  margin-bottom: 0;
}

#iztkgqjnwu .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#iztkgqjnwu .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#iztkgqjnwu .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#iztkgqjnwu .gt_row_group_first td {
  border-top-width: 2px;
}

#iztkgqjnwu .gt_row_group_first th {
  border-top-width: 2px;
}

#iztkgqjnwu .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iztkgqjnwu .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#iztkgqjnwu .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#iztkgqjnwu .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iztkgqjnwu .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#iztkgqjnwu .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#iztkgqjnwu .gt_last_grand_summary_row_top {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: double;
  border-bottom-width: 6px;
  border-bottom-color: #D3D3D3;
}

#iztkgqjnwu .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#iztkgqjnwu .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#iztkgqjnwu .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iztkgqjnwu .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#iztkgqjnwu .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#iztkgqjnwu .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#iztkgqjnwu .gt_left {
  text-align: left;
}

#iztkgqjnwu .gt_center {
  text-align: center;
}

#iztkgqjnwu .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#iztkgqjnwu .gt_font_normal {
  font-weight: normal;
}

#iztkgqjnwu .gt_font_bold {
  font-weight: bold;
}

#iztkgqjnwu .gt_font_italic {
  font-style: italic;
}

#iztkgqjnwu .gt_super {
  font-size: 65%;
}

#iztkgqjnwu .gt_footnote_marks {
  font-size: 75%;
  vertical-align: 0.4em;
  position: initial;
}

#iztkgqjnwu .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#iztkgqjnwu .gt_indent_1 {
  text-indent: 5px;
}

#iztkgqjnwu .gt_indent_2 {
  text-indent: 10px;
}

#iztkgqjnwu .gt_indent_3 {
  text-indent: 15px;
}

#iztkgqjnwu .gt_indent_4 {
  text-indent: 20px;
}

#iztkgqjnwu .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table" data-quarto-disable-processing="false" data-quarto-bootstrap="false"><caption>Table&nbsp;1:  <p>GDP for African countries since from 2018 to 2022</p> </caption>
  <thead>
    
    <tr class="gt_col_headings">
      <th class="gt_col_heading gt_columns_bottom_border gt_left" rowspan="1" colspan="1" scope="col" id="COUNTRY">COUNTRY</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="YEAR_2018">YEAR_2018</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="YEAR_2019">YEAR_2019</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="YEAR_2020">YEAR_2020</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="YEAR_2021">YEAR_2021</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="YEAR_2022">YEAR_2022</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="country" class="gt_row gt_left">Algeria</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #D1EFCA; color: #000000;">1.2000000</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #A2DDBC; color: #000000;">1.0000000</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #53C0AF; color: #000000;">-5.1000000</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0070AE; color: #FFFFFF;">3.4000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #008ABA; color: #FFFFFF;">3.1000000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Angola</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #CCC86C; color: #000000;">-1.3163617</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #D2EECD; color: #000000;">-0.7022730</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #61C5B1; color: #000000;">-5.6382147</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #00579B; color: #FFFFFF;">1.1992105</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0089BA; color: #FFFFFF;">3.0454030</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Benin</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0076A3; color: #FFFFFF;">6.6972595</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0077A3; color: #FFFFFF;">6.8656873</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0056A0; color: #FFFFFF;">3.8487924</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0096BB; color: #FFFFFF;">7.1554516</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00B5BC; color: #000000;">6.2532449</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Botswana</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #40BAAD; color: #000000;">4.1898469</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #53C0AF; color: #000000;">3.0325566</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #A4DDBC; color: #000000;">-8.7294515</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #00B9BC; color: #000000;">11.8703583</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00AFBC; color: #FFFFFF;">5.7823492</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Burkina Faso</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0079A4; color: #FFFFFF;">6.6045691</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #008FA7; color: #FFFFFF;">5.6881151</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0072A3; color: #FFFFFF;">1.9303249</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0094BB; color: #FFFFFF;">6.9063417</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #006BAA; color: #FFFFFF;">1.4793006</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Burundi</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #C7EBC9; color: #000000;">1.6099354</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #86D2B6; color: #000000;">1.8125653</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0086A5; color: #FFFFFF;">0.3271569</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #006DAB; color: #FFFFFF;">3.1000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0072AF; color: #FFFFFF;">1.8490000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Cameroon</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #51C0AF; color: #000000;">3.9555142</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #3AB9AD; color: #000000;">3.4750600</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0087A6; color: #FFFFFF;">0.2599329</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0074B0; color: #FFFFFF;">3.6499169</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0090BA; color: #FFFFFF;">3.5409779</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Cabo Verde</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #62C5B1; color: #000000;">3.7069646</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0065A1; color: #FFFFFF;">7.6360817</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #C9B756; color: #000000;">-19.3028228</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0093BA; color: #FFFFFF;">6.8111764</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #F5F8EA; color: #000000;">17.7141812</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Central African Republic</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #5CC3B0; color: #000000;">3.7894436</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #4FBFAE; color: #000000;">3.1000000</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #007FA4; color: #FFFFFF;">0.9000000</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #015399; color: #FFFFFF;">0.9000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0E4D93; color: #FFFFFF;">0.0000000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Chad</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #A7DEBD; color: #000000;">2.3740378</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #48BDAE; color: #000000;">3.2471819</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #009CA9; color: #FFFFFF;">-1.6000067</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #2A3A84; color: #FFFFFF;">-1.1999905</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #007AB4; color: #FFFFFF;">2.2359797</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Comoros</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #65C6B1; color: #000000;">3.6424511</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #88D3B6; color: #000000;">1.7607802</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #008CA6; color: #FFFFFF;">-0.1955568</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0061A3; color: #FFFFFF;">2.1121956</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #007DB6; color: #FFFFFF;">2.3876785</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Djibouti</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #01ACAB; color: #FFFFFF;">4.7744169</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0092A7; color: #FFFFFF;">5.5451306</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #007BA4; color: #FFFFFF;">1.2020220</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0080B8; color: #FFFFFF;">4.8000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0088BA; color: #FFFFFF;">3.0000000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Equatorial Guinea</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #7D0112; color: #FFFFFF;">-6.2365441</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #C8B04E; color: #000000;">-5.4818254</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #37B8AD; color: #000000;">-4.2414813</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #273D87; color: #FFFFFF;">-0.9453829</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #008ABA; color: #FFFFFF;">3.1457983</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Ethiopia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0073A3; color: #FFFFFF;">6.8161478</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00519F; color: #FFFFFF;">8.3640857</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #1F28A2; color: #FFFFFF;">6.0595309</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0089BA; color: #FFFFFF;">5.6415307</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00AABB; color: #FFFFFF;">5.3170960</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Gabon</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #CEF0BA; color: #000000;">0.8379166</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #19B1AC; color: #FFFFFF;">3.9208088</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #009FA9; color: #FFFFFF;">-1.8377611</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #005A9E; color: #FFFFFF;">1.4679573</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0089BA; color: #FFFFFF;">3.0369419</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Ghana</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0085A5; color: #FFFFFF;">6.2000777</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #007FA4; color: #FFFFFF;">6.5077748</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0084A5; color: #FFFFFF;">0.5139417</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0086BA; color: #FFFFFF;">5.3564779</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #008CBA; color: #FFFFFF;">3.2397063</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Guinea-Bissau</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #D2EECD; color: #000000;">1.2837367</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00A7AA; color: #FFFFFF;">4.5000000</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #00A5AA; color: #FFFFFF;">-2.4000000</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0075B1; color: #FFFFFF;">3.8000024</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0090BA; color: #FFFFFF;">3.5000496</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Guinea</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0081A5; color: #FFFFFF;">6.3584919</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0091A7; color: #FFFFFF;">5.6169145</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #00449F; color: #FFFFFF;">4.9202664</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0076B2; color: #FFFFFF;">3.9000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A1BB; color: #FFFFFF;">4.7000000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Kenya</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0095A8; color: #FFFFFF;">5.6479464</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #009BA8; color: #FFFFFF;">5.1141589</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #008DA6; color: #FFFFFF;">-0.2727663</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #009ABB; color: #FFFFFF;">7.5904895</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A3BB; color: #FFFFFF;">4.8466349</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Lesotho</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #CBC366; color: #000000;">-1.4806336</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #D1EFCB; color: #000000;">-0.7642260</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #60C4B0; color: #000000;">-5.6194024</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #005B9E; color: #FFFFFF;">1.5576798</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00599C; color: #FFFFFF;">0.5919178</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Liberia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #D1EFC8; color: #000000;">1.1575751</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #CDE69B; color: #000000;">-2.4672976</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #00ABAB; color: #FFFFFF;">-2.9824913</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0082B8; color: #FFFFFF;">4.9867128</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A2BB; color: #FFFFFF;">4.8081135</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Libya</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #014A9F; color: #FFFFFF;">7.9413679</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #7D0112; color: #FFFFFF;">-11.1956946</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #7D0112; color: #FFFFFF;">-29.7871480</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #F5F8EA; color: #000000;">31.3725154</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #2F327D; color: #FFFFFF;">-1.2369819</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Madagascar</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #7FD0B4; color: #000000;">3.1943565</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00A9AA; color: #FFFFFF;">4.4112321</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #84D2B5; color: #000000;">-7.1376716</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #008ABA; color: #FFFFFF;">5.7396157</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0094BB; color: #FFFFFF;">3.7962049</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Malawi</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #2EB5AD; color: #000000;">4.3916883</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0094A7; color: #FFFFFF;">5.4481813</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0080A5; color: #FFFFFF;">0.7999983</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0069A9; color: #FFFFFF;">2.7514026</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #005FA2; color: #FFFFFF;">0.9234363</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Mali</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #05ADAB; color: #FFFFFF;">4.7464843</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00A2A9; color: #FFFFFF;">4.7561608</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0098A8; color: #FFFFFF;">-1.2354504</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #006CAB; color: #FFFFFF;">3.0526136</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0093BA; color: #FFFFFF;">3.6874841</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Mauritania</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #02ACAB; color: #FFFFFF;">4.7721736</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0097A8; color: #FFFFFF;">5.2966374</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0095A8; color: #FFFFFF;">-0.9385162</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0066A6; color: #FFFFFF;">2.4453683</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A8BB; color: #FFFFFF;">5.2000000</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Mauritius</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #4EBEAE; color: #000000;">4.0067406</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #59C2B0; color: #000000;">2.8912850</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #CDE69C; color: #000000;">-14.5973980</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0070AE; color: #FFFFFF;">3.3993801</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #63CFBF; color: #000000;">8.6907351</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Morocco</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #86D2B6; color: #000000;">3.0656413</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #59C2B0; color: #000000;">2.8909748</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #85D2B5; color: #000000;">-7.1870796</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #009DBB; color: #FFFFFF;">7.9296679</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0062A4; color: #FFFFFF;">1.0799695</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Mozambique</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #71CBB2; color: #000000;">3.4438131</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #72CBB2; color: #000000;">2.3144426</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0098A8; color: #FFFFFF;">-1.1985483</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0064A5; color: #FFFFFF;">2.3275236</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #009ABB; color: #FFFFFF;">4.1484145</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Namibia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #CFF1C3; color: #000000;">1.0599435</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #D1EFC8; color: #000000;">-0.8391547</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #98D9B9; color: #000000;">-8.1014008</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0072AF; color: #FFFFFF;">3.5246580</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #009FBB; color: #FFFFFF;">4.5602940</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Niger</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0065A1; color: #FFFFFF;">7.2108030</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #008AA6; color: #FFFFFF;">5.9413969</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #005BA0; color: #FFFFFF;">3.5502275</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #00599D; color: #FFFFFF;">1.3871292</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #ACE4C8; color: #000000;">11.5000049</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Nigeria</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #BBE6C4; color: #000000;">1.9227573</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #76CDB3; color: #000000;">2.2084293</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #009EA9; color: #FFFFFF;">-1.7942531</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0074B0; color: #FFFFFF;">3.6471865</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #008CBA; color: #FFFFFF;">3.2516814</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Rwanda</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #1F28A2; color: #FFFFFF;">8.5398365</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #1F28A2; color: #FFFFFF;">9.4640253</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #12AFAC; color: #FFFFFF;">-3.3739863</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #00B2BC; color: #FFFFFF;">10.8767338</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #50CABE; color: #000000;">8.1574877</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Senegal</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0085A5; color: #FFFFFF;">6.2092410</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00A5AA; color: #FFFFFF;">4.6136281</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0079A4; color: #FFFFFF;">1.3420738</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0091BA; color: #FFFFFF;">6.5396737</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #009ABB; color: #FFFFFF;">4.1538565</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Seychelles</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #61C5B1; color: #000000;">3.7094343</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #00A0A9; color: #FFFFFF;">4.8769462</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #A3DDBC; color: #000000;">-8.6492065</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0086BA; color: #FFFFFF;">5.4000000</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #67D0BF; color: #000000;">8.8000002</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Sierra Leone</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #6FCAB2; color: #000000;">3.4729026</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0098A8; color: #FFFFFF;">5.2537463</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #00A0A9; color: #FFFFFF;">-1.9684869</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0079B3; color: #FFFFFF;">4.1047001</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0090BA; color: #FFFFFF;">3.5007417</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Somalia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #005AA0; color: #FFFFFF;">7.5309693</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0069A2; color: #FFFFFF;">7.4565215</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #006AA2; color: #FFFFFF;">2.4893743</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0078B3; color: #FFFFFF;">4.0491105</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A2BB; color: #FFFFFF;">4.7987790</td></tr>
    <tr><td headers="country" class="gt_row gt_left">South Africa</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #CAECCA; color: #000000;">1.5223294</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #B8E5C3; color: #000000;">0.3034532</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #72CBB2; color: #000000;">-6.3424711</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0081B8; color: #FFFFFF;">4.9130967</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0076B2; color: #FFFFFF;">2.0422994</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Sudan</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #C39F3D; color: #000000;">-2.6809305</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #CDE9A3; color: #000000;">-2.1782510</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #1BB2AC; color: #FFFFFF;">-3.6298008</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #2F327D; color: #FFFFFF;">-1.8685205</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #2C3882; color: #FFFFFF;">-0.9534070</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Eswatini</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #A7DEBD; color: #000000;">2.3800955</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #62C5B1; color: #000000;">2.6921683</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #009CA9; color: #FFFFFF;">-1.5596426</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #009CBB; color: #FFFFFF;">7.8833064</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #0096BB; color: #FFFFFF;">3.9145410</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Tanzania</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #009AA8; color: #FFFFFF;">5.4575829</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #008DA6; color: #FFFFFF;">5.8000000</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0071A3; color: #FFFFFF;">1.9919646</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #007BB5; color: #FFFFFF;">4.3213843</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #009FBB; color: #FFFFFF;">4.5580273</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Togo</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #00A3AA; color: #FFFFFF;">5.1384723</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #009FA9; color: #FFFFFF;">4.9229259</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0071A3; color: #FFFFFF;">1.9757429</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #008CBA; color: #FFFFFF;">5.9915720</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00B0BC; color: #FFFFFF;">5.8105400</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Tunisia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #9BDABA; color: #000000;">2.6248283</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #8ED5B7; color: #000000;">1.5880128</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #A6DEBD; color: #000000;">-8.8178788</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #007CB5; color: #FFFFFF;">4.4053620</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #007FB7; color: #FFFFFF;">2.5217614</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Uganda</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #0082A5; color: #FFFFFF;">6.3039238</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #0080A5; color: #FFFFFF;">6.4387450</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #0064A1; color: #FFFFFF;">2.9513064</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #0072AF; color: #FFFFFF;">3.5365803</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A0BB; color: #FFFFFF;">4.6501337</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Zambia</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #4CBEAE; color: #000000;">4.0344939</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #93D7B8; color: #000000;">1.4413060</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #00A9AB; color: #FFFFFF;">-2.7850551</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #007EB6; color: #FFFFFF;">4.5987340</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #00A1BB; color: #FFFFFF;">4.7449425</td></tr>
    <tr><td headers="country" class="gt_row gt_left">Zimbabwe</td>
<td headers="Year 2018" class="gt_row gt_right" style="background-color: #00A7AA; color: #FFFFFF;">5.0098668</td>
<td headers="Year 2019" class="gt_row gt_right" style="background-color: #C39C3A; color: #FFFFFF;">-6.3324464</td>
<td headers="Year 2020" class="gt_row gt_right" style="background-color: #92D6B8; color: #000000;">-7.8169506</td>
<td headers="Year 2021" class="gt_row gt_right" style="background-color: #00A0BB; color: #FFFFFF;">8.4680169</td>
<td headers="Year 2022" class="gt_row gt_right" style="background-color: #008EBA; color: #FFFFFF;">3.4000000</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
</div>
<section id="barchart" class="level3">
<h3 class="anchored" data-anchor-id="barchart">Barchart</h3>
<p>Let’ check the bar chart for all countries in Africa</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, </span>
<span id="cb12-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-10-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We notice that the countries are cluttered and make it difficult to visualize and read them. Fortunate, bar_chart has a wrapper <code>top_n</code> function, that can limit only a certain number of countries with positive values to be plotted</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, </span>
<span id="cb13-5">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-11-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Likewise, the negative values prefix of <code>top_n</code> will limit only list</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-12-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We can highlight the country of interest with <code>highlight</code> function</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, </span>
<span id="cb15-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>You can highlight more than one</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, </span>
<span id="cb16-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ghana"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-14-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>and use the facet if you wish to check the change of highlighted countries for more than one year</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb17-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, </span>
<span id="cb17-4">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet =</span> year)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-15-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>and finally the theme</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bar_chart</span>(</span>
<span id="cb18-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, </span>
<span id="cb18-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, </span>
<span id="cb18-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet =</span> year)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-7">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_nightblue</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="lollipop-plot" class="level3">
<h3 class="anchored" data-anchor-id="lollipop-plot">Lollipop plot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-17-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb20-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-18-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-19-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, </span>
<span id="cb22-4">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-20-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb23-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2020</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb23-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, </span>
<span id="cb23-4">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ghana"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb24-4">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet =</span> year)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb24-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb25-1">gdp.africa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb25-3">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lollipop_chart</span>(</span>
<span id="cb25-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> gdp, </span>
<span id="cb25-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">highlight =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, </span>
<span id="cb25-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">facet =</span> year)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-7">  ggcharts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_ng</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Countries"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Annual Growth Domestic Product (%)"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ggcharts/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="references" class="level2 unnumbered">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-geodata" class="csl-entry">
Hijmans, R.J., Barbosa, M., Ghosh, A., Mandel, A., 2023. <a href="https://CRAN.R-project.org/package=geodata">Geodata: Download geographic data</a>.
</div>
<div id="ref-ggchart" class="csl-entry">
Neitmann, T., 2020. <a href="https://CRAN.R-project.org/package=ggcharts">Ggcharts: Shorten the distance from data visualization idea to actual plot</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, H., 2016. <a href="https://ggplot2.tidyverse.org">ggplot2: Elegant graphics for data analysis</a>. Springer-Verlag New York.
</div>
<div id="ref-dplyr" class="csl-entry">
Wickham, H., François, R., Henry, L., Müller, K., 2019. <a href="https://CRAN.R-project.org/package=dplyr">Dplyr: A grammar of data manipulation</a>.
</div>
<div id="ref-readr" class="csl-entry">
Wickham, H., Hester, J., Francois, R., 2017. <a href="https://CRAN.R-project.org/package=readr">Readr: Read rectangular text data</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/ggcharts/index.html</guid>
  <pubDate>Sat, 01 Jul 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/ggcharts/ims.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Information Management Strategy for Coastal and Marine Data</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/ims/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Coastal and marine data is crucial for various stakeholders, including government agencies, non-governmental organizations, researchers, and the private sector. However, managing this data can be a daunting task, given the complexity of the coastal and marine environment. An information management strategy is a framework that outlines how data will be collected, stored, analyzed, and disseminated to meet the needs of stakeholders. In this article, we will discuss what an information management strategy is and how to write one for coastal and marine data.</p>
</section>
<section id="what-is-an-information-management-strategy" class="level2">
<h2 class="anchored" data-anchor-id="what-is-an-information-management-strategy">What is an Information Management Strategy?</h2>
<p>An information management strategy is a plan that outlines how an organization will manage its data. It includes policies, procedures, and practices that ensure data quality, security, accessibility, and usability. An effective information management strategy should align with the organization’s goals and objectives, as well as its overall business strategy.</p>
<p>An information management strategy typically includes the following components:</p>
<ol type="1">
<li><p>Data Governance: This refers to the policies and procedures that ensure data quality, security, and privacy. It includes roles and responsibilities for data management, data standards, and data security measures.</p></li>
<li><p>Data Architecture: This refers to the design of the data infrastructure, including databases, data warehouses, and data lakes. It includes the organization’s data models, data flow diagrams, and data dictionaries.</p></li>
<li><p>Data Management: This refers to the processes for collecting, storing, and managing data. It includes data entry procedures, data cleaning processes, and data storage protocols.</p></li>
<li><p>Data Analysis: This refers to the processes for analyzing data to derive insights. It includes statistical analysis, machine learning algorithms, and data visualization.</p></li>
<li><p>Data Dissemination: This refers to the processes for sharing data with stakeholders. It includes data publishing protocols, data access policies, and data sharing agreements.</p></li>
</ol>
<p>How to Write an Information Management Strategy for Coastal and Marine Data?</p>
<p>Writing an information management strategy for coastal and marine data can be challenging due to the complexity of the environment. However, following these steps can help you develop an effective strategy:</p>
<section id="step-1-define-the-scope" class="level3">
<h3 class="anchored" data-anchor-id="step-1-define-the-scope">Step 1: Define the Scope</h3>
<p>The first step in writing an information management strategy is to define the scope of the strategy. This includes identifying the stakeholders who will use the data and the types of data that will be managed. For coastal and marine data, stakeholders may include government agencies responsible for managing coastal resources, researchers studying marine ecosystems, and private sector companies involved in offshore activities. The types of data may include oceanographic data, ecological data, socio-economic data, and geospatial data.</p>
</section>
<section id="step-2-assess-data-needs" class="level3">
<h3 class="anchored" data-anchor-id="step-2-assess-data-needs">Step 2: Assess Data Needs</h3>
<p>The next step is to assess the data needs of stakeholders. This involves identifying the types of data that stakeholders require to achieve their objectives. For example, government agencies may require oceanographic data to monitor water quality and weather patterns, while researchers may require ecological data to study marine biodiversity.</p>
</section>
<section id="step-3-develop-data-governance-policies" class="level3">
<h3 class="anchored" data-anchor-id="step-3-develop-data-governance-policies">Step 3: Develop Data Governance Policies</h3>
<p>Once you have identified the stakeholders and their data needs, the next step is to develop data governance policies. This includes defining roles and responsibilities for data management, establishing data quality standards, and ensuring compliance with relevant regulations.</p>
</section>
<section id="step-4-design-data-architecture" class="level3">
<h3 class="anchored" data-anchor-id="step-4-design-data-architecture">Step 4: Design Data Architecture</h3>
<p>The next step is to design the data architecture. This involves selecting appropriate database technologies and designing a schema that reflects the relationships between different types of data. For example, oceanographic data may be linked to ecological data to understand how changes in water quality affect marine biodiversity.</p>
</section>
<section id="step-5-develop-data-management-processes" class="level3">
<h3 class="anchored" data-anchor-id="step-5-develop-data-management-processes">Step 5: Develop Data Management Processes</h3>
<p>The next step is to develop data management processes. This includes defining procedures for collecting, storing, and managing data. For example, procedures may be established for collecting oceanographic data using sensors deployed on buoys or research vessels.</p>
</section>
<section id="step-6-define-data-analysis-procedures" class="level3">
<h3 class="anchored" data-anchor-id="step-6-define-data-analysis-procedures">Step 6: Define Data Analysis Procedures</h3>
<p>The next step is to define procedures for analyzing data. This includes selecting appropriate statistical methods or machine learning algorithms to derive insights from the data. For example, machine learning algorithms may be used to predict changes in water quality based on historical oceanographic data.</p>
</section>
<section id="step-7-develop-data-dissemination-protocols" class="level3">
<h3 class="anchored" data-anchor-id="step-7-develop-data-dissemination-protocols">Step 7: Develop Data Dissemination Protocols</h3>
<p>The final step is to develop protocols for disseminating data to stakeholders. This includes defining access policies and sharing agreements that ensure that sensitive or confidential information is protected. For example, access controls may be established to limit access to certain types of data based on user roles or permissions.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>An information management strategy is essential for managing coastal and marine data effectively. It provides a framework for collecting, storing, analyzing, and disseminating data to meet the needs of stakeholders. Developing an effective information management strategy requires careful planning and consideration of stakeholder needs. By following these steps, organizations can develop a strategy that aligns with their goals and objectives while ensuring that coastal and marine resources are managed sustainably for future generations.</p>
<!-- ## Cited sources -->


</section>

 ]]></description>
  <category>Spatial</category>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/ims/index.html</guid>
  <pubDate>Mon, 22 May 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/ims/ims.png" medium="image" type="image/png" height="235" width="144"/>
</item>
<item>
  <title>Streamlines for Surface Currents in Coastal Waters of Western Indian Ocean Region</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/streamline/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<section id="streamline" class="level2">
<h2 class="anchored" data-anchor-id="streamline">Streamline</h2>
<p>Streamlines are imaginary lines that are tangent to the velocity vector at every point in space. They represent the path that a fluid particle would follow if it were released into the flow. The density of streamlines represents the speed of the fluid at each point.</p>
<p>Streamlines are a powerful visualization tool used to understand fluid flow patterns. They are a series of lines that show the direction and magnitude of fluid motion at every point in space. Streamlines are commonly used in fields such as aerodynamics, hydrodynamics, and meteorology to analyze and visualize fluid flow patterns.</p>
<p>In this blog post, we will describe how to plot streamlines for surface current using R language. We will use the coastal waters of the Western Indian Ocean region as a case study, using drifter data from GDP. I will show you how to visualize vector field of ocean surface current using the <em>ggplot2</em> package <span class="citation" data-cites="ggplot">(Wickham, 2016)</span>.</p>
<p>I will further highlight the drawbacks of the default <em>geom</em> of <strong>ggplot2</strong> and why sometimes <strong>ggplot2</strong> functions fail to produce elegant oceanographic plots. Last I will illustrate the use of alternative <em>geoms</em> from <strong>metR</strong> package <span class="citation" data-cites="metr">(Campitelli, 2019)</span> to overcome the challenges inherited in <strong>ggplot2</strong> package.</p>
<p>In R, loading packages is an essential step to access additional functionality and tools for data manipulation, visualization, and analysis. The chunk below load the packages needed in this post;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(metR)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(lubridate)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(oce)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(sf)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(patchwork)</span></code></pre></div>
</div>
<p>We aslo need a basemap for our area of interest. I simply load the world map spatial object from the <em>spData</em> package and then uses the <em>sf</em> package’s <code>st_crop()</code> function to extract a the East African land mass of the world map based on specified minimum and maximum values for the longitude and latitude coordinates. The resulting spatial object, <code>wio</code>, represents the cropped WIO region area.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">world <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> spData<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>world</span>
<span id="cb2-2"></span>
<span id="cb2-3">wio <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> world <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crop</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span> , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>To illustrate the concept, I am going to use drifter data from Global Drifter Program (GDP). Drifters are oceanographic instruments that are used to track the movement of surface currents. They consist of a buoy that floats on the ocean’s surface, and a drogue that is attached to the buoy and trails behind it at a depth of 15 meters. The drogue is designed to move with the water, providing an accurate measurement of the surface current.</p>
<p>The Drifter dataset comprises information on surface current velocity associated with geographical locations. This spatial data allows us to gain insights into the distribution of high-speed and low-speed currents in the ocean. Visualizing this data within a geospatial context, such as displaying it on an accurate map, is beneficial. I have filtered the data to focus on the western region of the tropical Indian Ocean. I have organized and structured the drifter information into a data frame, which is a tabular representation consisting of variables (columns) and observations (rows). The dataset encompasses surface current observations worldwide, collected by the Global Drifter Program across major oceans. The Table&nbsp;1 displays some of the variables included in the dataset.</p>
<ul>
<li>id: a unique number of drifter</li>
<li>lon: longitude information</li>
<li>lat: latitude information</li>
<li>year, month, day, hour of the drifter records</li>
<li>u: the zonal component of surface current</li>
<li>v: the meridional component of the surface current</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"drifter_split.RData"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4">drifter.split<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(drogue, season, sst)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-7">  knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">format =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"html"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">caption =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A sample of drifter dataset"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">align =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-8">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_spec</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">column =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3cm"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-9">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_header_above</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Location"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Date Records"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Current"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
<div class="cell-output-display">
<div id="tbl-tab1" class="anchored">
<table data-quarto-postprocess="true" class="table table-sm table-striped small">
<caption>Table&nbsp;1: A sample of drifter dataset of the WIO region</caption>
<colgroup>
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th" style="text-align: center; empty-cells: hide; border-bottom: hidden;"></th>
<th colspan="2" data-quarto-table-cell-role="th" style="text-align: center; border-bottom: hidden; padding-bottom: 0; padding-left: 3px; padding-right: 3px;"><div style="border-bottom: 1px solid #ddd; padding-bottom: 5px; ">
Location
</div></th>
<th colspan="4" data-quarto-table-cell-role="th" style="text-align: center; border-bottom: hidden; padding-bottom: 0; padding-left: 3px; padding-right: 3px;"><div style="border-bottom: 1px solid #ddd; padding-bottom: 5px; ">
Date Records
</div></th>
<th colspan="2" data-quarto-table-cell-role="th" style="text-align: center; border-bottom: hidden; padding-bottom: 0; padding-left: 3px; padding-right: 3px;"><div style="border-bottom: 1px solid #ddd; padding-bottom: 5px; ">
Current
</div></th>
</tr>
<tr class="odd">
<th style="text-align: center;" data-quarto-table-cell-role="th">id</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">lon</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">lat</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">year</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">month</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">day</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">hour</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">u</th>
<th style="text-align: center;" data-quarto-table-cell-role="th">v</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center; width: 3cm;">114807</td>
<td style="text-align: center; width: 3cm;">51.19</td>
<td style="text-align: center; width: 3cm;">-16.58</td>
<td style="text-align: center; width: 3cm;">2013</td>
<td style="text-align: center; width: 3cm;">6</td>
<td style="text-align: center; width: 3cm;">7</td>
<td style="text-align: center; width: 3cm;">0</td>
<td style="text-align: center; width: 3cm;">0.23</td>
<td style="text-align: center; width: 3cm;">0.19</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">63945810</td>
<td style="text-align: center; width: 3cm;">50.99</td>
<td style="text-align: center; width: 3cm;">-4.53</td>
<td style="text-align: center; width: 3cm;">2017</td>
<td style="text-align: center; width: 3cm;">12</td>
<td style="text-align: center; width: 3cm;">30</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">0.53</td>
<td style="text-align: center; width: 3cm;">0.52</td>
</tr>
<tr class="odd">
<td style="text-align: center; width: 3cm;">64726990</td>
<td style="text-align: center; width: 3cm;">40.03</td>
<td style="text-align: center; width: 3cm;">-6.82</td>
<td style="text-align: center; width: 3cm;">2017</td>
<td style="text-align: center; width: 3cm;">7</td>
<td style="text-align: center; width: 3cm;">1</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">-0.64</td>
<td style="text-align: center; width: 3cm;">1.40</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">109535</td>
<td style="text-align: center; width: 3cm;">47.32</td>
<td style="text-align: center; width: 3cm;">-5.43</td>
<td style="text-align: center; width: 3cm;">2014</td>
<td style="text-align: center; width: 3cm;">11</td>
<td style="text-align: center; width: 3cm;">20</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">-0.13</td>
<td style="text-align: center; width: 3cm;">-0.26</td>
</tr>
<tr class="odd">
<td style="text-align: center; width: 3cm;">9727912</td>
<td style="text-align: center; width: 3cm;">42.50</td>
<td style="text-align: center; width: 3cm;">-9.83</td>
<td style="text-align: center; width: 3cm;">1998</td>
<td style="text-align: center; width: 3cm;">10</td>
<td style="text-align: center; width: 3cm;">3</td>
<td style="text-align: center; width: 3cm;">6</td>
<td style="text-align: center; width: 3cm;">-0.08</td>
<td style="text-align: center; width: 3cm;">0.16</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">25006</td>
<td style="text-align: center; width: 3cm;">52.43</td>
<td style="text-align: center; width: 3cm;">-11.27</td>
<td style="text-align: center; width: 3cm;">2001</td>
<td style="text-align: center; width: 3cm;">8</td>
<td style="text-align: center; width: 3cm;">5</td>
<td style="text-align: center; width: 3cm;">12</td>
<td style="text-align: center; width: 3cm;">-0.27</td>
<td style="text-align: center; width: 3cm;">0.11</td>
</tr>
<tr class="odd">
<td style="text-align: center; width: 3cm;">63356010</td>
<td style="text-align: center; width: 3cm;">45.10</td>
<td style="text-align: center; width: 3cm;">-6.74</td>
<td style="text-align: center; width: 3cm;">2017</td>
<td style="text-align: center; width: 3cm;">4</td>
<td style="text-align: center; width: 3cm;">16</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">0.64</td>
<td style="text-align: center; width: 3cm;">0.16</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">63816</td>
<td style="text-align: center; width: 3cm;">51.43</td>
<td style="text-align: center; width: 3cm;">-4.45</td>
<td style="text-align: center; width: 3cm;">2009</td>
<td style="text-align: center; width: 3cm;">10</td>
<td style="text-align: center; width: 3cm;">23</td>
<td style="text-align: center; width: 3cm;">12</td>
<td style="text-align: center; width: 3cm;">0.17</td>
<td style="text-align: center; width: 3cm;">0.31</td>
</tr>
<tr class="odd">
<td style="text-align: center; width: 3cm;">45979</td>
<td style="text-align: center; width: 3cm;">44.52</td>
<td style="text-align: center; width: 3cm;">-12.50</td>
<td style="text-align: center; width: 3cm;">2005</td>
<td style="text-align: center; width: 3cm;">5</td>
<td style="text-align: center; width: 3cm;">14</td>
<td style="text-align: center; width: 3cm;">0</td>
<td style="text-align: center; width: 3cm;">-0.37</td>
<td style="text-align: center; width: 3cm;">-0.19</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">52953</td>
<td style="text-align: center; width: 3cm;">47.45</td>
<td style="text-align: center; width: 3cm;">-11.91</td>
<td style="text-align: center; width: 3cm;">2005</td>
<td style="text-align: center; width: 3cm;">1</td>
<td style="text-align: center; width: 3cm;">16</td>
<td style="text-align: center; width: 3cm;">12</td>
<td style="text-align: center; width: 3cm;">-0.09</td>
<td style="text-align: center; width: 3cm;">-0.11</td>
</tr>
<tr class="odd">
<td style="text-align: center; width: 3cm;">63071</td>
<td style="text-align: center; width: 3cm;">50.12</td>
<td style="text-align: center; width: 3cm;">-4.17</td>
<td style="text-align: center; width: 3cm;">2008</td>
<td style="text-align: center; width: 3cm;">1</td>
<td style="text-align: center; width: 3cm;">10</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">0.15</td>
<td style="text-align: center; width: 3cm;">-0.13</td>
</tr>
<tr class="even">
<td style="text-align: center; width: 3cm;">61478290</td>
<td style="text-align: center; width: 3cm;">53.84</td>
<td style="text-align: center; width: 3cm;">-12.38</td>
<td style="text-align: center; width: 3cm;">2016</td>
<td style="text-align: center; width: 3cm;">1</td>
<td style="text-align: center; width: 3cm;">4</td>
<td style="text-align: center; width: 3cm;">18</td>
<td style="text-align: center; width: 3cm;">-0.32</td>
<td style="text-align: center; width: 3cm;">-0.03</td>
</tr>
</tbody>
</table>
</div>


</div>
</div>
<p>The drifter observations in the specified area, as illustrated in Figure&nbsp;1, were randomly scattered. To facilitate analysis and visualization, it is necessary to apply binning, which involves creating a grid with equally sized cells across the area. This binning process enables the organization of observations into a structured grid, allowing for easier interpretation and further exploration of the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## convert drifter observation into simple features</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">drifter.split.sf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">coords =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4326</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> drifter.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(season <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">               <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_frac</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/streamline/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: The distribution of drifter observation within the area</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="binning" class="level2">
<h2 class="anchored" data-anchor-id="binning">Binning</h2>
<p>To plot streamlines in R, we first need to create a grid of points that covers the area of interest. We can do this using the <code>st_make_grid</code> function from the <em>sf</em> package. The <code>st_make_grid</code> function takes two vectors as input and returns the area divided into equal size grids show in in Figure&nbsp;2.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## divide the tropical indian ocean region into grids</span></span>
<span id="cb6-2">drifter.grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.split.sf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_make_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_sf</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## </span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> drifter.grid)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">36</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/streamline/index_files/figure-html/fig-fig2-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Gridded area to fill drifter observations</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Subsequently, after performing the binning process to organize the randomly distributed drifter observations into a grid, we can proceed with further computations. Specifically, we can calculate the number of drifters present in each individual grid cell, providing valuable insights into the density and distribution patterns across the area. Additionally, we can analyze the binned observations to determine the mean zonal (east-west) and meridional (north-south) velocity fields. Since we have split drifter data into northeast (NE) and southeast (SE) monsoon season, let’s begin with NE season;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">drifter.split.sf.ne <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.split.sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(season <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NE"</span>)</span>
<span id="cb8-2"></span>
<span id="cb8-3">drifter.gridded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.grid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), </span>
<span id="cb8-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contained =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_contains</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_sf</span>(geometry),drifter.split.sf.ne),identity),</span>
<span id="cb8-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, length),</span>
<span id="cb8-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">u =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(drifter.split.sf.ne[x,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>u, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)}),</span>
<span id="cb8-8">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(drifter.split.sf.ne[x,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>v, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)}))</span>
<span id="cb8-9"></span>
<span id="cb8-10">drifter.gridded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.gridded <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(obs, u, v) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na.omit</span>()</span>
<span id="cb8-13"></span>
<span id="cb8-14">coordinates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.gridded <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_coordinates</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y)</span>
<span id="cb8-18"></span>
<span id="cb8-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_geometry</span>(drifter.gridded) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb8-20"></span>
<span id="cb8-21">current.gridded.ne <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coordinates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(drifter.gridded)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">season =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NE"</span>)</span></code></pre></div>
</div>
<p>Then, the same process is done for the southeast monsoon season</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">drifter.split.sf.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.split.sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(season<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SE"</span>)</span>
<span id="cb9-2"></span>
<span id="cb9-3">drifter.gridded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.grid <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">contained =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_contains</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_sf</span>(geometry),drifter.split.sf.se),identity),</span>
<span id="cb9-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, length),</span>
<span id="cb9-6">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">u =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(drifter.split.sf.se[x,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>u, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)}),</span>
<span id="cb9-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(contained, <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) {<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>(drifter.split.sf.se[x,]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>v, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)})) </span>
<span id="cb9-8"></span>
<span id="cb9-9"></span>
<span id="cb9-10">drifter.gridded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.gridded <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(obs, u, v) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na.omit</span>()</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## obtain the centroid coordinates from the grid as table</span></span>
<span id="cb9-15">coordinates <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.gridded <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_centroid</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_coordinates</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> X, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> Y)</span>
<span id="cb9-20"></span>
<span id="cb9-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## remove the geometry from the simple feature of gridded drifter dataset</span></span>
<span id="cb9-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_geometry</span>(drifter.gridded) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb9-23"></span>
<span id="cb9-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## stitch together the extracted coordinates and drifter information int a single table for SE monsoon season</span></span>
<span id="cb9-25">current.gridded.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> coordinates <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(drifter.gridded) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">season =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SE"</span>)</span>
<span id="cb9-28"></span>
<span id="cb9-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## bind the gridded table for SE and NE</span></span>
<span id="cb9-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Note that similar NE follow similar procedure, hence not shown in the post</span></span>
<span id="cb9-31">drifter.current.gridded <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> current.gridded.ne <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(current.gridded.se)</span></code></pre></div>
</div>
<p>Upon analyzing the number of observations and velocity field within each grid cell, it became evident that certain grids lacked any drifter observations. To ensure smooth visualization, it was crucial to address this issue by filling these empty grids with appropriate U and V values. To accomplish this, an interpolation technique was employed. By applying interpolation, the missing U and V values were estimated for the empty grids, enabling a more seamless visualization of the data. The provided code chunk highlights the implementation of the interpolation process.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## select grids for SE season only</span></span>
<span id="cb10-2">drf.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> drifter.current.gridded <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(season <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SE"</span>)</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## interpolate the U component</span></span>
<span id="cb10-6">u.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interpBarnes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>u)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## obtain dimension that determine the width (ncol) and length (nrow) for tranforming wide into long format table</span></span>
<span id="cb10-9">dimension <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lon =</span> u.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xg, u.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>zg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>()</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## make a U component data table from interpolated matrix</span></span>
<span id="cb10-12">u.tb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lon =</span> u.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xg, </span>
<span id="cb10-13">                  u.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>zg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lata"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"u"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>dimension[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(u.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> dimension[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(lon,lat, u) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.tibble</span>()</span>
<span id="cb10-17"></span>
<span id="cb10-18"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## interpolate the V component</span></span>
<span id="cb10-19">v.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">interpBarnes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x, </span>
<span id="cb10-20">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, </span>
<span id="cb10-21">                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> drf.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>v)</span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## make the V component data table from interpolated matrix</span></span>
<span id="cb10-24">v.tb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lon =</span> v.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>xg, v.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>zg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gather</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lata"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>dimension[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lat =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(v.se<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>yg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">each =</span> dimension[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(lon,lat, v) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.tibble</span>()</span></code></pre></div>
</div>
<p>Once the zonal and meridional velocities have been filled in the grids, it becomes possible to calculate the velocity field at each individual grid point. This can be achieved by computing the magnitude of the velocity vector using the equation:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Avel%20=%20%5Csqrt%7Bv%5E2%20+%20u%5E2%7D%0A"> In this equation, the variable <code>v</code> represents the meridional velocity component, while <code>u</code> represents the zonal velocity component. By taking the square root of the sum of the squares of these components, we obtain the magnitude of the velocity vector, denoted as <code>vel</code>. This magnitude represents the overall speed or intensity of the velocity at each point in the grid, providing valuable insights into the spatial variations and patterns of the velocity field. The provided code chunk highlights the computation of the velocity field.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## stitch now the V component intot the U data table and compute the velocity</span></span>
<span id="cb11-2">uv.se <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> u.tb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(v.tb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(v)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vel =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(u<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>v<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span></code></pre></div>
</div>
<p>The code takes two data frames, <code>u.tb</code> and <code>v.tb</code>, and combines them into a new data frame and compute the velocity of the surface current and store them in a new column called <code>ve</code> from the corresponding values from the u and v columns.</p>
<section id="visualising-vector-field" class="level3">
<h3 class="anchored" data-anchor-id="visualising-vector-field">Visualising Vector field</h3>
<p>Figure&nbsp;3 was made with <strong>ggplot2</strong> package. The smoothed velocity grid was created with the <code>geom_raster()</code> function and the vector field showing the direction and speed superimposed on the current velocity was done with the <code>segment()</code> function. You notice that these geoms did a wonderful job and the figure is surface current speed and direction are clearly distinguished with the arrow and the length of the arrow. The code used to create Figure&nbsp;3 are shown in the chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_raster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> uv.se, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> vel), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interpolate =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_segment</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> uv.se, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xend =</span> lon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> u<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yend =</span> lat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>v<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>), </span>
<span id="cb12-4">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"open"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Current"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oceColorsVelocity</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>), </span>
<span id="cb12-8">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb12-9">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_colorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barwidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barheight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb12-10">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(Current<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>speed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(ms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>{<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})), </span>
<span id="cb12-11">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb12-12">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.theme =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb12-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>), </span>
<span id="cb12-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb12-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-segment" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/streamline/index_files/figure-html/fig-segment-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Vector field of speed and direction of surface current</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>To plot the streamlines, i used <code>geom_streamline()</code> from <em>metR</em> package <span class="citation" data-cites="metr">(Campitelli, 2019)</span>. The <code>geom_streamline()</code> function takes the x and y coordinates of each point on the grid and the x and y components of the velocity vector as input and generates the streamlines.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-2">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> uv.se, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> vel), </span>
<span id="cb13-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb13-4">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_streamline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> uv.se, </span>
<span id="cb13-5">                        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dx =</span> u, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dy =</span> v),</span>
<span id="cb13-6">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">L =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">jitter =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Current"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oceColorsVelocity</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>), </span>
<span id="cb13-10">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>),</span>
<span id="cb13-11">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_colorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barwidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barheight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb13-12">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(Current<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>speed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(ms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>{<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})), </span>
<span id="cb13-13">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb13-14">                                              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.theme =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb13-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>), </span>
<span id="cb13-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb13-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-streamline" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/streamline/index_files/figure-html/fig-streamline-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Streamline of surface current superimposed on the current velocity raster</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="conclusion" class="level3">
<h3 class="anchored" data-anchor-id="conclusion">Conclusion</h3>
<p>Many Oceanographic data are defined in a longitude–latitude grid and and though <code>geom_raster()</code> and <code>geom_segment()</code> plot these field well, but the function from <strong>metR</strong> package extend the use of ggplot to deal well with oceanographical data and produce graphics that meet the standard. The massless flow of surface current are much clear when stremline are used to plot the figure (Figure&nbsp;5). The lines of codes used to make Figure&nbsp;5 are shown in the chunk below.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-2">metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_streamline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> uv.se, </span>
<span id="cb14-3">                        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dx =</span> u, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dy =</span> v, </span>
<span id="cb14-4">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(..dx..<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ..dy..<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), </span>
<span id="cb14-5">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> ..step..),</span>
<span id="cb14-6">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">L =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">res =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, </span>
<span id="cb14-7">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">arrow =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lineend =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"round"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_c</span>(</span>
<span id="cb14-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_colorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barwidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barheight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,</span>
<span id="cb14-12">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(Current<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>speed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(ms<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>{<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>})), </span>
<span id="cb14-13">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, </span>
<span id="cb14-14">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.theme =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_size</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_alpha</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb14-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb14-19">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key.height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.4</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>), </span>
<span id="cb14-20">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb14-21">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb14-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-massless" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/streamline/index_files/figure-html/fig-massless-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: streamlines of surface current flow</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="cited-sources" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited sources</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-metr" class="csl-entry">
Campitelli, E., 2019. <a href="https://CRAN.R-project.org/package=metR">metR: Tools for easier analysis of meteorological fields</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, H., 2016. <a href="https://ggplot2.tidyverse.org">ggplot2: Elegant graphics for data analysis</a>. Springer-Verlag New York.
</div>
</div></section></div> ]]></description>
  <category>Spatial</category>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/streamline/index.html</guid>
  <pubDate>Fri, 19 May 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/streamline/streamline.png" medium="image" type="image/png" height="84" width="144"/>
</item>
<item>
  <title>The Skill Gap in Data Science</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/dataScienceGap/index.html</link>
  <description><![CDATA[ 



<p>As we celebrate Labour Day on 1st May 2023, it’s important to reflect on the changing nature of work and the skills required to succeed in the modern workplace. One area where the skill gap is particularly acute is data science. With the exponential growth of data in recent years, the demand for data scientists has skyrocketed. However, universities have struggled to keep up with the pace of change, leaving many graduates ill-equipped for the demands of the job market.</p>
<p><img src="https://lugoga.github.io/semba-quarto/posts/dataScienceGap/datagap.png" class="img-fluid"></p>
<p>Universities have been slow to respond to the growing demand for data scientists, with many struggling to keep up with the rapid pace of change. However, some institutions have taken steps to bridge the gap. In Tanzania, the skill gap in data science is particularly acute. Only one institution, the University of Dar es Salaam (UDSM), offers a data science course at the master’s level. This has left many graduates without the skills required by employers, hindering economic development in the country.</p>
<p>For example, many universities have introduced data science courses at both undergraduate and postgraduate levels. These courses typically cover a range of topics, including statistics, machine learning, and programming languages such as Python and R. However, while these courses are a step in the right direction, they often fall short of the skills required by employers. Many students graduate with a theoretical understanding of data science but lack practical experience in applying these skills to real-world problems.</p>
<p>Blogs and websites have played a crucial role in bridging the skill gap in data science. These platforms provide a wealth of resources for aspiring data scientists, including tutorials, case studies, and discussions on the latest trends in the field.</p>
<p>One example of a website that has helped to overcome the challenge is Kaggle<sup>1</sup>. Kaggle is a popular online platform for data scientists and machine learning enthusiasts. The platform hosts a variety of competitions and challenges related to data science, providing a platform for professionals and enthusiasts to showcase their skills and collaborate on complex problems. The platform also provides a wealth of datasets for users to explore, analyze, and visualize. The community is known for its highly collaborative and supportive nature, with users sharing code, insights, and feedback to help each other improve their skills.</p>
<p>There are several online platforms similar to Kaggle, each offering their own unique features and community. One such platform is DrivenData<sup>2</sup>, which hosts data science competitions with a focus on social impact. DrivenData’s challenges tackle real-world problems related to healthcare, poverty, and education, providing a platform for data scientists to contribute to society while improving their skills.</p>
<p>DataCamp<sup>3</sup> is also a platform that offers a variety of courses and challenges related to data science and machine learning. The platform provides interactive coding environments and personalized learning paths, making it a valuable resource for anyone looking to learn or upskill in the field.</p>
<p>In conclusion, the skill gap in data science is a significant challenge facing both individuals and economies around the world. While universities have taken steps to bridge the gap, more needs to be done to ensure that graduates are equipped with the skills required by employers. Blogs and websites have played a crucial role in providing aspiring data scientists with practical experience and resources to develop their skills. Tanzania’s example shows that partnerships between universities and industry leaders can help to overcome the challenge and drive economic growth.</p>
<section id="cited-sources" class="level2">
<h2 class="anchored" data-anchor-id="cited-sources">Cited sources</h2>


</section>


<div id="quarto-appendix" class="default"><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://www.kaggle.com/↩︎</p></li>
<li id="fn2"><p>https://www.drivendata.org/↩︎</p></li>
<li id="fn3"><p>https://www.datacamp.com/↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>R</category>
  <category>Python</category>
  <category>Data</category>
  <category>Programming</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/dataScienceGap/index.html</guid>
  <pubDate>Sun, 30 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/dataScienceGap/datagap.png" medium="image" type="image/png" height="54" width="144"/>
</item>
<item>
  <title>Compute Normalized Difference Vegetation Index in R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/ndvi/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>knit_hooks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crop =</span> knitr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>hook_pdfcrop)</span></code></pre></div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction:</h2>
<p>In this post, we’re going to learn how to compute Normalized Difference Vegetation Index (NDVI) from Landsat imagery using R. NDVI is a widely used remote sensing index that measures the health and vigor of vegetation. It’s calculated from the difference between near-infrared (NIR) and red reflectance values divided by their sum. NDVI values range from -1 to 1, with higher values indicating healthier vegetation. NDVI is an important tool for studying vegetation dynamics, land-use changes, and environmental monitoring.</p>
<p>Remote sensing image are useful tool that provide satellite data covering a large area and with high frequency temporal resolution. Such satellite image include Landsat. Landsat imagery is a valuable source of data for NDVI calculation. The Landsat satellites collect data in multiple spectral bands, including red and NIR, which can be used to compute NDVI.</p>
<p>In this post, we’ll walk through the steps of computing NDVI from Landsat imagery using R. R is a popular programming language for statistics and and provides a range of packages for processing Landsat imagery and computing NDVI. We’ll cover how to load the Landsat bands, compute NDVI, write the NDVI raster to a file, and visualize the NDVI raster. By the end of this post, you’ll be able to use R to calculate NDVI from Landsat imagery and use it for further analysis and visualization.</p>
</section>
<section id="what-is-ndvi" class="level2">
<h2 class="anchored" data-anchor-id="what-is-ndvi">What is NDVI</h2>
<p>Normalized Difference Vegetation Index (NDVI) is a remote sensing index that measures the health and vigor of vegetation. It is widely used in environmental monitoring, land-use change detection, and vegetation dynamics studies. NDVI is calculated from remotely sensed reflectance values of red and near-infrared (NIR) bands using the following formula:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0ANDVI%20=%20%5Cfrac%7BNIR-Red%7D%7BNIR+Red%7D%0A"></p>
<p>NDVI values range from -1 to 1, with higher values indicating healthier vegetation. Negative values indicate water bodies or non-vegetated areas, while zero values indicate bare soil or areas with very low vegetation cover. NDVI has several advantages over traditional field-based methods of vegetation monitoring, such as its ability to cover large areas at once, its ability to detect changes in vegetation cover over time, and its sensitivity to changes in vegetation health.</p>
<p>Landsat imagery is a widely used source of data for NDVI calculation. Landsat is a series of Earth-observing satellites that collect data in multiple spectral bands, including red and NIR. The data can be downloaded for free from the United States Geological Survey (USGS) website.</p>
<p>Lets first load the package we are going to use in this post, if these packages are not installed in your machine, you can simply install them as they are found in CRAN</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(terra)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyterra)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(sf)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(magrittr)</span></code></pre></div>
</div>
<p>Then we load the Landsat bands. The <strong>terra</strong> package <span class="citation" data-cites="terra">(Hijmans, 2022)</span> has <code>rast</code> function which can load load the bands into the a single file. For illustration purpose, we will use landsat band from <strong>spDataLarge</strong> package <span class="citation" data-cites="spdata">(Nowosad and Lovelace, 2022)</span>. The chunk below highlight a code on how to load the file into our session:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">multi_rast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"raster/landsat.tif"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">package =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spDataLarge"</span>))</span>
<span id="cb3-2">multi_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 1428, 1128, 4  (nrow, ncol, nlyr)
resolution  : 30, 30  (x, y)
extent      : 301905, 335745, 4111245, 4154085  (xmin, xmax, ymin, ymax)
coord. ref. : WGS 84 / UTM zone 12N (EPSG:32612) 
source      : landsat.tif 
names       : landsat_1, landsat_2, landsat_3, landsat_4 
min values  :      7550,      6404,      5678,      5252 
max values  :     19071,     22051,     25780,     31961 </code></pre>
</div>
</div>
<p>The printed object is spatRaster object. SpatRaster is an object class in R that is used to represent spatial raster data. It is a three-dimensional array that contains data on different layers or bands, with the two spatial dimensions representing the row and column coordinates of the raster cells. In addition, our SpatRaster objects have several attributes that describe its spatial properties, such as extent, resolution, and projection.</p>
<p>The spatRaster object has four satellite bands - blue, green, red, and near-infrared (NIR). We can rename this band to their corresponding band names using <strong>tidyterra</strong> package <span class="citation" data-cites="tidyterra">(Hernangómez, 2023)</span> function <code>rename</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">multi_rast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> multi_rast <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(</span>
<span id="cb5-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">blue =</span> landsat_1,</span>
<span id="cb5-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">green =</span> landsat_2,</span>
<span id="cb5-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">red =</span> landsat_3,</span>
<span id="cb5-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nir =</span> landsat_4</span>
<span id="cb5-7">  )</span>
<span id="cb5-8"></span>
<span id="cb5-9">multi_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 1428, 1128, 4  (nrow, ncol, nlyr)
resolution  : 30, 30  (x, y)
extent      : 301905, 335745, 4111245, 4154085  (xmin, xmax, ymin, ymax)
coord. ref. : WGS 84 / UTM zone 12N (EPSG:32612) 
source      : landsat.tif 
names       :  blue, green,   red,   nir 
min values  :  7550,  6404,  5678,  5252 
max values  : 19071, 22051, 25780, 31961 </code></pre>
</div>
</div>
<p>Once we have renamed the band with appropriate band names, our next step should be to compute the NDVI formula into an R function. Thanks again to <strong>tidyterra</strong> package that has simplified computation of spatRaster object using verbs similar to tidyverse package <span class="citation" data-cites="tidyverse">(Wickham and Wickham, 2017)</span>. For us we are going to compute the ndvi as separate band in the spatraster object using <code>mutate</code> function. NDVI can be computed using the formula mentioned above. Here’s the code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">multi_rast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> multi_rast <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  tidyterra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ndvi =</span> (nir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> red)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(nir <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> red))</span>
<span id="cb7-3"></span>
<span id="cb7-4">multi_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 1428, 1128, 5  (nrow, ncol, nlyr)
resolution  : 30, 30  (x, y)
extent      : 301905, 335745, 4111245, 4154085  (xmin, xmax, ymin, ymax)
coord. ref. : WGS 84 / UTM zone 12N (EPSG:32612) 
source(s)   : memory
names       :  blue, green,   red,   nir,       ndvi 
min values  :  7550,  6404,  5678,  5252, -0.2352531 
max values  : 19071, 22051, 25780, 31961,  0.6076995 </code></pre>
</div>
</div>
<p>The printed spatRaster object has added a fifth layer as ndvi. The ndvi object now contains the computed NDVI values for each pixel. The computed NDVI raster can be visualized using various R packages, such as <strong>rasterVis</strong> or <strong>ggplot2</strong> <span class="citation" data-cites="ggplot">(Wickham, 2016)</span>. Here’s an example using <strong>ggplot2</strong> with additional function from <strong>tidyterra</strong> package: This code will produce a color-coded plot of the NDVI raster, with higher values shown in shades of green and lower values shown in shades of brown.</p>
<div class="cell" data-crop="false">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  tidyterra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> multi_rast[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hcl.colors</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Red-Green"</span>), </span>
<span id="cb9-4">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_colorbar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NDVI"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ndvi" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ndvi/index_files/figure-html/fig-ndvi-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Computed NDVI with color gradient where green color indicate a greenish land cover</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this post, we’ll walk through the steps of computing NDVI from Landsat imagery using R. Specifically, we’ll cover how to load the Landsat bands, compute NDVI raster to a file, and visualize the NDVI raster. I hope the information in this post can help you to use R to calculate NDVI from Landsat imagery and use it for further analysis and visualization.</p>
</section>
<section id="cited-sources" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited sources</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-tidyterra" class="csl-entry">
Hernangómez, D., 2023. <span class="nocase">tidyterra</span>: Tidyverse methods and ggplot2 helpers for terra objects. <a href="https://doi.org/10.5281/zenodo.6572471">https://doi.org/10.5281/zenodo.6572471</a>
</div>
<div id="ref-terra" class="csl-entry">
Hijmans, R.J., 2022. <a href="https://CRAN.R-project.org/package=terra">Terra: Spatial data analysis</a>.
</div>
<div id="ref-spdata" class="csl-entry">
Nowosad, J., Lovelace, R., 2022. <a href="https://github.com/Nowosad/spData">spDataLarge: Large datasets for spatial analysis</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, H., 2016. <a href="https://ggplot2.tidyverse.org">ggplot2: Elegant graphics for data analysis</a>. Springer-Verlag New York.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, H., Wickham, M.H., 2017. <a href="https://CRAN.R-project.org/package=tidyverse">Tidyverse: Easily install and load the ’tidyverse’</a>.
</div>
</div></section></div> ]]></description>
  <category>Spatial</category>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/ndvi/index.html</guid>
  <pubDate>Thu, 27 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/ndvi/ndvi.png" medium="image" type="image/png" height="59" width="144"/>
</item>
<item>
  <title>Interactive Web Application for Cage Aquaculture in Lake Victoria</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/vizingaApp/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<section id="digitalized-cage-culture" class="level2">
<h2 class="anchored" data-anchor-id="digitalized-cage-culture">Digitalized Cage Culture</h2>
<p>Cage aquaculture is a promising way to increase fish production in Tanzania’s Lake Victoria <span class="citation" data-cites="stateofcageculture cageculture2">(Kashindye et al., 2015; Orina et al., 2021)</span>. However, proper planning is crucial to ensure the sustainability and success of such ventures <span class="citation" data-cites="mlaponi">(Mlaponi et al., 2015)</span>. That’s where the interactive web app for planning cage aquaculture comes in Figure&nbsp;1. In this digital age, where data is abundant and the ability to make data-driven decisions is crucial, Shiny provides a powerful web applications that can be used to analyze and visualize data.</p>
<p>Developed by <a href="https://lugoga.github.io/semba-quarto/">Masumbuko Semba</a> from the Nelson <a href="https://nm-aist.ac.tz/">Mandela African Institution of Science and Technology</a> and a team of experts from the <a href="https://www.tafiri.go.tz/">Tanzania Fisheries Research Institute</a>, this interactive web app is designed to help fish farmers and investors plan their cage aquaculture operations in Lake Victoria.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-home" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/vizingaApp/vizingaPage.png" class="img-fluid figure-img" style="width:100.0%"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: The home page of cage aquaculture web application in Lake Victoria</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>This app<sup>1</sup>, which is still under active development, but its beta version is up and running online provides users with a range of tools and information to help them make informed decisions about their cage aquaculture projects. Users can input data such as the size and location of their cages, the type of fish they want to farm, and the expected production volume. The app then uses this information to generate a detailed plan that takes into account factors such as water quality, feed requirements, and environmental impacts.</p>
<p>One of the key features of the Shiny app is its ability to simulate different scenarios and provide users with feedback on the potential outcomes. For example, users can adjust the stocking density of their cages or the amount of feed they provide and see how these changes will affect their production and profitability. This helps users to optimize their operations and make the most of their resources.</p>
<p>The Shiny app also provides users with access to a range of resources and information on cage aquaculture in Lake Victoria Figure&nbsp;2. This includes data on water quality, fish species, and market trends, as well as best practices for cage construction and operation.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-weather" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/vizingaApp/weatherPage.png" class="img-fluid figure-img" style="width:100.0%"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: The weather page of cage aquaculture web application in Lake Victoria</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Here are some benefits that this interactive web app (dashboard) offers for cage culture in Lake Victoria:</p>
<ul>
<li><em>Interactive maps</em> showing the location of cage culture sites and their proximity to sensitive habitats or protected areas.</li>
<li><em>Data visualizations</em> of water quality data, including temperature, dissolved oxygen, and nutrient levels, to help identify impacts of cage culture on the surrounding ecosystem.</li>
<li><em>A dashboard</em> showing trends in fish production, species diversity, and other indicators of the health of the aquaculture system.</li>
<li><em>Tools for modeling</em> different scenarios, such as changes in feed composition or stocking densities, to help assess the impacts of different management strategies.</li>
<li><em>Educational resources</em>, such as videos or articles, to help users learn more about the environmental impacts of cage culture and how they can make informed decisions about their seafood choices.</li>
</ul>
<p>Overall, the web app for cage aquaculture in Lake Victoria is an invaluable tool for anyone looking to invest in this growing industry. By providing users with the information and tools they need to make informed decisions, this app can help to ensure the sustainability and success of cage aquaculture operations in Tanzania’s largest lake. Furthermore, this Shiny app could be a valuable tool for researchers, policymakers, and members of the public who are interested in understanding the environmental impacts of aquaculture and exploring ways to promote sustainable practices.</p>
</section>
<section id="cited-sources" class="level2">




</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited sources</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-cageculture2" class="csl-entry">
Kashindye, B.B., Nsinda, P., Kayanda, R., Ngupula, G., Mashafi, C., Ezekiel, C., 2015. Environmental impacts of cage culture in lake victoria: The case of shirati bay-sota, tanzania. SpringerPlus 4, 475. <a href="https://doi.org/10.1186/s40064-015-1241-y">https://doi.org/10.1186/s40064-015-1241-y</a>
</div>
<div id="ref-mlaponi" class="csl-entry">
Mlaponi, E., Mlaponi, E., Mlaponi, E., 2015. <a href="https://springerplus.springeropen.com/articles/10.1186/s40064-015-1241-y">Environmental impacts of cage culture in lake victoria: The case of shirati bay, tanzania</a>. SpringerPlus 4, 1–10.
</div>
<div id="ref-stateofcageculture" class="csl-entry">
Orina, P., Ogello, E., Kembenya, E., Muthoni, C., Musa, S., Ombwa, V., Mwainge, V., Abwao, J., Ondiba, R., Kengere, J., others, 2021. The state of cage culture in lake victoria: A focus on sustainability, rural economic empowerment, and food security. Aquatic Ecosystem Health &amp; Management 24, 56–63.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>https://semba.shinyapps.io/vizingaApp/↩︎</p></li>
</ol>
</section></div> ]]></description>
  <category>Fisheries</category>
  <category>Aquaculture</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/vizingaApp/index.html</guid>
  <pubDate>Sun, 16 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/vizingaApp/vizingaPage.png" medium="image" type="image/png" height="71" width="144"/>
</item>
<item>
  <title>How to handle irregular cell size error when creating Raster in R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/errorRaster/index.html</link>
  <description><![CDATA[ 



<p>In this blog post, I will discuss how to create a spatraster object from a data frame in R. This can be a useful tool for spatial analysis and visualization, as it allows you to work with raster data in R. To begin, I need to make sure I have the necessary packages installed. I will need the <strong>magrittr</strong>, <strong>tidyverse</strong>, <strong>terra</strong>, and <strong>sf</strong> packages, which can be loaded using the following code:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(magrittr)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(terra)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyterra)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(sf)</span></code></pre></div>
</div>
<p>Once I have these packages loaded, I can begin creating our spatRaster object. First, I need to create a data frame with our spatial data. This data frame should include columns for the x and y coordinates, as well as any additional variables want to include in our raster. Instead of creating, I am going to download gridded file with <strong>rerddap</strong> package <span class="citation" data-cites="rerddap">(Chamberlain, 2019)</span> and specified the geographical bound of the study area as the lines code code below shows;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">chl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rerddap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">griddap</span>(</span>
<span id="cb2-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"erdMH1chla8day"</span>,</span>
<span id="cb2-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">39.5</span>),</span>
<span id="cb2-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.0</span>),</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-01"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-31"</span>),</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fmt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csv"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-7">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_date</span>(time))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">chl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 6,845 x 4
   time       latitude longitude chlorophyll
   &lt;date&gt;        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;
 1 2021-12-31    -4.98      38.0         NaN
 2 2021-12-31    -4.98      38.0         NaN
 3 2021-12-31    -4.98      38.1         NaN
 4 2021-12-31    -4.98      38.1         NaN
 5 2021-12-31    -4.98      38.1         NaN
 6 2021-12-31    -4.98      38.2         NaN
 7 2021-12-31    -4.98      38.2         NaN
 8 2021-12-31    -4.98      38.3         NaN
 9 2021-12-31    -4.98      38.3         NaN
10 2021-12-31    -4.98      38.4         NaN
# ... with 6,835 more rows</code></pre>
</div>
</div>
<p>Once I have a dataframe, I use the <code>rast()</code> function to convert the xyz data frame to a spatRaster object.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>()</span></code></pre></div>
</div>
<p>It frustrate when seeing the error that suggests that the X cell sizes (i.e., the spatial resolution along the x-axis) in your XYZ file are not consistent, which is required to create a spatRaster Layer. Google or ask chatGPT offers a number of solutions on how to address this problem including interpolate the data. However, when interpolate, you change the grids and also the values.</p>
<p>That is a flaw especially when using remote sensing data, in which ought to state the spatial resolution have used. Recognizing that, I decided to take a long route that ensure that can create a raster layer that is similar to the original dataset. Let’s go along step by step on how I managed to overcome this hurdle</p>
<ol type="1">
<li>compute the the minimum and maximum values of the longitude and latitude values. These values are required to define the geogrpahical extent of the spatRaster layer</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">latRange <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span> </span>
<span id="cb6-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(latitude)</span>
<span id="cb6-5"></span>
<span id="cb6-6">lonRange <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span> </span>
<span id="cb6-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(longitude)</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>Then need to maintain the spatial resoltuion–the grid size of each cell of the value in the raster. I downloaded an eight days mosaicked layer with a spatial resolution of about 4 kilometer. To maintain this resoltuion, I must first extract the unique longitude and latitude values and second is the length of each one. I did this by using <code>distict</code> and <code>pull</code> functions from <strong>tidyverse</strong> package <span class="citation" data-cites="tidyverse">(Wickham and Wickham, 2017)</span></li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">latLength <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(latitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(latitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>()</span>
<span id="cb7-6"></span>
<span id="cb7-7">lonLength <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(longitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(longitude) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>()</span></code></pre></div>
</div>
<ol start="3" type="1">
<li>As the raster is an xyz, so far have dealt with longitude and latitude values which represent the x and y dimension. I also need the z dimension, which is the chlorophyll-a value of the dataset I simply downloaded. Unlike the longitude and latitude values, which I computed the minimum and maximum values and the length of them, the z values should remain as raw.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">zvalue <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021-12-31"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(chlorophyll)</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>Once I have the three dimensions of x, y and z values, now I can create a matrix layer using <code>matrix</code> and specify the <code>nrow = lonLength</code> that define spacing of longitude and <code>ncol = latLength</code> that specify the latitude spacing. Once the matrix is created, then I use a <code>rast</code> function from <strong>terra</strong> package to create spatRaster layer <span class="citation" data-cites="terra">(Hijmans, 2022)</span></li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">chl_rast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> lonLength, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> latLength) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-2">  terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>()</span>
<span id="cb9-3"></span>
<span id="cb9-4">chl_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 37, 37, 1  (nrow, ncol, nlyr)
resolution  : 1, 1  (x, y)
extent      : 0, 37, 0, 37  (xmin, xmax, ymin, ymax)
coord. ref. :  
source(s)   : memory
name        : lyr.1 
min value   :   NaN 
max value   :   NaN </code></pre>
</div>
</div>
<ol start="5" type="1">
<li>The printed output of the <code>chl_rast</code> shows medatata information and one of the variable is the spatial extent in the form <code>xmin</code>, <code>xmax</code>, <code>ymin</code>, <code>ymax</code>. However, that is the global spatial extent based on the <code>nrow</code> and <code>ncol</code> I specified while creating a matrix above. For the spatial extent to resemble those of our geographical area, I need to specify them and I can do that using the <code>ext</code> function from <strong>terra</strong>. I parsed the minimum and maximum values of the longitude and latitude from the <code>lonRange</code> and <code>latRange</code> objects, with values extracted before.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1">new_ext <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ext</span>(lonRange[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],lonRange[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],latRange[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], latRange[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span></code></pre></div>
</div>
<ol start="6" type="1">
<li>Once the spatial extent are created, were used to change the global one into the local with <code>ext</code> function also from <strong>terra</strong> package <span class="citation" data-cites="terra">(Hijmans, 2022)</span>.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1">terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ext</span>(chl_rast) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> new_ext</span>
<span id="cb12-2">chl_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 37, 37, 1  (nrow, ncol, nlyr)
resolution  : 0.04054054, 0.04054054  (x, y)
extent      : 37.97917, 39.47917, -6.479169, -4.979169  (xmin, xmax, ymin, ymax)
coord. ref. :  
source(s)   : memory
name        : lyr.1 
min value   :   NaN 
max value   :   NaN </code></pre>
</div>
</div>
<ol start="7" type="1">
<li>Notice now the spatial extent is within the geographical areas of the area of interest. I remain with one issue, the z values does not contain any values and that must also be added into the layer. with setValue function from <strong>terra</strong> package, I was able to add the chlorophyll-a that was extracted before.</li>
</ol>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">chl_rast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setValues</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> chl_rast, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> zvalue)</span>
<span id="cb14-2"></span>
<span id="cb14-3">chl_rast</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 37, 37, 1  (nrow, ncol, nlyr)
resolution  : 0.04054054, 0.04054054  (x, y)
extent      : 37.97917, 39.47917, -6.479169, -4.979169  (xmin, xmax, ymin, ymax)
coord. ref. :  
source(s)   : memory
name        :      lyr.1 
min value   : 0.09031657 
max value   : 2.96432110 </code></pre>
</div>
</div>
<p>Voila! Now I have a raster layer with defined spatial extent that fit the local area and the chlorophyll values. But I am not sure whether the spatial resolution of 0.04054054 match the 4 kilometer from MODIS. You check that with simple mathematical multiplication. The universe rule of thumb is that one degree for areas close to the equator is equivalent to 110 kilometer and hence by multiplying the spatial resolution of 0.0405 with 110, I get an approximately 4.459 km spatial resolution, which is close to the stated one.</p>
<p>Finally, I plot the spatRaster object using the <code>geom_spatraster()</code> function for continuous grids and <code>geom_spatraster_contour()</code> function for contour lines in <strong>ggplot2</strong> <span class="citation" data-cites="ggplot">(Wickham, 2016)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> chl_rast, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maxcell =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster_contour</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> chl_rast, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-4">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(tz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#84837a"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> oce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oce.colors9A</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10_trans</span>(), </span>
<span id="cb16-6">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expression</span>(Chl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>(mg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>{<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>})))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-7">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_longitude</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-8">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_latitude</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-9"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.7</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">39.4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.45</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb16-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>))</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/errorRaster/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<section id="cited-sources" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited sources</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-rerddap" class="csl-entry">
Chamberlain, S., 2019. <a href="https://CRAN.R-project.org/package=rerddap">Rerddap: General purpose client for ’ERDDAP’ servers</a>.
</div>
<div id="ref-terra" class="csl-entry">
Hijmans, R.J., 2022. <a href="https://CRAN.R-project.org/package=terra">Terra: Spatial data analysis</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, H., 2016. <a href="https://ggplot2.tidyverse.org">ggplot2: Elegant graphics for data analysis</a>. Springer-Verlag New York.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, H., Wickham, M.H., 2017. <a href="https://CRAN.R-project.org/package=tidyverse">Tidyverse: Easily install and load the ’tidyverse’</a>.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Modelling</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/errorRaster/index.html</guid>
  <pubDate>Sat, 15 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/errorRaster/errorRaster.png" medium="image" type="image/png" height="72" width="144"/>
</item>
<item>
  <title>Will Your Data Science Programming Skills Be Replaced with Artificail Intelligence?</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/chatgpt/index.html</link>
  <description><![CDATA[ 



<p>In recent years, the rise of artificial intelligence (AI) and machine learning (ML) has led to the development of chatbots like chatGPT <span class="citation" data-cites="chatgpt">(Rodriguez, 2023)</span>, which can simulate human conversation. These chatbots are now being used in various industries to improve customer service, automate tasks, and even provide medical advice. However, as chatbots become more advanced, some people are asking whether they could replace human data scientists. In this blog post, we will explore this question and examine the potential benefits and drawbacks of using chatbots in data science.</p>
<p><img src="https://lugoga.github.io/semba-quarto/posts/chatgpt/Technical Analysis.png" class="img-fluid"></p>
<p>Data science is the field of study that involves extracting insights and knowledge from data. Data scientists use various techniques, such as statistical analysis, machine learning, and data visualization, to analyze large datasets and identify patterns and trends. Data science is used in many industries, including healthcare, finance, and marketing, to make data-driven decisions and improve business outcomes.</p>
<p>Wikipedia define chatbot as a computer program that uses natural language processing (NLP) to simulate human conversation <span class="citation" data-cites="enwiki-1146240463">(Wikipedia contributors, 2023)</span>. Chatbots can be designed to perform various tasks, such as answering customer queries, providing recommendations, or even assisting with medical diagnoses. Some chatbots are rule-based, which means they follow a predefined set of rules to respond to user input. Others are powered by AI and ML algorithms, which enable them to learn from user interactions and improve their responses over time.</p>
<p>Returning to the fundamental question, <em>Can Artificial Intelligence Replace Data Science Programming Skills?</em> This crucial question has a clear answer–Not Always! While chatbots can be useful tools for data analysis and decision-making, they cannot replace the expertise and experience of a human data scientist.</p>
<p>The GPT-3 AI language-generating system for example is the offspring of GPT-2, the <em>world most harzadous AI</em>. GPT-3 touts the ability to code in a variety of languages such as Cascading Style sheets (CSS), hypertext Markup language (HTML), Python, R, etc, it still has several issues that need to be fixed. Among them is that the code that GPT-3 generates might not be of much use. Also it makes mistakes that are challenging for inexperienced data scientists and beginners. For example, I was chatting with chatGPT and asked it to generate R codes to download chlorophyll-a acquired with MODIS sensor for the Pemba Channel.</p>
<p>It did wonderful job. As plainly seen in Figure&nbsp;1, it first loaded the <strong>rerddap</strong> package and defined the ERDDAP server URL and the dataset ID for the MODIS Aqua Chlorophyll-a Level 3 dataset. It then defined the study area and time range by specifying longitude and latitude ranges, and start and end dates. It built the ERDDAP query string by specifying the variable name, standard name, and the desired ranges for longitude, latitude, and time.Then used the <code>erddap</code> function from the <strong>rerddap</strong> package to query the ERDDAP server and retrieve the data. The data is returned as a data frame in CSV format.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-chat1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/chatgpt/chatgpt_snippet.png" class="img-fluid figure-img" style="width:100.0%"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: ChatGPT code for access and dowloading chlrophyll-a in the Pemba Channel</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>I copied the code chunk from ChatGPT snippet (Figure&nbsp;1) and paste it in the chunk below:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rerddap)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the ERDDAP server URL and dataset ID</span></span>
<span id="cb1-4">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://coastwatch.pfeg.noaa.gov/erddap"</span></span>
<span id="cb1-5">dataset_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"erdMWChla1day"</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the study area and time range</span></span>
<span id="cb1-8">lon_range <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">39</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>)</span>
<span id="cb1-9">lat_range <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-10">start_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-01"</span></span>
<span id="cb1-11">end_date <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-02-01"</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build the ERDDAP query string</span></span>
<span id="cb1-14">query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-15">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chlorophyll_a"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"standard_name"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mass_concentration_of_chlorophyll_a_in_sea_water"</span>,</span>
<span id="cb1-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude&gt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lon_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"longitude&lt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lon_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude&gt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lat_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latitude&lt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lat_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>],</span>
<span id="cb1-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time&gt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> start_date, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time&lt;="</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> end_date</span>
<span id="cb1-20">  )</span>
<span id="cb1-21">)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Query the ERDDAP server and retrieve the data</span></span>
<span id="cb1-24">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rerddap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">erddap</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> query, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">server =</span> server, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dataset_id =</span> dataset_id, </span>
<span id="cb1-25">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">protocol =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tabledap"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">response =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csv"</span>)</span></code></pre></div>
</div>
<p>Despite the detailed explanation of chatGPT provided, when the chunk is exuted, it resulted into an error message stating that <em>Error: ‘erddap’ is not an exported object from ‘namespace:rerddap’</em>. It failed miserable because the <code>erddap</code> function used in line 24 of the chunk code above is not part of the <strong>erddap</strong> package. Therefore, as it has been emphasized, inaccurate information and lines of codes is a common mistake we expect from these kind of tools, and the essence of expert to support the error is paramount. Therefore, the code chunk below provide a correct functions and lines of code that answer the question posted in the chatGPT.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rerddap)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-3"></span>
<span id="cb2-4">chl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rerddap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">griddap</span>(</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"erdMH1chla8day"</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">longitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">39.5</span>),</span>
<span id="cb2-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">latitude =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>),</span>
<span id="cb2-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-01"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-31"</span>),</span>
<span id="cb2-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fmt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csv"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-10">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-11">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">time =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_date</span>(time))</span>
<span id="cb2-12"></span>
<span id="cb2-13">chl</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4,625 x 4
   time       latitude longitude chlorophyll
   &lt;date&gt;        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;
 1 2021-12-31    -5.48      38.0         NaN
 2 2021-12-31    -5.48      38.0         NaN
 3 2021-12-31    -5.48      38.1         NaN
 4 2021-12-31    -5.48      38.1         NaN
 5 2021-12-31    -5.48      38.1         NaN
 6 2021-12-31    -5.48      38.2         NaN
 7 2021-12-31    -5.48      38.2         NaN
 8 2021-12-31    -5.48      38.3         NaN
 9 2021-12-31    -5.48      38.3         NaN
10 2021-12-31    -5.48      38.4         NaN
# ... with 4,615 more rows</code></pre>
</div>
</div>
<p>I then used the <strong>ggplot2</strong> package <span class="citation" data-cites="ggplot metr">(Campitelli, 2019; Wickham, 2016)</span> to visualize the distribution of chlorophyll-a in the Pemba Channel. I specified the <code>longitude</code> and <code>latitude</code> values from the data frame, and used the <code>z</code> parameter to specify the chlorophyll-a values for each pixel in the plot. I also specified a color scale for the plot using the <code>scale_fill_gradientn</code> function and separated plots for each date of the year with The <code>facet_wrap()</code> function. The <code>labs()</code> function was used to add a title and axis labels to faceted plots.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(</span>
<span id="cb4-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2022-01-16"</span>),</span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> longitude, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> latitude, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> chlorophyll)</span>
<span id="cb4-4">  )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-5">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-6">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> ..level..)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-7">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(tz, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#84837a"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> oce<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">oce.colors9A</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10_trans</span>(), </span>
<span id="cb4-9">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chl-a</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(mgm^3)"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-10">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_longitude</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-11">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_latitude</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ticks =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-12"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.7</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">39.4</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.5</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>time, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb4-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-chl" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/chatgpt/index_files/figure-html/fig-chl-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Chlorophyll-a concentration in the Pemba Channel</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>In summary, although there existing chatbots like ChatGPT that can generate simple code, they cannot decide which feature should be prioritized or what issues that algorithm or piece of code should address. While chatbots like ChatGPT can be useful tools for data analysis and decision-making, they cannot replace the expertise and experience of a human data scientist. Chatbots are limited by their programming and lack the domain knowledge, creativity, and human interaction required for complex data science tasks. However, chatbots can provide some benefits, such as improved efficiency, faster response times, scalability, and a user-friendly interface. For the time being, only a smart data scientist can create code based on an understanding of precise requirements and specification of the data related issue that need to bring business solution.</p>
<section id="cited-sources" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited sources</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-metr" class="csl-entry">
Campitelli, E., 2019. <a href="https://CRAN.R-project.org/package=metR">metR: Tools for easier analysis of meteorological fields</a>.
</div>
<div id="ref-chatgpt" class="csl-entry">
Rodriguez, J.C., 2023. <a href="https://CRAN.R-project.org/package=chatgpt">Chatgpt: Interface to ’ChatGPT’ from r</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, H., 2016. <a href="https://ggplot2.tidyverse.org">ggplot2: Elegant graphics for data analysis</a>. Springer-Verlag New York.
</div>
<div id="ref-enwiki-1146240463" class="csl-entry">
Wikipedia contributors, 2023. <a href="https://en.wikipedia.org/w/index.php?title=Chatbot&amp;oldid=1146240463">Chatbot — <span>Wikipedia</span><span>,</span> the free encyclopedia</a>.
</div>
</div></section></div> ]]></description>
  <category>R</category>
  <category>Modelling</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/chatgpt/index.html</guid>
  <pubDate>Fri, 14 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/chatgpt/chatgpt.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Machine learning with tidymodels: Binary Classification Model</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index.html</link>
  <description><![CDATA[ 



<section id="a-gentle-introduction" class="level1">
<h1>A gentle introduction</h1>
<p>In this post, we’ll learn how to create Machine learning models using R. Machine learning is the foundation for predictive modeling and artificial intelligence. We’ll learn the core principles of machine learning and how to use common tools and frameworks to train, evaluate, and use machine learning models. in this post we are going to manipulate and visualize diabetes dataset and train and evaluate binary regression models. But before we proceed, we need some packages to accomplish the step in this post. We can have them installed as:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidymodels'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ranger'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vip'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'palmerpenguins'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'skimr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'paletteer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nnet'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'here'</span>))</span></code></pre></div>
</div>
<p>Then we load the packages in the session</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidymodels)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(magrittr)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(patchwork)</span></code></pre></div>
</div>
<section id="binary-classification" class="level2">
<h2 class="anchored" data-anchor-id="binary-classification">Binary classification</h2>
<p>Let’s start by looking at an example of <em>binary</em> classification, where the model must predict a label that belongs to one of two classes. In this exercise, we’ll train a binary classifier to predict whether or not a patient should be tested for diabetes based on some medical data.</p>
<section id="explore-the-data" class="level3">
<h3 class="anchored" data-anchor-id="explore-the-data">Explore the data</h3>
<p>Let’s first import a file of patients data direct from the internet with <code>read_csv</code> function of <strong>readr</strong> package <span class="citation" data-cites="readr">(Wickham, Hester, &amp; Francois, 2017)</span>, part of the tidyverse ecosystem <span class="citation" data-cites="tidyverse">(Wickham &amp; Wickham, 2017)</span>;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">diabetes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/MicrosoftDocs/ml-basics/master/data/diabetes.csv"</span>)</span></code></pre></div>
</div>
<p>We then print the dataset to explore the variables and records contained in the dataset;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">diabetes</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 15,000 x 10
   PatientID Pregn~1 Plasm~2 Diast~3 Trice~4 Serum~5   BMI Diabe~6   Age Diabe~7
       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;
 1   1354778       0     171      80      34      23  43.5  1.21      21       0
 2   1147438       8      92      93      47      36  21.2  0.158     23       0
 3   1640031       7     115      47      52      35  41.5  0.0790    23       0
 4   1883350       9     103      78      25     304  29.6  1.28      43       1
 5   1424119       1      85      59      27      35  42.6  0.550     22       0
 6   1619297       0      82      92       9     253  19.7  0.103     26       0
 7   1660149       0     133      47      19     227  21.9  0.174     21       0
 8   1458769       0      67      87      43      36  18.3  0.236     26       0
 9   1201647       8      80      95      33      24  26.6  0.444     53       1
10   1403912       1      72      31      40      42  36.9  0.104     26       0
# ... with 14,990 more rows, and abbreviated variable names 1: Pregnancies,
#   2: PlasmaGlucose, 3: DiastolicBloodPressure, 4: TricepsThickness,
#   5: SerumInsulin, 6: DiabetesPedigree, 7: Diabetic</code></pre>
</div>
</div>
<p>Though the printed output tell us that there are fifteen thousand records and ten variable, but sometimes you may wish to explore the internal structure of the dataset. The <code>glimpse</code> function from <strong>dplyr</strong> package can do that by listing the available variables and their types;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">diabetes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 15,000
Columns: 10
$ PatientID              &lt;dbl&gt; 1354778, 1147438, 1640031, 1883350, 1424119, 16~
$ Pregnancies            &lt;dbl&gt; 0, 8, 7, 9, 1, 0, 0, 0, 8, 1, 1, 3, 5, 7, 0, 3,~
$ PlasmaGlucose          &lt;dbl&gt; 171, 92, 115, 103, 85, 82, 133, 67, 80, 72, 88,~
$ DiastolicBloodPressure &lt;dbl&gt; 80, 93, 47, 78, 59, 92, 47, 87, 95, 31, 86, 96,~
$ TricepsThickness       &lt;dbl&gt; 34, 47, 52, 25, 27, 9, 19, 43, 33, 40, 11, 31, ~
$ SerumInsulin           &lt;dbl&gt; 23, 36, 35, 304, 35, 253, 227, 36, 24, 42, 58, ~
$ BMI                    &lt;dbl&gt; 43.50973, 21.24058, 41.51152, 29.58219, 42.6045~
$ DiabetesPedigree       &lt;dbl&gt; 1.21319135, 0.15836498, 0.07901857, 1.28286985,~
$ Age                    &lt;dbl&gt; 21, 23, 23, 43, 22, 26, 21, 26, 53, 26, 22, 23,~
$ Diabetic               &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1,~</code></pre>
</div>
</div>
<p>This data consists of 15,000 patients with 10 variables that were used to diagnose diabetes. In this post we tread a <code>Diabetic</code> as <em>outome</em> and the remaining variables as <em>predictor</em>. A predictor variable is used to predict the occurrence and/or level of another variable, called the outcome variable. Let’s tidy and reorganize in format that easy for model to understand. The variable names do not follow the recommended standard therefore we clean them using <code>clean_names</code> function from janitor package <span class="citation" data-cites="janitor">(Firke, 2020)</span>. We also notice that some of the variable like PatientId adds no effect in the model and was dropped from the dataset.</p>
<p>Further, since we are going to use classification algorithm in this we need to convert our our predictor variable–diabetic–from numerical to factor. This is the outcome (label) and other variable like Pregnancies, PlasmaGlucose, DiastolicBloodPressure, BMI and so on are the predictor (features) we will use to predict the Diabetic label.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">diabetes.tidy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> diabetes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  janitor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clean_names</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>patient_id) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diabetic =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if_else</span>(diabetic <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Diabetic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Non diabetic"</span>),</span>
<span id="cb8-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">diabetic =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(diabetic))</span>
<span id="cb8-6"></span>
<span id="cb8-7">diabetes.tidy</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 15,000 x 9
   pregnancies plasma_gluc~1 diast~2 trice~3 serum~4   bmi diabe~5   age diabe~6
         &lt;dbl&gt;         &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt;  
 1           0           171      80      34      23  43.5  1.21      21 Non di~
 2           8            92      93      47      36  21.2  0.158     23 Non di~
 3           7           115      47      52      35  41.5  0.0790    23 Non di~
 4           9           103      78      25     304  29.6  1.28      43 Diabet~
 5           1            85      59      27      35  42.6  0.550     22 Non di~
 6           0            82      92       9     253  19.7  0.103     26 Non di~
 7           0           133      47      19     227  21.9  0.174     21 Non di~
 8           0            67      87      43      36  18.3  0.236     26 Non di~
 9           8            80      95      33      24  26.6  0.444     53 Diabet~
10           1            72      31      40      42  36.9  0.104     26 Non di~
# ... with 14,990 more rows, and abbreviated variable names 1: plasma_glucose,
#   2: diastolic_blood_pressure, 3: triceps_thickness, 4: serum_insulin,
#   5: diabetes_pedigree, 6: diabetic</code></pre>
</div>
</div>
<p>Our primary goal of data exploration is to try to understand the existing relationship patterns between variables in the dataset. Therefore, we should assess any apparent correlation using picture through data visualization. To make it easy to plot multiple plot at once, the format of our dataset at this stage is wide, and that prevent us doing that. In order to plot all variable in single plot, we must first convert the dataset from wide format to long format, and we can do that using <code>pivot_longer</code> function from <strong>dplyr</strong> package <span class="citation" data-cites="dplyr">(Wickham, François, Henry, &amp; Müller, 2019)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1">diabetes.tidy.long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> diabetes.tidy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb10-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(</span>
<span id="cb10-3">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>diabetic, </span>
<span id="cb10-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"features"</span>, </span>
<span id="cb10-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"values"</span></span>
<span id="cb10-6">               )</span></code></pre></div>
</div>
<p>Once we have pivoted the data to long format, we can create plot in a single plot using multiple facet;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_set</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_light</span>())</span>
<span id="cb11-2"></span>
<span id="cb11-3">diabetes.tidy.long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> values, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> features)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> features, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis_d</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">end =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Values"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt_trans</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), </span>
<span id="cb11-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey60"</span>), </span>
<span id="cb11-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bold"</span>))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Boxplot of the predictor variables between diabetic and non-diabetic patients</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The values of the predictor vary between diabetic and non-diabetic individuals. In particular, with exception of diabetes_pedigree and triceps_thickness, other predictors show that diabetic individual with relatively high values than non-diabetic (Figure&nbsp;1). These features may help predict whether or not a patient is diabetic.</p>
</section>
<section id="split-the-data" class="level3">
<h3 class="anchored" data-anchor-id="split-the-data">Split the data</h3>
<p>Our dataset includes known values for the label, so we can use this to train a classifier so that it finds a statistical relationship between the features and the label value; but how will we know if our model is any good? How do we know it will predict correctly when we use it with new data that it wasn’t trained with?</p>
<p>It is best practice to hold out part of the data for testing in order to get a better estimate of how models will perform on new data by comparing the predicted labels with the already known labels in the test set. Well, we can take advantage of the fact we have a large dataset with known label values, use only some of it to train the model, and hold back some to test the trained model - enabling us to compare the predicted labels with the already known labels in the test set.</p>
<p>In R, the <strong>tidymodels</strong> framework provides a collection of packages for modeling and machine learning using tidyverse principles <span class="citation" data-cites="tidymodels">(Kuhn &amp; Wickham, 2020)</span>. For instance, <strong>rsample</strong>, a package in tidymodels, provides infrastructure for efficient data splitting and resampling <span class="citation" data-cites="rsample">(Kuhn, Chow, &amp; Wickham, 2020)</span>:</p>
<ul>
<li><code>initial_split()</code>: specifies how data will be split into a training and testing set</li>
<li><code>training()</code> and <code>testing()</code> functions extract the data in each split</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split data into 70% for training and 30% for testing</span></span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2056</span>)</span>
<span id="cb12-3">diabetes_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> diabetes.tidy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.70</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the data in each split</span></span>
<span id="cb12-8">diabetes_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>(diabetes_split)</span>
<span id="cb12-9">diabetes_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>(diabetes_split)</span>
<span id="cb12-10"></span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of cases in each split</span></span>
<span id="cb12-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Training cases: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(diabetes_train), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb12-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test cases: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(diabetes_test), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Training cases: 10500
Test cases: 4500</code></pre>
</div>
</div>
</section>
</section>
<section id="train-and-evaluate-a-binary-classification-model" class="level2">
<h2 class="anchored" data-anchor-id="train-and-evaluate-a-binary-classification-model">Train and Evaluate a Binary Classification Model</h2>
<p>Once we have separated the dataset into train and test set, now we’re ready to train our model by fitting the training features to the training labels (diabetic). There are various algorithms we can use to train the model.</p>
<section id="logistic-regression-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="logistic-regression-algorithm">Logistic regression Algorithm</h3>
<p>In this section, we’ll use <em>Logistic Regression</em>, which is a well-established algorithm for classification. Logistic regression is a binary classification algorithm, meaning it predicts two categories. There are quite a number of ways to fit a logistic regression model in tidymodels. For now, let’s fit a logistic regression model via the default <code>stats::glm()</code> engine.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a model specification</span></span>
<span id="cb14-2">logreg_spec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">logistic_reg</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification"</span>)</span>
<span id="cb14-5"></span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the model specification</span></span>
<span id="cb14-8">logreg_spec</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Logistic Regression Model Specification (classification)

Computational engine: glm </code></pre>
</div>
</div>
<p>After a model has been specified, the model can be estimated or trained using the fit() function, typically using a symbolic description of the model (a formula) and some data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train a logistic regression model</span></span>
<span id="cb16-2">logreg_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> logreg_spec <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(diabetic <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diabetes_train)</span>
<span id="cb16-4"></span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the model object</span></span>
<span id="cb16-7">logreg_fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>parsnip model object


Call:  stats::glm(formula = diabetic ~ ., family = stats::binomial, 
    data = data)

Coefficients:
             (Intercept)               pregnancies            plasma_glucose  
                8.624243                 -0.266296                 -0.009615  
diastolic_blood_pressure         triceps_thickness             serum_insulin  
               -0.012297                 -0.022807                 -0.003932  
                     bmi         diabetes_pedigree                       age  
               -0.049028                 -0.923262                 -0.056876  

Degrees of Freedom: 10499 Total (i.e. Null);  10491 Residual
Null Deviance:      13290 
Residual Deviance: 9221     AIC: 9239</code></pre>
</div>
</div>
<p>The model print out shows the coefficients learned during training. Now we’ve trained the model using the training data, we can use the test data we held back to evaluate how well it predicts using <code>parsnip::predict()</code>. Let’s start by using the model to predict labels for our test set, and compare the predicted labels to the known labels:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions then bind them to the test set</span></span>
<span id="cb18-2">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> diabetes_test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(</span>
<span id="cb18-5">    logreg_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> diabetes_test)</span>
<span id="cb18-6">    )</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare predictions</span></span>
<span id="cb18-9">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 x 2
   diabetic     .pred_class 
   &lt;fct&gt;        &lt;fct&gt;       
 1 Non diabetic Non diabetic
 2 Non diabetic Non diabetic
 3 Non diabetic Non diabetic
 4 Non diabetic Non diabetic
 5 Diabetic     Diabetic    
 6 Non diabetic Non diabetic
 7 Non diabetic Non diabetic
 8 Diabetic     Non diabetic
 9 Non diabetic Non diabetic
10 Non diabetic Non diabetic</code></pre>
</div>
</div>
<p>Comparing each prediction with its corresponding “ground truth” actual value isn’t a very efficient way to determine how well the model is predicting. Fortunately, <strong>tidymodels</strong> has a few more tricks up its sleeve: <strong>yardstick</strong> - a package used to measure the effectiveness of models using performance metrics <span class="citation" data-cites="yardstick">(Kuhn &amp; Vaughan, 2020)</span>. The most obvious thing you might want to do is to check the accuracy of the predictions - in simple terms, what proportion of the labels did the model predict correctly? <code>yardstick::accuracy()</code> does just that!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate accuracy: proportion of data predicted correctly</span></span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(</span>
<span id="cb20-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results, </span>
<span id="cb20-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, </span>
<span id="cb20-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class</span>
<span id="cb20-6">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 3
  .metric  .estimator .estimate
  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;
1 accuracy binary         0.789</code></pre>
</div>
</div>
<p>The accuracy is returned as a decimal value - a value of 1.0 would mean that the model got 100% of the predictions right; while an accuracy of 0.0 is, well, pretty useless! Accuracy seems like a sensible metric to evaluate (and to a certain extent it is), but you need to be careful about drawing too many conclusions from the accuracy of a classifier. Remember that it’s simply a measure of how many cases were predicted correctly. Suppose only 3% of the population is diabetic. You could create a classifier that always just predicts 0, and it would be 97% accurate - but not terribly helpful in identifying patients with diabetes!</p>
<p>Fortunately, there are some other metrics that reveal a little more about how our classification model is performing.One performance metric associated with classification problems is the confusion matrix. A confusion matrix describes how well a classification model performs by tabulating how many examples in each class were correctly classified by a model. In our case, it will show you how many cases were classified as negative (0) and how many as positive (1); the confusion matrix also shows you how many were classified into the wrong categories. The <code>conf_mat()</code> function from yardstick calculates this cross-tabulation of observed and predicted classes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confusion matrix for prediction results</span></span>
<span id="cb22-2">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Truth
Prediction     Diabetic Non diabetic
  Diabetic          897          293
  Non diabetic      657         2653</code></pre>
</div>
</div>
<p>The descriptive statistic of confusion matrix presented above can be presented visually as shown in Figure&nbsp;2</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize conf mat</span></span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update_geom_defaults</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rect"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"midnightblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>))</span>
<span id="cb24-3"></span>
<span id="cb24-4">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(diabetic, .pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-confmat" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/fig-confmat-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Visualize confusion matrix plot</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p><strong>tidymodels</strong> provides yet another succinct way of evaluating all these metrics. Using <code>yardstick::metric_set()</code>, you can combine multiple metrics together into a new function that calculates all of them at once.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine metrics and evaluate them all at once</span></span>
<span id="cb25-2">eval_metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metric_set</span>(ppv, recall, accuracy, f_meas)</span>
<span id="cb25-4"></span>
<span id="cb25-5"></span>
<span id="cb25-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_metrics</span>(</span>
<span id="cb25-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> results, </span>
<span id="cb25-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, </span>
<span id="cb25-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class</span>
<span id="cb25-10">  )</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4 x 3
  .metric  .estimator .estimate
  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;
1 ppv      binary         0.754
2 recall   binary         0.577
3 accuracy binary         0.789
4 f_meas   binary         0.654</code></pre>
</div>
</div>
<p>Until now, we’ve considered the predictions from the model as being either 1 or 0 class labels. Actually, things are a little more complex than that. Statistical machine learning algorithms, like logistic regression, are based on probability; so what actually gets predicted by a binary classifier is the probability that the label is true <img src="https://latex.codecogs.com/png.latex?P(y)"> ) and the probability that the label is false <img src="https://latex.codecogs.com/png.latex?1%E2%88%92P(y)">. A threshold value of 0.5 is used to decide whether the predicted label is a 1 <img src="https://latex.codecogs.com/png.latex?P(y)%3E0.5"> or a 0 <img src="https://latex.codecogs.com/png.latex?P(y)%3C=0.5">. Let’s see the probability pairs for each case:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Predict class probabilities and bind them to results</span></span>
<span id="cb27-2">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(logreg_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-4">              <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> diabetes_test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>))</span>
<span id="cb27-5"></span>
<span id="cb27-6">  </span>
<span id="cb27-7"></span>
<span id="cb27-8"></span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print out the results</span></span>
<span id="cb27-10">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb27-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 10 x 4
   diabetic     .pred_class  .pred_Diabetic `.pred_Non diabetic`
   &lt;fct&gt;        &lt;fct&gt;                 &lt;dbl&gt;                &lt;dbl&gt;
 1 Non diabetic Non diabetic         0.417                 0.583
 2 Non diabetic Non diabetic         0.0985                0.902
 3 Non diabetic Non diabetic         0.0469                0.953
 4 Non diabetic Non diabetic         0.0561                0.944
 5 Diabetic     Diabetic             0.581                 0.419
 6 Non diabetic Non diabetic         0.331                 0.669
 7 Non diabetic Non diabetic         0.288                 0.712
 8 Diabetic     Non diabetic         0.270                 0.730
 9 Non diabetic Non diabetic         0.275                 0.725
10 Non diabetic Non diabetic         0.131                 0.869</code></pre>
</div>
</div>
<p>The decision to score a prediction as a 1 or a 0 depends on the threshold to which the predicted probabilities are compared. If we were to change the threshold, it would affect the predictions; and therefore change the metrics in the confusion matrix. A common way to evaluate a classifier is to examine the true positive rate (which is another name for recall) and the false positive rate <img src="https://latex.codecogs.com/png.latex?(1%20-%20specificity)"> for a range of possible thresholds. These rates are then plotted against all possible thresholds to form a chart known as a received operator characteristic (ROC) chart, like this:</p>
<div class="callout-important callout callout-style-default callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>A receiver operating characteristic curve, or ROC curve, is a graphical plot that illustrates the diagnostic ability of a binary classifier system as its discrimination threshold is varied.</p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a roc_chart</span></span>
<span id="cb29-2">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb29-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, .pred_Diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb29-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-roc" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/fig-roc-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: The ROC curve</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The Figure&nbsp;3 shows the curve of the true and false positive rates for different threshold values between 0 and 1. A perfect classifier would have a curve that goes straight up the left side and straight across the top. The diagonal line across the chart represents the probability of predicting correctly with a <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7B50%7D%7B50%7D"> random prediction; so you obviously want the curve to be higher than that (or your model is no better than simply guessing!).</p>
<p>The area under the curve (AUC) is a value between 0 and 1 that quantifies the overall performance of the model. One way of interpreting AUC is as the probability that the model ranks a random positive example more highly than a random negative example. The closer to 1 this value is, the better the model. Once again, <code>tidymodels</code> includes a function to calculate this metric: <code>yardstick::roc_auc()</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the AUC</span></span>
<span id="cb30-2">results <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_auc</span>(diabetic, .pred_Diabetic)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 3
  .metric .estimator .estimate
  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;
1 roc_auc binary         0.860</code></pre>
</div>
</div>
</section>
<section id="random-forest-algorithm" class="level3">
<h3 class="anchored" data-anchor-id="random-forest-algorithm">Random Forest Algorithm</h3>
<p>We have been dealing with logistic regression, which is a linear algorithm. tidymodels provide a swift approach to change algorithms in the model. For instance , we can change the logistic regression to other kind of classification algorithms inluding:</p>
<ul>
<li><em>Support Vector Machine algorithms</em>: Algorithms that define a hyperplane that separates classes.</li>
<li><em>Tree-based algorithms</em>: Algorithms that build a decision tree to reach a prediction</li>
<li><em>Ensemble algorithms</em>: Algorithms that combine the outputs of multiple base algorithms to improve generalizability.</li>
</ul>
<p>To make life simple, let us train the model using an ensemble algorithm named <em>Random Forest</em> that averages the outputs of multiple random decision trees. Random forests help to reduce tree correlation by injecting more randomness into the tree-growing process. More specifically, instead of considering all predictors in the data, for calculating a given split, random forests pick a random sample of predictors to be considered for that split.</p>
<p>Given the experience of the logistic regression model, the power of tidymodels is consistence and therefore we do not need to start over, the only thing we need to do is simply to specify and fit a random forest algorithm.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Preprocess the data for modelling</span></span>
<span id="cb32-2">diabetes_recipe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(diabetic <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diabetes_train) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">age =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(age)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_normalize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric_predictors</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_dummy</span>(age)</span>
<span id="cb32-6"></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify a random forest model specification</span></span>
<span id="cb32-8">rf_spec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand_forest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ranger"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">importance =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"impurity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification"</span>)</span>
<span id="cb32-11"></span>
<span id="cb32-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bundle recipe and model spec into a workflow</span></span>
<span id="cb32-13">rf_wf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_recipe</span>(diabetes_recipe) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_model</span>(rf_spec)</span>
<span id="cb32-16"></span>
<span id="cb32-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit a model</span></span>
<span id="cb32-18">rf_wf_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rf_wf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb32-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> diabetes_train)</span>
<span id="cb32-20"></span>
<span id="cb32-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # spefiy the model</span></span>
<span id="cb32-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rf.fit  = rand_forest() %&gt;% </span></span>
<span id="cb32-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   set_engine(engine = "ranger") %&gt;% </span></span>
<span id="cb32-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   set_mode(mode = "classification") %&gt;% </span></span>
<span id="cb32-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   # fit the model</span></span>
<span id="cb32-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   fit(diabetic ~ ., data = diabetes_train)</span></span></code></pre></div>
</div>
<p>Then we make prediction of the fitted model with the test dataset</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb33-1">rf.prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf_wf_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> diabetes_test)</span>
<span id="cb33-3"></span>
<span id="cb33-4">rf.prediction.prob  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  rf_wf_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb33-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> diabetes_test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>)</span>
<span id="cb33-6"></span>
<span id="cb33-7">rf.prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  rf.prediction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb33-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(rf.prediction.prob)</span>
<span id="cb33-9"></span>
<span id="cb33-10">rf.result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> diabetes_test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb33-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb33-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(rf.prediction)</span>
<span id="cb33-13"></span>
<span id="cb33-14">rf.result</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 4,500 x 4
   diabetic     .pred_class  .pred_Diabetic `.pred_Non diabetic`
   &lt;fct&gt;        &lt;fct&gt;                 &lt;dbl&gt;                &lt;dbl&gt;
 1 Non diabetic Non diabetic        0.275                 0.725 
 2 Non diabetic Non diabetic        0.0137                0.986 
 3 Non diabetic Non diabetic        0.00739               0.993 
 4 Non diabetic Non diabetic        0.0108                0.989 
 5 Diabetic     Diabetic            0.910                 0.0902
 6 Non diabetic Non diabetic        0.103                 0.897 
 7 Non diabetic Non diabetic        0.237                 0.763 
 8 Diabetic     Non diabetic        0.270                 0.730 
 9 Non diabetic Non diabetic        0.0484                0.952 
10 Non diabetic Non diabetic        0.0326                0.967 
# ... with 4,490 more rows</code></pre>
</div>
</div>
<p>The printed predicted of the random forest looks complelling, let’s evaluate its metrics!</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb35-1">rf.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb35-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              Truth
Prediction     Diabetic Non diabetic
  Diabetic         1368           99
  Non diabetic      186         2847</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb37-1">rf.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb37-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We notice that there a considerable increase in the number of True Positives and True Negatives, which is a step in the right direction. Let’s take a look at other evaluation metrics</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb38-1">rf.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 1 x 3
  .metric  .estimator .estimate
  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;
1 accuracy binary         0.937</code></pre>
</div>
</div>
<p>There is considerable improvement of the accuracy from .75 to around 0.93. The high accuracy of the random forest is also clearly visible in ROC curve (Figure&nbsp;4) with considervable high value of area under the curve (AUC).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb40-1">roc.values <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_auc</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, .pred_Diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(.estimate) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb40-5"></span>
<span id="cb40-6">rf.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, .pred_Diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb40-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb40-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geom =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUC-value = "</span>, roc.values))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-roc-rf" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/fig-roc-rf-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: ROC curve of random forest</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Figure&nbsp;5 is a Variable Importance Plot (VIP) that illustrates importance of each predictor variables used to predict the diabetic outcome in a random forest model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load vip</span></span>
<span id="cb41-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(vip)</span>
<span id="cb41-3"></span>
<span id="cb41-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the fitted model from the workflow</span></span>
<span id="cb41-5">rf_wf_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb41-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_fit_parsnip</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb41-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make VIP plot</span></span>
<span id="cb41-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vip</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-vip" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index_files/figure-html/fig-vip-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Model-specific VIPs of tree-based model random forest</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>We notice that random forest has high predictive power compared to the logistic regression model and hence you can choose the model that give you high accuracy in prediction. The random forest lines of code is bunded in single chunk;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## spliting</span></span>
<span id="cb42-2">my.split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> diabetes.tidy <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb42-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## test set</span></span>
<span id="cb42-5">my.test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> my.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>()</span>
<span id="cb42-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## train set</span></span>
<span id="cb42-7">my.train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> my.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>()</span>
<span id="cb42-8"></span>
<span id="cb42-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># spefiy the model</span></span>
<span id="cb42-10">my.fit  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand_forest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engine =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ranger"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit the model</span></span>
<span id="cb42-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(diabetic <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> my.train)</span>
<span id="cb42-15"></span>
<span id="cb42-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test the model</span></span>
<span id="cb42-17">my.prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> my.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> my.test)</span>
<span id="cb42-19"></span>
<span id="cb42-20">my.prediction.prob  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  my.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new_data =</span> my.test, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>)</span>
<span id="cb42-22"></span>
<span id="cb42-23">my.prediction <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  my.prediction <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(my.prediction.prob)</span>
<span id="cb42-25"></span>
<span id="cb42-26">my.result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> my.test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(my.prediction)</span>
<span id="cb42-29"></span>
<span id="cb42-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># validate the model</span></span>
<span id="cb42-31"></span>
<span id="cb42-32">my.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class)</span>
<span id="cb42-34"></span>
<span id="cb42-35">my.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">accuracy</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class)</span>
<span id="cb42-37"></span>
<span id="cb42-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine metrics and evaluate them all at once</span></span>
<span id="cb42-39">eval_metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb42-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metric_set</span>(ppv, recall, accuracy, f_meas)</span>
<span id="cb42-41"></span>
<span id="cb42-42"></span>
<span id="cb42-43"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eval_metrics</span>(</span>
<span id="cb42-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> my.result, </span>
<span id="cb42-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, </span>
<span id="cb42-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred_class</span>
<span id="cb42-47">  )</span>
<span id="cb42-48"></span>
<span id="cb42-49"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plotting</span></span>
<span id="cb42-50"></span>
<span id="cb42-51">my.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-52">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_curve</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, .pred_Diabetic) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-53">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">autoplot</span>()</span>
<span id="cb42-54"></span>
<span id="cb42-55">my.result <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-56">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc_auc</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> diabetic, .pred_Diabetic)</span></code></pre></div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent" data-line-spacing="2">
<div id="ref-janitor" class="csl-entry">
Firke, S. (2020). <em>Janitor: Simple tools for examining and cleaning dirty data</em>. Retrieved from <a href="https://CRAN.R-project.org/package=janitor">https://CRAN.R-project.org/package=janitor</a>
</div>
<div id="ref-rsample" class="csl-entry">
Kuhn, M., Chow, F., &amp; Wickham, H. (2020). <em>Rsample: General resampling infrastructure</em>. Retrieved from <a href="https://CRAN.R-project.org/package=rsample">https://CRAN.R-project.org/package=rsample</a>
</div>
<div id="ref-yardstick" class="csl-entry">
Kuhn, M., &amp; Vaughan, D. (2020). <em>Yardstick: Tidy characterizations of model performance</em>. Retrieved from <a href="https://CRAN.R-project.org/package=yardstick">https://CRAN.R-project.org/package=yardstick</a>
</div>
<div id="ref-tidymodels" class="csl-entry">
Kuhn, M., &amp; Wickham, H. (2020). <em>Tidymodels: Easily install and load the ’tidymodels’ packages</em>. Retrieved from <a href="https://CRAN.R-project.org/package=tidymodels">https://CRAN.R-project.org/package=tidymodels</a>
</div>
<div id="ref-dplyr" class="csl-entry">
Wickham, H., François, R., Henry, L., &amp; Müller, K. (2019). <em>Dplyr: A grammar of data manipulation</em>. Retrieved from <a href="https://CRAN.R-project.org/package=dplyr">https://CRAN.R-project.org/package=dplyr</a>
</div>
<div id="ref-readr" class="csl-entry">
Wickham, H., Hester, J., &amp; Francois, R. (2017). <em>Readr: Read rectangular text data</em>. Retrieved from <a href="https://CRAN.R-project.org/package=readr">https://CRAN.R-project.org/package=readr</a>
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, H., &amp; Wickham, M. H. (2017). <em>Tidyverse: Easily install and load the ’tidyverse’</em>. Retrieved from <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>
</div>
</div></section></div> ]]></description>
  <category>Manipulation</category>
  <category>Visualization</category>
  <category>R</category>
  <category>Modelling</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/index.html</guid>
  <pubDate>Wed, 12 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/tidymodels_classificationTrain/binary.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Machine learning with tidymodels: Linear and Bayesian Regression Models</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>We live in age of increasing data and as a data scientist, our role primarily involves exploring and analyzing data. However, with the amount of data data exploration and analysis become a thing for automation and use of intelligent tools to help us glean key information from data. The results of an analysis might form the basis of a report or a machine learning model, but it all begins with data. The two popular tools commonly used are R and Python. R is one of the most popular programming languages for data scientists. R is an elegant environment that’s designed to support data science, and you can use it for many purposes.</p>
<p>After decades of open-source development, R provides extensive functionality that’s backed by a massive set of powerful statistical modeling, machine learning, visualization and data wrangling packages. Some of these package that has revolutionized R are <strong>tidyverse</strong> and <strong>tidymodel</strong> package. <strong>tidyverse</strong> is a collection of R packages that make data science faster, easier, and more fun and <strong>tidymodels</strong> is a collection of R packages for modeling and statistical analysis.</p>
<p>As a data scientist, you need to distinguish between <em>regression predictive models</em> and <em>classification predictive models</em>. Clear understanding of these models helps to choose the best one for a specific use case. In a nutshell, <em>regression predictive models</em>and <em>classification predictive models</em> fall under supervised machine learning. The main difference between these two models is the output: while in regression produce an output as numerical (or continuous), the output of classification is categorical (or discrete).</p>
<p>A big part of machine learning is <em>classification</em> — we want to know what class or group an observation belongs to. Therefore, the ability to precisely classify observations to their groups is valuable for various business applications like predicting the future based on historical data. For example, when provided with a dataset about environmental variables, and you are asked to predict productivity, that is a regression task because productivity measured in term of chlorophyll concentration will be a continuous output.</p>
<p>In this post we will focus on regression. We will learn the steps of modelling using <strong>tidymodels</strong> <span class="citation" data-cites="tidymodels">(Kuhn and Wickham, 2020a)</span>. We first explore the data and check if it fit for modelling, we then split the dataset into a training and testing sets. Next, we will create a recipe object and define our model. Lastly, we will train a specified model and evaluate its performance. I will use the same dataset for three different model’s algorithms. Example of the common regression algorithms include <code>random forest</code>, <code>linear regression</code>, <code>support vector regression (SVR)</code> and <code>bayes</code>. Some algorithms, such as <code>logistic regression</code>, have the name <code>regression</code> in their functions but they are not regression algorithms.</p>
<p>To follow use code in this article, you will need <strong>tidymodels</strong> <span class="citation" data-cites="tidymodels">(Kuhn and Wickham, 2020a)</span> and <strong>tidyverse</strong> packages <span class="citation" data-cites="tidyverse">(Wickham and Wickham, 2017)</span> installed in your machine. You can install them from CRAN. The chunk below highlight lines of code to install the packages if they are yet in your PC.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1">model.packages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidymodels"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tidyverse"</span>)</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(model.packages)</span></code></pre></div>
</div>
<p>similar to the <strong>tidyverse</strong>, <strong>tidymodels</strong> consists of several linked packages that use a similar philosophy and syntax. Here is a brief explanation of the component packages.</p>
<ol type="1">
<li><strong>parsnips</strong>: used to define models using a common syntax; makes it easier to experiment with different algorithms</li>
<li><strong>workflows</strong>: provides tools to create workflows, or the desired machine learning pipeline, including pre-processing, training, and post-processing</li>
<li><strong>yardstick</strong>: a one-stop-shop to implement a variety of assessment metrics for regression and classification problems</li>
<li><strong>tune</strong>: for hyperparameter tuning</li>
<li><strong>dials</strong>: for managing parameters and tuning grids</li>
<li><strong>rsample</strong>: tools for data splitting, partitioning, and resampling</li>
<li><strong>recipes</strong>: tools for pre-processing and data engineering</li>
</ol>
<p>Once installed, you can load the packages in your session. I begin by reading in the required packages. Here, tidymodels is used to load the component packages discussed above along with some other packages (e.g., ggplot2, purr, and dplyr).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidymodels)</span></code></pre></div>
</div>
</section>
<section id="the-dataset" class="level1">
<h1>The dataset</h1>
<p>We use the data collected with the Institute of Marine Sciences of the University of Dar es Salaam to illustrate the concept. The data was collected through the Coral Reef Targeted Research and Capacity Building for Management (CRTR) project between 2008 and 2009. The dataset contains;</p>
<ul>
<li>Chemical variables —nitrate, phosphate, salinity, pH, dissolved oxygen and ammonia</li>
<li>Physical variables — temperature</li>
<li>Biological variables— chlorophyll-<em>a</em></li>
</ul>
<p>Because the variables are organized in sheets of Excel spreadsheet, i used a <code>read_excel</code> function from <strong>readxl</strong> package <span class="citation" data-cites="readxl">(Wickham and Bryan, 2018)</span> to read the file from the sheet. And because there are several sheet, the processed was iterated with a <code>for</code> loop. Data from each sheet was allocated in the list file. The chunk below highlight the code used to read files in sheets.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"salinity"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"temperature"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"do"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ph"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"chl"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ammonia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"phosphate"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nitrate"</span>)</span>
<span id="cb3-2"></span>
<span id="cb3-3">crtr.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(variables)){</span>
<span id="cb3-6">  </span>
<span id="cb3-7">  crtr.list[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> readxl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_excel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/crtr.xlsx"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sheet =</span> i) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb3-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable =</span> variables[i]) </span>
<span id="cb3-9"></span>
<span id="cb3-10">}</span></code></pre></div>
</div>
<p>The data was untidy and unsuitable for visualization and modelling in R. Therefore, the first thing I had to deal with the data was to tidy the variables in the dataset to a right format that <strong>tidymodels</strong> and <strong>tidyverse</strong> recognizes. First the dataset was unlisted with <code>bind_rows</code> function and the data was pivoted to long format and then back to wide format with only the variable of interested selected.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## organize in long form</span></span>
<span id="cb4-2">crtr.long <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sites"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span> ) </span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## organize in the wide form</span></span>
<span id="cb4-7">crtr.wide <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.long <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_wider</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_from =</span> variable, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_from =</span> data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(Date, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, </span>
<span id="cb4-10">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">abb =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_if</span>(is.character, as.factor) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_if</span>(is.numeric, round, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> Date, month,sites, chl, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>())</span></code></pre></div>
</div>
<p>Let’s us glimpse the dataset</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">crtr.wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 52
Columns: 11
$ date        &lt;dttm&gt; 2008-03-01, 2008-03-01, 2008-03-01, 2008-03-01, 2008-04-0~
$ month       &lt;fct&gt; Mar, Mar, Mar, Mar, Apr, Apr, Apr, Apr, May, May, May, May~
$ sites       &lt;fct&gt; Pongwe, Mnemba, Chumbe, Bawe, Pongwe, Mnemba, Chumbe, Bawe~
$ chl         &lt;dbl&gt; 0.09, 0.26, 0.56, 0.43, 0.47, 1.01, 0.63, 1.39, 0.37, 0.33~
$ salinity    &lt;dbl&gt; 35.0, 34.0, 32.0, 32.0, 35.0, 35.0, 34.0, 34.0, 36.0, 36.0~
$ temperature &lt;dbl&gt; 28.8, 28.4, 28.0, 28.0, 28.2, 27.7, 28.1, 26.7, 27.0, 27.2~
$ do          &lt;dbl&gt; 6.11, 5.95, 6.16, NA, 6.35, 6.14, 7.01, 6.31, 6.15, 6.10, ~
$ ph          &lt;dbl&gt; 7.86, 7.88, 7.73, NA, 7.87, 7.88, 7.86, 7.91, 7.68, 7.80, ~
$ ammonia     &lt;dbl&gt; 0.55, 0.80, 0.74, 0.94, 0.56, 0.72, 0.53, 0.97, 0.56, 0.65~
$ phosphate   &lt;dbl&gt; 0.28, 0.28, 1.31, 1.91, 0.28, 0.32, 1.16, 0.84, 0.28, 0.43~
$ nitrate     &lt;dbl&gt; 0.04, 0.07, 3.26, 3.34, 0.03, 0.47, 1.45, 0.84, 0.06, 0.48~</code></pre>
</div>
</div>
<p>As a first step in modeling, it’s always a good idea to explore the variables in the dataset. Figure&nbsp;1 is a pairplot that compare each pair of variables as scatterplots in the lower diagonal, densities on the diagonal and correlations written in the upper diagonal <span class="citation" data-cites="ggally">(Schloerke et al., 2020)</span>. Figure&nbsp;2 show the correlation between chlorophyll-<em>a</em> (outcome) with other six predictor variables using a linear and quadratic equations is unfit for these dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb7-1">crtr.wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>salinity)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">season =</span> lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(date) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(),</span>
<span id="cb7-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">season =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(season,season <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NE"</span>),</span>
<span id="cb7-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">season =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(season,season <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SE"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb7-6">  GGally<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggscatmat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"season"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">corMethod =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spearman"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  ggsci<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_jco</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  ggpubr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_pubclean</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), </span>
<span id="cb7-10">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb7-11">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig0" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index_files/figure-html/fig-fig0-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Pair plot of numerical variables</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">wesa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> wesanderson<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>wes_palettes <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>()</span>
<span id="cb8-2"></span>
<span id="cb8-3">crtr.wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>salinity)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(nitrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> phosphate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictor"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb8-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># filter(sites == "Bawe")%&gt;%</span></span>
<span id="cb8-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> chl))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt_trans</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(x,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scale_x_continuous(trans = scales::sqrt_trans(), labels = function(x) round(x,2))+</span></span>
<span id="cb8-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_jitter</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y ~ poly(x,2)"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quadratic"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">se =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">formula =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y ~ x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Linear"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-14">   ggsci<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_jco</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>predictor, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_x"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-16">  ggpubr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_pubclean</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strip.background.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.key =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(), </span>
<span id="cb8-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Linear and quadratic correlation of environmental variables and chlorophyll-a</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">crtr.clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.wide <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>salinity)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(nitrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> phosphate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(date<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>sites))</span></code></pre></div>
</div>
</section>
<section id="resample" class="level1">
<h1>Resample</h1>
<p>In machine learning, one risk is the machine learns too well our sample data and is then less accurate during a real-world testing. This phenomenon is called <em>overtraining</em> or <em>overfitting</em>. We overcome this problem by splitting the dataset into a training and testing sets. The training set is used to train the model while the test set is reserved to later estimate how well the model might work on new or wild data. The splitting is based on ratios and the widely used ratios include 80/20, 75/25, or 7/30, with the training data receiving a bigger proportion of the dataset and the test set get the remaining small portion.</p>
<p>For our sample that has only 52 observations, it make sense to use 70/30 split ratio. we use the fraction <code>set.seed(4595)</code> from base R to fix the random number generator from <strong>rsample</strong> package <span class="citation" data-cites="rsample">(Kuhn et al., 2020)</span>. This prevent generating new data in each execution. the function <code>initial_split</code> from the <strong>rsample</strong> package is designed to split the dataset into a training and testing sets. We purse the data to be split and the proportion that serve as a cutpoint of the two sets.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4595</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3">crtr.split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-4">  rsample<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span>
<span id="cb10-5"></span>
<span id="cb10-6">crtr.split</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;Analysis/Assess/Total&gt;
&lt;28/13/41&gt;</code></pre>
</div>
</div>
<p>Given the 41 total observations, we reserve 12 observations as a test set and kept 70% of the dataset (29 observation) as train set. From the <code>crtr.split</code> object, we pull both the train set with the <code>training</code> function and the test set with a <code>testing</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## pull train set</span></span>
<span id="cb12-2">crtr.train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>()</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## pull test set</span></span>
<span id="cb12-6">crtr.test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>()</span></code></pre></div>
</div>
<p>We can have a glimpse of the train dataset using a <code>glimpse</code> function from <strong>dplyr</strong> package <span class="citation" data-cites="dplyr">(Wickham et al., 2019)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">crtr.train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 28
Columns: 7
$ chl         &lt;dbl&gt; 0.44, 0.37, 0.25, 0.23, 0.47, 0.68, 0.45, 0.28, 0.33, 0.63~
$ temperature &lt;dbl&gt; 27.3, 27.0, 29.8, 28.9, 28.2, 28.2, 25.8, 27.2, 27.2, 29.2~
$ do          &lt;dbl&gt; 6.19, 6.15, 5.32, 5.56, 6.35, 5.36, 5.76, 5.46, 6.10, 5.12~
$ ph          &lt;dbl&gt; 7.85, 7.68, 8.30, 7.98, 7.87, 8.04, 8.02, 8.05, 7.80, 7.97~
$ ammonia     &lt;dbl&gt; 0.88, 0.56, 0.61, 1.32, 0.56, 0.14, 0.56, 0.52, 0.65, 0.66~
$ phosphate   &lt;dbl&gt; 0.92, 0.28, 0.51, 0.30, 0.28, 0.26, 0.17, 0.14, 0.43, 0.54~
$ nitrate     &lt;dbl&gt; 0.64, 0.06, 0.03, 0.04, 0.03, 0.05, 0.05, 0.04, 0.48, 0.20~</code></pre>
</div>
</div>
<p>The printed output shows that we have seven variables and all are numeric</p>
</section>
<section id="recipe" class="level1">
<h1>recipe</h1>
<p>The <strong>recipes</strong> package <span class="citation" data-cites="recipes">(Kuhn and Wickham, 2020b)</span> define a recipe object that we will use for modeling and to conduct preprocessing of variables. The four main functions are <code>recipe()</code>, <code>prep()</code>, <code>juice()</code> and <code>bake()</code>. <code>recipe()</code> defines the operations on the data and the associated roles. Once the preprocessing steps are defined, any parameters are estimated using <code>prep()</code>.</p>
<p>Recipes can be created manually by sequentially adding roles to variables in a data set. First, we will create a recipe object from the train set data and then specify the processing steps and transform the data with <code>step_*</code>. once the recipe is ready we prep it. For example, to create a simple recipe containing only an outcome and predictors and have the predictors normalized and missing values in predictors imputed:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">crtr.recipe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> .) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_normalize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_corr</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_impute_knn</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prep</span>()</span>
<span id="cb15-7"></span>
<span id="cb15-8">crtr.recipe</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Recipe

Inputs:

      role #variables
   outcome          1
 predictor          6

Training data contained 28 data points and no missing data.

Operations:

Centering and scaling for temperature, do, ph, ammonia, phosphate, nitrat... [trained]
Correlation filter on &lt;none&gt; [trained]
K-nearest neighbor imputation for temperature, do, ph, ammonia, phosphate, nitra... [trained]</code></pre>
</div>
</div>
<p>Once the data are ready for transformation, the <code>juices()</code> extract transformed training set while the <code>bake()</code> function create a new testing set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1">crtr.training <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.recipe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">juice</span>()</span>
<span id="cb17-3"></span>
<span id="cb17-4">crtr.testing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> crtr.recipe <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bake</span>(crtr.test)</span></code></pre></div>
</div>
</section>
<section id="build-models" class="level1">
<h1>Build Models</h1>
<section id="random-forest" class="level2">
<h2 class="anchored" data-anchor-id="random-forest">Random Forest</h2>
<p>We begin by fitting a random forest model.</p>
<section id="make-random-forest-model" class="level3">
<h3 class="anchored" data-anchor-id="make-random-forest-model">Make random forest model</h3>
<p>We specify the model using the <strong>parsnip</strong> package <span class="citation" data-cites="parsnip">(Kuhn and Vaughan, 2020a)</span>. This package provides a tidy, unified interface to models for a range of models without getting bogged down in the syntactical minutiae of the underlying packages. The <strong>parsnip</strong> package help us to specify ;</p>
<ul>
<li>the <code>type</code> of model e.g <strong>random forest</strong>,</li>
<li>the <code>mode</code> of the model whether is <code>regression</code> or <code>classification</code></li>
<li>the computational <code>engine</code> is the name of the R package.</li>
</ul>
<p>Based on the information above, we can use <strong>parsnip</strong> package to build our model as;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">rf.model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand_forest</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engine =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ranger"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"regression"</span>)</span>
<span id="cb18-4"></span>
<span id="cb18-5">rf.model</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Random Forest Model Specification (regression)

Computational engine: ranger </code></pre>
</div>
</div>
</section>
<section id="train-random-forest-model" class="level3">
<h3 class="anchored" data-anchor-id="train-random-forest-model">Train random forest model</h3>
<p>Once we have specified the model type, engine and mode, the model can be trained with the <code>fit</code> function. We simply parse into the fit the specified model and the transformed training set extracted from the prepped recipe.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1">rf.fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf.model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> crtr.training)</span></code></pre></div>
</div>
</section>
<section id="predict-with-random-forest" class="level3">
<h3 class="anchored" data-anchor-id="predict-with-random-forest">predict with random forest</h3>
<p>To get our predicted results, we use the <code>predict()</code> function to find the estimated chlorophyll-<em>a</em>. First, let’s generate the estimated chlorophyll-<em>a</em> values by simply parse the random forest model <code>rf.model</code> we specified and the transformed testing set we created from a prepped recipe. We also stitch the predicted values to the transformed train set with <code>bind_cols</code> function;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">rf.predict <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(crtr.testing) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(crtr.testing) </span>
<span id="cb21-4"></span>
<span id="cb21-5">rf.predict</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 x 8
     .pred temperature      do     ph ammonia phosphate nitrate     chl
     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 -0.143        0.407  0.624  -0.756  1.05     -0.485   -0.364 -0.685 
 2 -0.0964      -0.897  0.603  -1.56   0.401    -0.242   -0.419 -0.0561
 3 -0.0919      -0.897  0.516  -1.20   0.530     0.0808   1.32   0.206 
 4  0.366       -1.10   1.69   -1.64   0.562     1.86     3.49  -0.894 
 5 -0.0544      -0.966  1.30   -0.976 -0.0507   -0.565   -0.364 -0.161 
 6 -0.0748      -1.58  -0.0480 -1.12   0.498     0.0808   1.26  -1.31  
 7  0.0753      -1.58   1.17   -0.462  2.05     -0.525    0.721  0.573 
 8  0.160        0.887  0.538   0.493 -0.244     0.121   -0.473 -0.528 
 9  0.189        0.887  0.429   0.420 -0.890    -0.202    0.341 -0.528 
10 -0.0890       0.132 -0.850   0.567 -1.54     -0.767   -0.419 -0.632 
11 -0.386        0.613 -0.200   0.567  0.272    -0.767   -0.364 -0.423 
12 -0.0471       1.09  -0.503   0.714  1.66     -0.162   -0.419 -0.528 
13  0.800        1.16   0.386   1.67   0.0138    2.10    -0.419  2.09  </code></pre>
</div>
</div>
<p>When making predictions, the tidymodels convention is to always produce a tibble of results with standardized column names. This makes it easy to combine the original data and the predictions in a usable format:</p>
</section>
<section id="evaluate-the-rf-model" class="level3">
<h3 class="anchored" data-anchor-id="evaluate-the-rf-model">Evaluate the rf model</h3>
<p>So far, we have built a model and preprocessed data with a recipe. We predicted new data as a way to bundle a parsnip model and recipe together. The next step is to assess or evaluate the accuracy of the model. We use a <code>metrics</code> function from <strong>yardstick</strong> package <span class="citation" data-cites="yardstick">(Kuhn and Vaughan, 2020b)</span>to assess the accuracy of the model by comparing the predicted versus the original outcome variable. Note that we use the predicted dataset we just computed using <code>predict</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb23-1">rf.predict <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb23-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> chl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 x 3
  .metric .estimator .estimate
  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;
1 rmse    standard       0.731
2 rsq     standard       0.363
3 mae     standard       0.595</code></pre>
</div>
</div>
</section>
</section>
<section id="linear-regression-approach" class="level2">
<h2 class="anchored" data-anchor-id="linear-regression-approach">Linear regression approach</h2>
<section id="make-linear-model" class="level3">
<h3 class="anchored" data-anchor-id="make-linear-model">Make linear model</h3>
<p>The good of <strong>tidymodels</strong> is that when we change the model, we do not need to start over again from the beginning but rather change the engine. For instance, we replace the <code>ranger</code> engine with <code>lm</code> to specify the linear model using the <strong>parsnip</strong> package <span class="citation" data-cites="parsnip">(Kuhn and Vaughan, 2020a)</span> .</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb25-1">lm.model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linear_reg</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb25-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engine =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"regression"</span>)</span></code></pre></div>
</div>
</section>
<section id="train-linear-model" class="level3">
<h3 class="anchored" data-anchor-id="train-linear-model">Train Linear model</h3>
<p>Once we have specified the model type, engine and mode, the model can be trained with the <code>fit</code> function;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb26-1">lm.fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lm.model <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb26-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> crtr.training)</span></code></pre></div>
</div>
</section>
<section id="predict-with-linear-model" class="level3">
<h3 class="anchored" data-anchor-id="predict-with-linear-model">Predict with linear model</h3>
<p>Once the model is fitted, This fitted object lm_fit has the lm model output built-in, which you can access with lm_fit$fit, but there are some benefits to using the fitted parsnip model object when it comes to predicting. To predict the values we use <code>predict</code> function and parse the model and standardized testing values we computed from the recipe <span class="citation" data-cites="r">(R Core Team, 2018)</span>. Note that here we use the transformed test set and not the original from the split object. In this case we use the model to predict the value and stitch the testing values using the <code>bind_cols</code> function;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb27-1">lm.predict <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lm.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(crtr.testing) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(crtr.testing) </span>
<span id="cb27-4"></span>
<span id="cb27-5">lm.predict</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 x 8
     .pred temperature      do     ph ammonia phosphate nitrate     chl
     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 -0.347        0.407  0.624  -0.756  1.05     -0.485   -0.364 -0.685 
 2 -0.239       -0.897  0.603  -1.56   0.401    -0.242   -0.419 -0.0561
 3 -0.260       -0.897  0.516  -1.20   0.530     0.0808   1.32   0.206 
 4  0.0430      -1.10   1.69   -1.64   0.562     1.86     3.49  -0.894 
 5 -0.238       -0.966  1.30   -0.976 -0.0507   -0.565   -0.364 -0.161 
 6 -0.243       -1.58  -0.0480 -1.12   0.498     0.0808   1.26  -1.31  
 7 -0.614       -1.58   1.17   -0.462  2.05     -0.525    0.721  0.573 
 8  0.142        0.887  0.538   0.493 -0.244     0.121   -0.473 -0.528 
 9  0.0942       0.887  0.429   0.420 -0.890    -0.202    0.341 -0.528 
10  0.115        0.132 -0.850   0.567 -1.54     -0.767   -0.419 -0.632 
11 -0.191        0.613 -0.200   0.567  0.272    -0.767   -0.364 -0.423 
12 -0.215        1.09  -0.503   0.714  1.66     -0.162   -0.419 -0.528 
13  0.760        1.16   0.386   1.67   0.0138    2.10    -0.419  2.09  </code></pre>
</div>
</div>
</section>
<section id="evaluate-linear-model" class="level3">
<h3 class="anchored" data-anchor-id="evaluate-linear-model">Evaluate linear model</h3>
<p>Once we have our <code>lm.predict</code> dataset that contains the predicted and test values, we can now use the <code>metrics</code> fiction to evaluate the accuracy of the model.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb29-1">lm.predict<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb29-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> chl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 x 3
  .metric .estimator .estimate
  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;
1 rmse    standard       0.740
2 rsq     standard       0.194
3 mae     standard       0.629</code></pre>
</div>
</div>
</section>
<section id="estimate-stats" class="level3">
<h3 class="anchored" data-anchor-id="estimate-stats">Estimate stats</h3>
<p>Sometimes you may wish to plot predicted values with different predictors. To do that you need to create a new tidied data from the the model with <code>tidy</code> function and parse <code>interval = TRUE</code> argument as shown in the code below. This create a tibble shown below and the same data is plotted in figure @ref(fig:fig3).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb31-1">lm.fit.stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> lm.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb31-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">interval =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb31-3"></span>
<span id="cb31-4">lm.fit.stats</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 x 5
  term         estimate std.error statistic p.value
  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;
1 (Intercept) -3.41e-17     0.200 -1.71e-16   1    
2 temperature  1.29e- 2     0.253  5.09e- 2   0.960
3 do          -2.09e- 2     0.261 -8.00e- 2   0.937
4 ph           6.88e- 2     0.289  2.38e- 1   0.814
5 ammonia     -1.63e- 1     0.235 -6.96e- 1   0.494
6 phosphate    2.91e- 1     0.277  1.05e+ 0   0.306
7 nitrate     -6.99e- 2     0.316 -2.21e- 1   0.827</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb33-1">lm.fit.stats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb33-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb33-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> term, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>std.error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> estimate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>std.error), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-7">  ggpubr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_pubclean</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Estimated chl"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig3" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index_files/figure-html/fig-fig3-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Estimated value of chlorophyll concentration at different predictors</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="bayesian-approach" class="level2">
<h2 class="anchored" data-anchor-id="bayesian-approach">Bayesian approach</h2>
<section id="make-bayes-model" class="level3">
<h3 class="anchored" data-anchor-id="make-bayes-model">Make Bayes Model</h3>
<p>For Bayesian, we also change the engine and specified are called <code>prior</code> and <code>prior_intercept</code>. It turns out that <code>linear_reg()</code> has a <code>stan</code> engine. Since these prior distribution arguments are specific to the Stan software, they are passed as arguments to <code>parsnip::set_engine()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb34-1">prior.dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rstanarm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">student_t</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">401</span>)</span>
<span id="cb35-2"></span>
<span id="cb35-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## make the parsnip model</span></span>
<span id="cb35-4">bayes.model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">linear_reg</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">engine =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stan"</span>, </span>
<span id="cb35-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior_intercept =</span> prior.dist, </span>
<span id="cb35-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior =</span> prior.dist) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb35-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mode =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"regression"</span>)</span></code></pre></div>
</div>
<p>This kind of Bayesian analysis (like many models) involves randomly generated numbers in its fitting procedure. We can use <code>set.seed()</code> to ensure that the same (pseudo-)random numbers are generated each time we run this code. The number 123 isn’t special or related to our data; it is just a “seed” used to choose random numbers.</p>
</section>
<section id="train-bayes-model" class="level3">
<h3 class="anchored" data-anchor-id="train-bayes-model">Train Bayes model</h3>
<p>Once we have defined the Bayesian model, we train it using a transformed testing set;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb36-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## train the bayes model</span></span>
<span id="cb36-2">bayes.fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bayes.model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb36-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit</span>(chl <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> crtr.testing)</span>
<span id="cb36-4"></span>
<span id="cb36-5">bayes.fit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>parsnip model object

stan_glm
 family:       gaussian [identity]
 formula:      chl ~ .
 observations: 13
 predictors:   7
------
            Median MAD_SD
(Intercept) -0.2    0.2  
temperature -0.5    0.3  
do           0.4    0.4  
ph           0.6    0.4  
ammonia      0.1    0.2  
phosphate    0.6    0.3  
nitrate     -0.5    0.3  

Auxiliary parameter(s):
      Median MAD_SD
sigma 0.7    0.2   

------
* For help interpreting the printed output see ?print.stanreg
* For info on the priors used see ?prior_summary.stanreg</code></pre>
</div>
</div>
</section>
<section id="predict-bayes-fit" class="level3">
<h3 class="anchored" data-anchor-id="predict-bayes-fit">Predict Bayes fit</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb38-1">bayes.predict <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bayes.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb38-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(crtr.testing) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb38-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(crtr.testing)</span>
<span id="cb38-4"></span>
<span id="cb38-5">bayes.predict</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 x 8
     .pred temperature      do     ph ammonia phosphate nitrate     chl
     &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;
 1 -0.607        0.407  0.624  -0.756  1.05     -0.485   -0.364 -0.685 
 2 -0.302       -0.897  0.603  -1.56   0.401    -0.242   -0.419 -0.0561
 3 -0.827       -0.897  0.516  -1.20   0.530     0.0808   1.32   0.206 
 4 -0.617       -1.10   1.69   -1.64   0.562     1.86     3.49  -0.894 
 5  0.0850      -0.966  1.30   -0.976 -0.0507   -0.565   -0.364 -0.161 
 6 -0.611       -1.58  -0.0480 -1.12   0.498     0.0808   1.26  -1.31  
 7  0.379       -1.58   1.17   -0.462  2.05     -0.525    0.721  0.573 
 8  0.0950       0.887  0.538   0.493 -0.244     0.121   -0.473 -0.528 
 9 -0.686        0.887  0.429   0.420 -0.890    -0.202    0.341 -0.528 
10 -0.705        0.132 -0.850   0.567 -1.54     -0.767   -0.419 -0.632 
11 -0.516        0.613 -0.200   0.567  0.272    -0.767   -0.364 -0.423 
12 -0.256        1.09  -0.503   0.714  1.66     -0.162   -0.419 -0.528 
13  1.74         1.16   0.386   1.67   0.0138    2.10    -0.419  2.09  </code></pre>
</div>
</div>
</section>
<section id="evaluate-bayes-model" class="level3">
<h3 class="anchored" data-anchor-id="evaluate-bayes-model">Evaluate Bayes model</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb40-1">bayes.predict <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth =</span> chl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate =</span> .pred)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 3 x 3
  .metric .estimator .estimate
  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;
1 rmse    standard       0.432
2 rsq     standard       0.717
3 mae     standard       0.334</code></pre>
</div>
</div>
</section>
<section id="bayes.fit.stats" class="level3">
<h3 class="anchored" data-anchor-id="bayes.fit.stats">Bayes.fit.stats</h3>
<p>To update the parameter table, the <code>tidy()</code> method is once again used:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb42-1">bayes.stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> bayes.fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb42-2">  broom.mixed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">intervals =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb42-3"></span>
<span id="cb42-4">bayes.stats</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 x 3
  term        estimate std.error
  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;
1 (Intercept)   -0.220     0.230
2 temperature   -0.541     0.338
3 do             0.394     0.370
4 ph             0.597     0.379
5 ammonia        0.120     0.222
6 phosphate      0.586     0.310
7 nitrate       -0.527     0.270</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb44-1">bayes.stats <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb44-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> term, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> estimate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> estimate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> std.error, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> estimate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> std.error), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-7">  ggpubr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_pubclean</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb44-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Estimated chl"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index_files/figure-html/unnamed-chunk-30-1.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
</section>
<section id="links" class="level2">
<h2 class="anchored" data-anchor-id="links">Links</h2>
<ul>
<li><a href="http://www.wvview.org/os_sa/20_tidymodels.html">Machine Learning with tidymodels</a></li>
</ul>
</section>
<section id="cited-materials" class="level2">




</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-rsample" class="csl-entry">
Kuhn, M., Chow, F., Wickham, H., 2020. <a href="https://CRAN.R-project.org/package=rsample">Rsample: General resampling infrastructure</a>.
</div>
<div id="ref-parsnip" class="csl-entry">
Kuhn, M., Vaughan, D., 2020a. <a href="https://CRAN.R-project.org/package=parsnip">Parsnip: A common API to modeling and analysis functions</a>.
</div>
<div id="ref-yardstick" class="csl-entry">
Kuhn, M., Vaughan, D., 2020b. <a href="https://CRAN.R-project.org/package=yardstick">Yardstick: Tidy characterizations of model performance</a>.
</div>
<div id="ref-tidymodels" class="csl-entry">
Kuhn, M., Wickham, H., 2020a. <a href="https://CRAN.R-project.org/package=tidymodels">Tidymodels: Easily install and load the ’tidymodels’ packages</a>.
</div>
<div id="ref-recipes" class="csl-entry">
Kuhn, M., Wickham, H., 2020b. <a href="https://CRAN.R-project.org/package=recipes">Recipes: Preprocessing tools to create design matrices</a>.
</div>
<div id="ref-r" class="csl-entry">
R Core Team, 2018. <a href="https://www.R-project.org/">R: A language and environment for statistical computing</a>. R Foundation for Statistical Computing, Vienna, Austria.
</div>
<div id="ref-ggally" class="csl-entry">
Schloerke, B., Crowley, J., Cook, D., Briatte, F., Marbach, M., Thoen, E., Elberg, A., Larmarange, J., 2020. <a href="https://CRAN.R-project.org/package=GGally">GGally: Extension to ’ggplot2’</a>.
</div>
<div id="ref-readxl" class="csl-entry">
Wickham, H., Bryan, J., 2018. <a href="https://CRAN.R-project.org/package=readxl">Readxl: Read excel files</a>.
</div>
<div id="ref-dplyr" class="csl-entry">
Wickham, H., François, R., Henry, L., Müller, K., 2019. <a href="https://CRAN.R-project.org/package=dplyr">Dplyr: A grammar of data manipulation</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, H., Wickham, M.H., 2017. <a href="https://CRAN.R-project.org/package=tidyverse">Tidyverse: Easily install and load the ’tidyverse’</a>.
</div>
</div></section></div> ]]></description>
  <category>Manipulation</category>
  <category>Visualization</category>
  <category>R</category>
  <category>Modelling</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/index.html</guid>
  <pubDate>Mon, 10 Apr 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/tidymodels_regression/regression.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Machine learning with tidymodels: Classification Models</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/tidymodels_classification/index.html</link>
  <description><![CDATA[ 



<!-- Google tag (gtag.js) -->
<script async="" src="https://www.googletagmanager.com/gtag/js?id=G-XCGZZVKFDT"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-XCGZZVKFDT');
</script>
<section id="a-gentle-introduction-to-classification" class="level1">
<h1>A gentle introduction to classification</h1>
<p><em>Classification</em> is a form of machine learning in which you train a model to predict which category an item belongs to. Categorical data has distinct ‘classes’, rather than numeric values. For example, a health clinic might use diagnostic data such as a patient’s height, weight, blood pressure, blood-glucose level to predict whether or not the patient is diabetic.</p>
<p>Classification is an example of a supervised machine learning technique, which means it relies on data that includes known feature values (for example, diagnostic measurements for patients) as well as known label values (for example, a classification of non-diabetic or diabetic). A classification algorithm is used to fit a subset of the data to a function that can calculate the probability for each class label from the feature values. The remaining data is used to evaluate the model by comparing the predictions it generates from the features to the known class labels.</p>
<p>The best way to learn about classification is to try it for yourself, so that’s what you’ll do in this exercise.</p>
<p>We’ll require some packages to knock-off this module. You can have them installed as:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidymodels'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ranger'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tidyverse'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'forecats'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'skimr'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'paletteer'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nnet'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'here'</span>))</span></code></pre></div>
</div>
<p>Once you have installed the package, you can load the required packages</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidymodels)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(forcats)</span></code></pre></div>
</div>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>Once the packages are loaded then we are going to import the dataset into the session. In this post we will explore a multi-class classification problem using the Covertype Data Set, which I obtained from the UCI Machine Learning Repository. This data set provides a total of 581,012 instances. The goal is to differentiate seven forest community types using several environmental variables including elevation, topographic aspect, topographic slope, horizontal distance to streams, vertical distance to streams, horizontal distance to roadways, hillshade values at 9AM, hillshade values at noon, hillshade values at 3PM, horizontal distance to fire points, and a wilderness area designation, a binary and nominal variable.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">cover.type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_csv</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/ml/covtype.csv"</span>)</span></code></pre></div>
</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb4-1">cover.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Rows: 581,012
Columns: 55
$ Elevation                          &lt;dbl&gt; 2596, 2590, 2804, 2785, 2595, 2579,~
$ Aspect                             &lt;dbl&gt; 51, 56, 139, 155, 45, 132, 45, 49, ~
$ Slope                              &lt;dbl&gt; 3, 2, 9, 18, 2, 6, 7, 4, 9, 10, 4, ~
$ Horizontal_Distance_To_Hydrology   &lt;dbl&gt; 258, 212, 268, 242, 153, 300, 270, ~
$ Vertical_Distance_To_Hydrology     &lt;dbl&gt; 0, -6, 65, 118, -1, -15, 5, 7, 56, ~
$ Horizontal_Distance_To_Roadways    &lt;dbl&gt; 510, 390, 3180, 3090, 391, 67, 633,~
$ Hillshade_9am                      &lt;dbl&gt; 221, 220, 234, 238, 220, 230, 222, ~
$ Hillshade_Noon                     &lt;dbl&gt; 232, 235, 238, 238, 234, 237, 225, ~
$ Hillshade_3pm                      &lt;dbl&gt; 148, 151, 135, 122, 150, 140, 138, ~
$ Horizontal_Distance_To_Fire_Points &lt;dbl&gt; 6279, 6225, 6121, 6211, 6172, 6031,~
$ Wilderness_Area1                   &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,~
$ Wilderness_Area2                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Wilderness_Area3                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Wilderness_Area4                   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type1                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type2                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type3                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type4                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type5                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type6                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type7                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type8                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type9                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type10                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type11                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type12                        &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type13                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type14                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type15                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type16                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type17                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type18                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,~
$ Soil_Type19                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type20                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type21                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type22                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type23                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type24                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type25                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type26                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type27                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type28                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type29                        &lt;dbl&gt; 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0,~
$ Soil_Type30                        &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,~
$ Soil_Type31                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type32                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type33                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type34                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type35                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type36                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type37                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type38                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type39                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Soil_Type40                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,~
$ Cover_Type                         &lt;dbl&gt; 5, 5, 2, 2, 5, 2, 5, 5, 5, 5, 5, 2,~</code></pre>
</div>
</div>
<p>The seven community types are:</p>
<ul>
<li>1 = Spruce/Fir</li>
<li>2 = Lodgepole Pine</li>
<li>3 = Ponderosa Pine</li>
<li>4 = Cottonwood/Willow</li>
<li>5 = Aspen</li>
<li>6 = Douglas Fir</li>
<li>7 = Krummholz</li>
</ul>
<p>We need to recode the cover type with the corresponding names as follows;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1">cover.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(Cover_Type)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 x 1
  Cover_Type
       &lt;dbl&gt;
1          5
2          2
3          1
4          7
5          3
6          6
7          4</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">cover.type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cover =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">case_when</span>(Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spruce"</span>,</span>
<span id="cb8-3">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lodgepole"</span>,</span>
<span id="cb8-4">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ponderosa"</span>,</span>
<span id="cb8-5">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cottonwood"</span>,</span>
<span id="cb8-6">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aspen"</span>,</span>
<span id="cb8-7">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Douglas"</span>,</span>
<span id="cb8-8">                               Cover_Type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Krummholz"</span>)</span>
<span id="cb8-9">         )</span></code></pre></div>
</div>
<p>I then use dplyr <code>count</code> function to to compute the number of records from each community type</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">cover.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(cover) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">area_ha =</span> (n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4063</span>, </span>
<span id="cb9-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pct =</span> n<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(n) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, </span>
<span id="cb9-6">         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">across</span>(is.numeric, round, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 x 4
  cover           n area_ha   pct
  &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;
1 Lodgepole  283301  62754. 48.8 
2 Spruce     211840  46925. 36.5 
3 Ponderosa   35754   7920.  6.15
4 Krummholz   20510   4543.  3.53
5 Douglas     17367   3847.  2.99
6 Aspen        9493   2103.  1.63
7 Cottonwood   2747    608.  0.47</code></pre>
</div>
</div>
<p>The printed output suggests significant data imbalance. In order to speed up the tuning and training process, I then select out 500 samples from each class using a stratified random sample. For potentially improved results, I should use all available samples. However, this would take a lot longer to execute.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb11-2"></span>
<span id="cb11-3">cover.type.sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover.type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(cover) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb11-7"></span>
<span id="cb11-8">cover.type.sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(cover) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 7 x 2
  cover          n
  &lt;chr&gt;      &lt;int&gt;
1 Aspen        500
2 Cottonwood   500
3 Douglas      500
4 Krummholz    500
5 Lodgepole    500
6 Ponderosa    500
7 Spruce       500</code></pre>
</div>
</div>
<p>Next, I use the parsnips package <span class="citation" data-cites="parsnip">(Kuhn &amp; Vaughan, 2020)</span> to define a random forest implementation using the <code>ranger</code> engine in <em>classification</em> mode. Note the use of <code>tune()</code> to indicate that I plan to tune the <em>mtry</em> parameter. Since the data have not already been split into <em>training</em> and <em>testing</em> sets, I use the <code>initial_split()</code> function from <strong>rsample</strong> to define training and testing partitions followed by the <code>training()</code> and <code>testing()</code> functions to create new datasets for each split <span class="citation" data-cites="rsample">(Kuhn, Chow, &amp; Wickham, 2020)</span>.</p>
</section>
<section id="define-model" class="level2">
<h2 class="anchored" data-anchor-id="define-model">Define Model</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb13-1">rf_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rand_forest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mtry=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tune</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trees=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_engine</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ranger"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set_mode</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classification"</span>)</span></code></pre></div>
</div>
</section>
<section id="set-split" class="level2">
<h2 class="anchored" data-anchor-id="set-split">Set split</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb14-2"></span>
<span id="cb14-3">cover_split <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover.type.sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">initial_split</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata=</span>cover)</span>
<span id="cb14-5"></span>
<span id="cb14-6">cover_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover_split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">training</span>()</span>
<span id="cb14-7">cover_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover_split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">testing</span>()</span></code></pre></div>
</div>
<p>I would like to normalize all continuous predictor variables and create a dummy variable from the single nominal predictor variable (“wilderness”). I define these transformations within a recipe using functions available in recipes package <span class="citation" data-cites="recipes">(Kuhn &amp; Wickham, 2020a)</span>. This also requires defining the formula and the input data. Here, I am referencing only the training set, as the test set should not be introduced to the model at this point, as this could result in a later bias assessment of model performance. The <code>all_numeric()</code>, <code>all_nominal()</code>, and <code>all_outcomes()</code> functions are used to select columns on which to apply the desired transformations.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">cover_recipe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover_train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">recipe</span>(cover<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>.) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_normalize</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_numeric</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">step_dummy</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_nominal</span>(), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all_outcomes</span>())</span></code></pre></div>
</div>
<p>The model and pre-processing recipe are then combined into a workflow.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">cover_wf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_model</span>(rf_model) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb16-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_recipe</span>(cover_recipe)</span></code></pre></div>
</div>
<p>I then use <strong>yardstick</strong> <span class="citation" data-cites="yerdstick">(<strong>yerdstick?</strong>)</span> and the <code>metric_set()</code> function to define the desired assessment metrics, in this case only overall accuracy. To prepare for hyperparameter tuning using five-fold cross validation, I define folds using the <code>vfold_cv()</code> function from <strong>rsample</strong>. Similar to the training and testing split above, the folds are stratified by the community type to maintain class balance within each fold. Lastly, I then define values of <em>mtry</em> to test using the dials package. It would be better to test more values and maybe optimize additional parameters. However, I am trying to decrease the time required to execute the example.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Define metrics</span></span>
<span id="cb17-2">my_mets <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metric_set</span>(accuracy)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Define folds</span></span>
<span id="cb17-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb17-6">cover_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vfold_cv</span>(cover_train, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">strata=</span>cover)</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Define tuning grid</span></span>
<span id="cb17-9">rf_grid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid_regular</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mtry</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">range =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)),</span>
<span id="cb17-10">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span></code></pre></div>
</div>
<p>Now that the model, pre-processing steps, workflow, metrics, data partitions, and mtry values to try have been defined, I tune the model using <code>tune_grid()</code> from the tune package. Note that this may take several minutes. Specifically, I make sure to use the defined workflow so that the pre-processing steps defined using the recipe are used. Once completed, I collect the resulting metrics for each mtry value for each fold using collect_metrics() from tune. The summarize parameter is set to FALSE because I want to obtain all results for each fold, as opposed to aggregated results. I then calculate the minimum, maximum, and median overall accuracies for each fold using dplyr and plot the results using ggplot2.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1">rf_tuning <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover_wf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tune_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resamples=</span>cover_folds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grid =</span> rf_grid, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metrics=</span>my_mets)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1">tune_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf_tuning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summarize=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(.metric <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'accuracy'</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  </span>
<span id="cb19-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(mtry) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  </span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_acc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(.estimate),             </span>
<span id="cb19-6">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">median_acc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(.estimate),             </span>
<span id="cb19-7">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_acc =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(.estimate))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(tune_result, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span>median_acc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span>mtry))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_errorbar</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin=</span>min_acc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax=</span>max_acc), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mtry Parameter"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accuracy"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/tidymodels_classification/index_files/figure-html/unnamed-chunk-16-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>The best mtry parameter is defined using the <code>select_best()</code> function from tune. The workflow is then finalized and the model is trained using <code>last_fit()</code> from tune. The <code>collect_predictions()</code> function from tune is used to obtain the class prediction for each sample in the withheld test set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">best_rf_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> rf_tuning <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select_best</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"accuracy"</span>)</span>
<span id="cb21-3"></span>
<span id="cb21-4">final_cover_wf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> cover_wf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">finalize_workflow</span>(best_rf_model)</span>
<span id="cb21-6"></span>
<span id="cb21-7">final_cover_fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> final_cover_wf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">last_fit</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">split=</span>cover_split, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metrics=</span>my_mets) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">collect_predictions</span>()</span></code></pre></div>
</div>
<p>Lastly, I use the <code>conf_mat()</code> function from the yardstick package to obtain a multi-class error matrix from the reference and predicted classes for each sample in the withheld testing set.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1">final_cover_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth=</span>cover, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate=</span>.pred_class)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            Truth
Prediction   Aspen Cottonwood Douglas Krummholz Lodgepole Ponderosa Spruce
  Aspen        125          0       0         0         0         0      0
  Cottonwood     0        125       0         0         0         0      0
  Douglas        0          0     125         0         0         0      0
  Krummholz      0          0       0       125         0         0      0
  Lodgepole      0          0       0         0       124         0      0
  Ponderosa      0          0       0         0         1       125      0
  Spruce         0          0       0         0         0         0    125</code></pre>
</div>
</div>
<p>Passing the matrix to <code>summary()</code> will provide a set of assessment metrics calculated from the error matrix.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1">final_cover_fit <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conf_mat</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">truth=</span>cover, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">estimate=</span>.pred_class) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb24-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 13 x 3
   .metric              .estimator .estimate
   &lt;chr&gt;                &lt;chr&gt;          &lt;dbl&gt;
 1 accuracy             multiclass     0.999
 2 kap                  multiclass     0.999
 3 sens                 macro          0.999
 4 spec                 macro          1.00 
 5 ppv                  macro          0.999
 6 npv                  macro          1.00 
 7 mcc                  multiclass     0.999
 8 j_index              macro          0.999
 9 bal_accuracy         macro          0.999
10 detection_prevalence macro          0.143
11 precision            macro          0.999
12 recall               macro          0.999
13 f_meas               macro          0.999</code></pre>
</div>
</div>
</section>
<section id="concluding-remarks" class="level2">
<h2 class="anchored" data-anchor-id="concluding-remarks">Concluding Remarks</h2>
<p>Similar to the tidyverse <span class="citation" data-cites="tidyverse">(Wickham &amp; Wickham, 2017)</span>, tidymodels <span class="citation" data-cites="tidymodels">(Kuhn &amp; Wickham, 2020b)</span> is a very powerful framework for creating machine learning workflows and experimental environments using a common philosophy and syntax. Although this introduction was brief and there are many more components that could be discussed, this can serve as a starting point for continued learning and experimentation. Check out the <a href="https://www.tidymodels.org/start/tuning/">tidymodels website</a> for additional examples and tutorials.</p>
</section>
<section id="cited-materials" class="level2">




</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent" data-line-spacing="2">
<div id="ref-rsample" class="csl-entry">
Kuhn, M., Chow, F., &amp; Wickham, H. (2020). <em>Rsample: General resampling infrastructure</em>. Retrieved from <a href="https://CRAN.R-project.org/package=rsample">https://CRAN.R-project.org/package=rsample</a>
</div>
<div id="ref-parsnip" class="csl-entry">
Kuhn, M., &amp; Vaughan, D. (2020). <em>Parsnip: A common API to modeling and analysis functions</em>. Retrieved from <a href="https://CRAN.R-project.org/package=parsnip">https://CRAN.R-project.org/package=parsnip</a>
</div>
<div id="ref-recipes" class="csl-entry">
Kuhn, M., &amp; Wickham, H. (2020a). <em>Recipes: Preprocessing tools to create design matrices</em>. Retrieved from <a href="https://CRAN.R-project.org/package=recipes">https://CRAN.R-project.org/package=recipes</a>
</div>
<div id="ref-tidymodels" class="csl-entry">
Kuhn, M., &amp; Wickham, H. (2020b). <em>Tidymodels: Easily install and load the ’tidymodels’ packages</em>. Retrieved from <a href="https://CRAN.R-project.org/package=tidymodels">https://CRAN.R-project.org/package=tidymodels</a>
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, H., &amp; Wickham, M. H. (2017). <em>Tidyverse: Easily install and load the ’tidyverse’</em>. Retrieved from <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>
</div>
</div></section></div> ]]></description>
  <category>Manipulation</category>
  <category>Visualization</category>
  <category>R</category>
  <category>Modelling</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/tidymodels_classification/index.html</guid>
  <pubDate>Sun, 02 Apr 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Getting GEBCO Bathymetry Data and glean the power of terra and tidyterra packages for raster and vector objects</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/gebco/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>As an Oceanography, one key parameter that need to get right is the bathymetry. Bathymetry is the science of determining the topography of the seafloor. Bathymetry data is used to generate navigational charts, seafloor profile, biological oceanography, beach erosion, sea-level rise, etc. There pretty of bathymetry data and one of the them is the GEBCO Gridded Bathymetry Data. In this post we are going to learn how to access the bathymetry dataset from GEBCO website, import the dataset into R session and make plots to reveal the elevation and bathymetry of the Pemba Channel. In addtional, the post provide an glimpse of the new packages for handling raster dataset in R. The packages I am goint to introduce to you are <em>terra</em> and <strong>tidyterra</strong>, that have changed the way R handles raster and vector objet and improved both the processing of raster objects and visualization.</p>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>The General bathymetric Chart of the Oceans (GEBCO) consists of an international group of experts in ocean mapping. This team provides the most authoritative publicly-available bathymetry of the world’s oceans. In this post i will illustrate how to download data from their website and use for mapping. You can obtain the data for your region of interest or for the global oceans. You can download the data from <a href="https://download.gebco.net/">GEBCO</a>. For this case I have downloaded the data for East African Coast as netCDF file by specifying the geogrpahical extent and choose the file type as shown in Figure&nbsp;1.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-gebco" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/gebco/gebco.jpg" class="img-fluid figure-img" style="width:100.0%"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: The gateway screenshot for accessing bathymetric dataset for any region in the world</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>To process the data and visualize in maps, we need several packages highlighted in the chunk below. You need to load the packages in your session first. If not in your machine, you need to install them first.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(ncdf4)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(sf)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(metR)</span></code></pre></div>
</div>
<p>Then read the file using <code>nc_open</code> function of the <strong>ncdf4</strong> package <span class="citation" data-cites="ncdf4">(Pierce 2017)</span> and print the file to see the metadata that describe the variables that are embedded in the file.</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">nc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nc_open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d:/gebco_tz.nc"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb3-1">nc</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>File d:/semba/shapefile/gebco/gebco_2021_n2.0_s-15.0_w35.0_e50.0.nc (NC_FORMAT_CLASSIC):

     1 variables (excluding dimension variables):
        short elevation[lon,lat]   
            standard_name: height_above_mean_sea_level
            long_name: Elevation relative to sea level
            units: m
            grid_mapping: crs
            sdn_parameter_urn: SDN:P01::ALATZZ01
            sdn_parameter_name: Sea floor height (above mean sea level) {bathymetric height}
            sdn_uom_urn: SDN:P06::ULAA
            sdn_uom_name: Metres

     2 dimensions:
        lat  Size:4080 
            standard_name: latitude
            long_name: latitude
            units: degrees_north
            axis: Y
            sdn_parameter_urn: SDN:P01::ALATZZ01
            sdn_parameter_name: Latitude north
            sdn_uom_urn: SDN:P06::DEGN
            sdn_uom_name: Degrees north
        lon  Size:3600 
            standard_name: longitude
            long_name: longitude
            units: degrees_east
            axis: X
            sdn_parameter_urn: SDN:P01::ALONZZ01
            sdn_parameter_name: Longitude east
            sdn_uom_urn: SDN:P06::DEGE
            sdn_uom_name: Degrees east

    36 global attributes:
        title: The GEBCO_2021 Grid - a continuous terrain model for oceans and land at 15 arc-second intervals
        summary: The GEBCO_2021 Grid is a continuous, global terrain model for ocean and land with a spatial resolution of 15 arc seconds.The grid uses as a 'base-map' Version 2.2 of the SRTM15+ data set (Tozer et al, 2019). This data set is a fusion of land topography with measured and estimated seafloor topography. It is augmented with gridded bathymetric data sets developed as part of the Nippon Foundation-GEBCO Seabed 2030 Project.
        keywords: BATHYMETRY/SEAFLOOR TOPOGRAPHY, DIGITAL ELEVATION/DIGITAL TERRAIN MODELS
        Conventions: CF-1.6, ACDD-1.3
        id: DOI: 10.5285/c6612cbe-50b3-0cff-e053-6c86abc09f8f
        naming_authority: https://dx.doi.org
        history: Information on the development of the data set and the source data sets included in the grid can be found in the data set documentation available from https://www.gebco.net
        source: The GEBCO_2021 Grid is the latest global bathymetric product released by the General Bathymetric Chart of the Oceans (GEBCO) and has been developed through the Nippon Foundation-GEBCO Seabed 2030 Project. This is a collaborative project between the Nippon Foundation of Japan and GEBCO. The Seabed 2030 Project aims to bring together all available bathymetric data to produce the definitive map of the world ocean floor and make it available to all.
        comment: The data in the GEBCO_2021 Grid should not be used for navigation or any purpose relating to safety at sea.
        license: The GEBCO Grid is placed in the public domain and may be used free of charge. Use of the GEBCO Grid indicates that the user accepts the conditions of use and disclaimer information: https://www.gebco.net/data_and_products/gridded_bathymetry_data/gebco_2019/grid_terms_of_use.html
        date_created: 2021-07-01
        creator_name: GEBCO through the Nippon Foundation-GEBCO Seabed 2030 Project
        creator_email: gdacc@seabed2030.org
        creator_url: https://www.gebco.net
        institution: On behalf of the General Bathymetric Chart of the Oceans (GEBCO), the data are held at the British Oceanographic Data Centre (BODC).
        project: Nippon Foundation - GEBCO Seabed2030 Project
        creator_type: International organisation
        geospatial_bounds: -180
         geospatial_bounds: -90
         geospatial_bounds: 180
         geospatial_bounds: 90
        geospatial_bounds_crs: WGS84
        geospatial_bounds_vertical_crs: EPSG:5831
        geospatial_lat_min: -90
        geospatial_lat_max: 90
        geospatial_lat_units: degrees_north
        geospatial_lat_resolution: 0.00416666666666667
        geospatial_lon_min: -180
        geospatial_lon_max: 180
        geospatial_lon_units: degrees_east
        geospatial_lon_resolution: 0.00416666666666667
        geospatial_vertical_min: -10977
        geospatial_vertical_max: 8685
        geospatial_vertical_units: meters
        geospatial_vertical_resolution: 1
        geospatial_vertical_positive: up
        identifier_product_doi: DOI: 10.5285/c6612cbe-50b3-0cff-e053-6c86abc09f8f
        references: DOI: 10.5285/c6612cbe-50b3-0cff-e053-6c86abc09f8f
        node_offset: 1</code></pre>
</div>
</div>
<p>Looking on the metadata, we notice that there are three variables we need to extract from the file, these are longitude, latitude and depth. We use a <code>ncvar_get</code> function from <strong>ncdf4</strong> <span class="citation" data-cites="ncdf4">(Pierce 2017)</span> package to extract these variables. Note the name parsed in the function as should written as they appear in the metadata.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb5-1">lat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncvar_get</span>(nc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lat"</span>)</span>
<span id="cb5-2">lon <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncvar_get</span>(nc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lon"</span>)</span>
<span id="cb5-3">bathy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncvar_get</span>(nc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"elevation"</span>)</span></code></pre></div>
</div>
<p>Then we can check the type of the file using a <code>class</code> function</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(bathy); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(lon); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(lat)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "matrix" "array" </code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "array"</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "array"</code></pre>
</div>
</div>
<p>We notice these objects comes as array. we can check the size also</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(lon); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(lat);<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(bathy)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3600</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 4080</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 3600 4080</code></pre>
</div>
</div>
<p>We also notice that while lon and lat object are array, but they are vector and only bathy is the matrix. Therefore, we need to make a data frame so that we can make plots using ggplot package, which only work in the dataset that is organized as data.frame or tibble. That can be done using a <code>expand.grid</code> function. First we expand the lon and lat file followed with the bathy and combine them to make a tibble as the chunk below highlight. Because of the file size, only bathymetric values that fall within the pemba Channel were selected.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb14-1">dataset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(lon, lat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_cols</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(bathy)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lon =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lat =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">depth =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb14-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(lon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> lon <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">40.5</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> lat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.8</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> lat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
</div>
<p>Separate the dataset into the land and ocean based on zero (0) value as reference point, where the above sea level topography values are assumed</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb15-1">land <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(depth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> )</span>
<span id="cb15-2">ocean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> dataset <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(depth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> )</span></code></pre></div>
</div>
<p>Load the basemap shapefile</p>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb16-1">africa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d:/africa.shp"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>Make a color of land and depth that we will use later for mapping the topography and bathymetry, respectively.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#make palette</span></span>
<span id="cb17-2">ocean.pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000413"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000728"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#002650"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#005E8C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0096C8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#45BCBB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#8AE2AE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#BCF8B9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DBFBDC"</span>)</span>
<span id="cb17-3">land.pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#467832"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#887438"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B19D48"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DBC758"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FAE769"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FAEB7E"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FCED93"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FCF1A7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FCF6C1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FDFAE0"</span>)</span></code></pre></div>
</div>
<p>We can plot the bathymetry shown in @ fig-bathy with the code highlighted in the chunk below</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-2">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ocean, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> depth), </span>
<span id="cb18-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">global.breaks =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-4">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ocean, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> depth, </span>
<span id="cb18-5">                                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> ..level..), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">600</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> ocean.pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Depth (m)"</span>, </span>
<span id="cb18-7">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1800</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-8">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> africa)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb18-12">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_scale</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-bathy" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/gebco/index_files/figure-html/fig-bathy-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Bathymetry of the Pemba Channel, solid lines are contour lines</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Similary, we can plot togopgraphy of the area shown in Figure&nbsp;3 using the code shown below</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-2">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour_fill</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> land, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> depth), </span>
<span id="cb19-3">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">120</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-4">  metR<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_contour2</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> land, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">z =</span> depth), </span>
<span id="cb19-5">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">skip =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradientn</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colours =</span> land.pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Topography"</span>, </span>
<span id="cb19-7">                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt_trans</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-8">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> africa, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-bathy2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/gebco/index_files/figure-html/fig-bathy2-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Elevation near the Pemba Channel, solid lines are contour lines</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="the-modern-approach" class="level2">
<h2 class="anchored" data-anchor-id="the-modern-approach">The modern approach</h2>
<p>In R ecosystem, the traditional handling of spatial data– raster and vector has changed dramatically in recent years. The widely used <strong>raster</strong> <span class="citation" data-cites="raster">(Hijmans 2017)</span> and <strong>sp</strong> <span class="citation" data-cites="sp">(Bivand, Pebesma, and Gomez-Rubio 2013)</span> packages dominated spatial analysis in R for decades. This has changed recent with the introduction of new and more convinient packages. These packages include <strong>terra</strong>, which has functions for creating, reading, manipulating, and writing raster data <span class="citation" data-cites="terra">(Hijmans 2022)</span>. The <strong>terra</strong> package provides, among other things, general raster data manipulation functions that can easily be used to develop more specific functions. The package also implements raster algebra and most functions for raster data manipulation.</p>
<p>terra replaces the raster package. The interfaces of terra and raster are similar, but terra is simpler, faster and can do more. The sister package to <strong>terra</strong> is <strong>tidyterra</strong> <span class="citation" data-cites="tidyterra">(Hernangómez 2023)</span>. <strong>tidyterra</strong> is a package that add common methods from the <strong>tidyverse</strong> <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span> for SpatRaster and SpatVectors objects created with the <strong>terra</strong> package. It also adds specific <code>geom_spat*()</code> functions for plotting these kind of objects with <strong>ggplot2</strong> <span class="citation" data-cites="ggplot">(Wickham 2016)</span>.</p>
<p>Let’s load the packages</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(terra)</span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyterra)</span></code></pre></div>
</div>
<p>Then we use a function <code>rast</code> from <strong>terra</strong> package to read raster file from the working directory of the local machine.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb21-1">gebco <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rast</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gebco.nc"</span>)</span></code></pre></div>
</div>
<div class="cell">

</div>
<p>Then we print the the bathymetry file that we just imported</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb22-1">gebco</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 4080, 3600, 1  (nrow, ncol, nlyr)
resolution  : 0.004166667, 0.004166667  (x, y)
extent      : 35, 50, -15, 2  (xmin, xmax, ymin, ymax)
coord. ref. : lon/lat WGS 84 
source      : gebco_2021_n2.0_s-15.0_w35.0_e50.0.nc 
varname     : elevation (Elevation relative to sea level) 
name        : elevation 
unit        :         m </code></pre>
</div>
</div>
<p>The printed output is the metadata of the spatRaster with information that can assist to clear understand the file. I am not going into detail into it but he <code>coord. ref.</code> field shows <code>lon/lat WGS 84</code>, which is Geographic Coordinates with Datum WGS 84. If you just want to know the CRS from a <code>SpatRaster</code>, you just call <code>crs()</code> You also notice that the <code>varname</code> is the elevation, but in fact this dataset contain the altitude (elevation) for land and depth (bathymetry) for ocean and the unit of the measurement are in meters. Since the dataset is the raste, it provide the grid resolution of 0.004166667 degree, which is equivalent to a spatial resolution of 500 meters grid.</p>
<p>The geographical extent of the file is quite big range from longitude 35 to 50 and latitude -15 to 2. Since we only focus for the Pemba Channel, we need to crop the spatRaster to our area of interest. <strong>terra</strong> package has <code>crop</code> function for that but, thi function requires us to purse a file that has defined geographical extent. The extent can easily defined using <code>ext</code> function, also from <strong>terra</strong> package. The geographical extent of our area ranged from longitude 38 to 41 and latitude -6.2 to -3.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb24-1">pemba.ext <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ext</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">41</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.2</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.8</span>)</span>
<span id="cb24-2"></span>
<span id="cb24-3">gebco.pemba <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crop</span>(</span>
<span id="cb24-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> gebco, </span>
<span id="cb24-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> pemba.ext</span>
<span id="cb24-6">  )</span>
<span id="cb24-7"></span>
<span id="cb24-8">gebco.pemba</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>class       : SpatRaster 
dimensions  : 576, 720, 1  (nrow, ncol, nlyr)
resolution  : 0.004166667, 0.004166667  (x, y)
extent      : 38, 41, -6.2, -3.8  (xmin, xmax, ymin, ymax)
coord. ref. : lon/lat WGS 84 
source(s)   : memory
name        : elevation 
min value   :     -2610 
max value   :      2247 </code></pre>
</div>
</div>
<p>The printed metadata indicated that the geographical extent meet what we defined above but it also provide the minimum and maximum values of the bathymetry and elevation values. <strong>tidyterra</strong> makes us use similar verbs of tidyverse to raster objects similar to tibble objects. For example, in the Pemba.gebco we can first filter and strip all elevation grid (elevation &gt;0) and rename the elevation into depth with <code>rename</code> function and then use <code>as.data.frame</code> function from <strong>terra</strong> to convert spatRaster object to tibble. The chunk below summarise the above explanation;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb26-1">gebco.pemba.tb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> gebco.pemba <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb26-2">  tidyterra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(elevation <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb26-3">  tidyterra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">depth =</span> elevation) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb26-4">  terra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>In addition of making tidyverse verbs that suits for tibble for manipulation of raster objects, <strong>tidyterra</strong> brings function for plotting raster object with <strong>ggplot2</strong>. A <code>geom_spatraster</code> function has enabled ability of plotting both elevation and bathymetry with color gradient that distinguish these layers in a more appealing form. It also has <code>geom_spatraster_contour</code> function for plotting contour from raster in <strong>ggplot</strong>. Simple feature and shapefile are also plotted with <code>geom_spatvector</code> function. The chunk below contains lines that illustrates the above explanation and rendered to generate Figure&nbsp;4.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gebco.pemba, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatraster_contour</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> gebco.pemba, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>), </span>
<span id="cb27-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_spatvector</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> africa, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> africa, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_to_upper</span>(CNTRY_NAME)), </span>
<span id="cb27-7">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">check_overlap =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">38.9</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5.6</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4.1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-11">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_north_arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tr"</span>, </span>
<span id="cb27-12">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb27-13">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb27-14">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad_x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb27-15">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pad_y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb27-16">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rotation =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-17">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_scale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bl"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_hypso_tint_c</span>(</span>
<span id="cb27-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gmt_globe"</span>,</span>
<span id="cb27-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label_number</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">big.mark =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span>),</span>
<span id="cb27-21">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">limits =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>),</span>
<span id="cb27-22">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span>),</span>
<span id="cb27-23">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_colorbar</span>(</span>
<span id="cb27-24">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bathymetry and Elevation"</span>,</span>
<span id="cb27-25">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.hjust =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,</span>
<span id="cb27-26">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vertical"</span>,</span>
<span id="cb27-27">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb27-28">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.theme =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>),</span>
<span id="cb27-29">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barheight =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,</span>
<span id="cb27-30">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">barwidth =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb27-31">    )</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig4" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/gebco/index_files/figure-html/fig-fig4-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Bathymetry and elevation of the Pemba Channel. Solid black line is an isobar contour of 200 meter</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-sp" class="csl-entry">
Bivand, Roger S., Edzer Pebesma, and Virgilio Gomez-Rubio. 2013. <em>Applied Spatial Data Analysis with <span>R</span>, Second Edition</em>. Springer, NY. <a href="https://asdar-book.org/">https://asdar-book.org/</a>.
</div>
<div id="ref-tidyterra" class="csl-entry">
Hernangómez, Diego. 2023. <em><span class="nocase">tidyterra</span>: Tidyverse Methods and Ggplot2 Helpers for Terra Objects</em> (version 0.3.1). <a href="https://doi.org/10.5281/zenodo.6572471">https://doi.org/10.5281/zenodo.6572471</a>.
</div>
<div id="ref-raster" class="csl-entry">
Hijmans, Robert J. 2017. <em>Raster: Geographic Data Analysis and Modeling</em>. <a href="https://CRAN.R-project.org/package=raster">https://CRAN.R-project.org/package=raster</a>.
</div>
<div id="ref-terra" class="csl-entry">
———. 2022. <em>Terra: Spatial Data Analysis</em>. <a href="https://CRAN.R-project.org/package=terra">https://CRAN.R-project.org/package=terra</a>.
</div>
<div id="ref-ncdf4" class="csl-entry">
Pierce, David. 2017. <em>Ncdf4: Interface to Unidata netCDF (Version 4 or Earlier) Format Data Files</em>. <a href="https://CRAN.R-project.org/package=ncdf4">https://CRAN.R-project.org/package=ncdf4</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
</div></section></div> ]]></description>
  <category>Manipulation</category>
  <category>Visualization</category>
  <category>R</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/gebco/index.html</guid>
  <pubDate>Tue, 28 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/gebco/thumbnail.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: box plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/">Visualization with Seaborn</a> of this series, we were introduced on the power visualization and dove into distributions plot. In this post we are going learn how to plot boxplot in seaborn. The boxplot is used to plot the quantile information of numeric variables in a dataset. To plot a box plot, the <code>boxplot()</code> function is used. To plot a horizontal boxplot, the variable name of the dataset is passed to the x-axis.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that is made up of various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains seven variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year.</p>
</section>
<section id="boxplot" class="level2">
<h2 class="anchored" data-anchor-id="boxplot">Boxplot</h2>
<p>Next, we will call the <code>boxplot()</code> function from the Seaborn library to plot a bar plot that displays the average length of penguin species.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb5-2">sns.boxplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>)</span>
<span id="cb5-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb5-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Boxplot length by species</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The Figure&nbsp;1 shows that the average length of penguins from the three island. We can parse an argument <code>hue = "sex"</code> to stack the plot as Figure&nbsp;2 shows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"></span>
<span id="cb6-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb6-3">sns.boxplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>)</span>
<span id="cb6-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb6-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index_files/figure-html/fig-fig2-3.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Boxplot of length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Draw a vertical boxplot with nested grouping by two variables:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"></span>
<span id="cb7-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb7-3">sns.boxplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>)</span>
<span id="cb7-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb7-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig3" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index_files/figure-html/fig-fig3-5.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Boxplot of length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="violin" class="level2">
<h2 class="anchored" data-anchor-id="violin">Violin</h2>
<p>Violin plots are similar to Box plots. However, unlike Box plots that plot quantile information, the Violin plots plot the overall distribution of values in the numeric columns. The following script plots two Violin plots for the passengers traveling alone and for the passengers traveling along with another passenger. The <code>violinplot()</code> function is used to plot a swarm plot with Seaborn.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1"></span>
<span id="cb8-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb8-3">sns.violinplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>)</span>
<span id="cb8-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb8-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig4" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index_files/figure-html/fig-fig4-7.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Violin plot of length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>We can split the violin plot with <code>split = True</code> argument. One key advantage of splited violins is that take up less space (Figure&nbsp;5):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb9-3">sns.violinplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>, </span>
<span id="cb9-4">split <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb9-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig5" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index_files/figure-html/fig-fig5-9.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Violin plot of length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/index.html</guid>
  <pubDate>Thu, 23 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seaborn_boxplot/boxplot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: bar plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/">Visualization with Seaborn</a> of this series, we were introduced on the power visualization and dove into distributions plot. In this post we are going learn barplot. The bar plot is used to capture the relationship between a categorical and numerical column. For each unique value in a categorical column, a bar is plotted, which by default, displays the mean value for the data in a numeric column specified by the bar plot. Seaborn has nifty function called <code>barplot()</code>, which is dedicated for this type of plot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that is made up of various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains seven variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year.</p>
<p>Next, we will call the <code>barplot()</code> function from the Seaborn library to plot a bar plot that displays the average length of penguin species.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb5-2">sns.barplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>)</span>
<span id="cb5-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index_files/figure-html/fig-fig1-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Average length by island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The Figure&nbsp;1 shows that the average length of penguins from the three island. We can parse an argument <code>hue = "sex"</code> to stack the plot as Figure&nbsp;2 shows.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1"></span>
<span id="cb6-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb6-3">sns.barplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>)</span>
<span id="cb6-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-fig2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index_files/figure-html/fig-fig2-3.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Average length by species and island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/index.html</guid>
  <pubDate>Wed, 22 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seaborn_barplot/barplot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: Joint plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/">Visualization with Seaborn</a> of this series, we were introduced on the power visualization and dove into distributions plot. In this post we are going focus on jointplot. <code>jointplot</code> is used to plot the histogram distribution of two columns, one on the <code>x-axis</code> and the other on the <code>y-axis</code>. A scatter plot is by default drawn for the points in the two columns. Seaborn has nifty function called <code>jointplot()</code>, which is dedicated for this type of plot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that is made up of various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains seven variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year.</p>
<p>The joint plot is used to plot the histogram distribution of two columns, one on the x-axis and the other on the y-axis. A scatter plot is by default drawn for the points in the two columns. To plot a joint plot, you need to call the <code>jointplot()</code> function. The following script plots a joint plot for <code>bill_length_mm</code> and <code>bill_depth_mm</code> columns of the df dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb5-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005A814D00&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Assigning a hue variable will add conditional colors to the scatter plot and draw separate density curves (using <code>kdeplot()</code>) on the marginal axes. In this case we specify <code>hue = "island"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb8-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005D55D160&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-7-3.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Several different approaches to plotting are available through the kind parameter. Setting kind=“kde” will draw both bivariate and univariate KDEs:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb11-2">sns.jointplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kde"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005D707310&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-8-5.png" class="img-fluid" width="576"></p>
</div>
</div>
<p>Set <code>kind="reg"</code> to add a linear regression fit (using <code>regplot()</code>) and univariate KDE curves:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1"></span>
<span id="cb14-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb14-3">sns.jointplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reg"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005D8163D0&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-9-7.png" class="img-fluid" width="576"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb17-3">sns.jointplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hex"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;seaborn.axisgrid.JointGrid object at 0x000000005DC64610&gt;</code></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index_files/figure-html/unnamed-chunk-10-9.png" class="img-fluid" width="576"></p>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seabornjointplot/index.html</guid>
  <pubDate>Tue, 21 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seabornjointplot/jointPlot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: Line plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In <a href="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/">visualization with Seaborn</a> of this series, we were introduced on the power visualization and dove into distributions plot. In this post we are going focus on jointplot. <code>jointplot</code> is used to plot the histogram distribution of two columns, one on the <code>x-axis</code> and the other on the <code>y-axis</code>. A scatter plot is by default drawn for the points in the two columns. Seaborn has nifty function called <code>jointplot()</code>, which is dedicated for this type of plot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a <code>flights</code> dataset, which has 10 years of monthly airline passenger data. We do not need to download this dataset as it comes with the seaborn package. We only need to load it from the package into our session using <code>sns.load_dataset</code> function and specify the <code>penguins</code> as the name of the dataset and assign it as df;</p>
<div class="cell">

</div>
<div class="cell">

</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'flights'</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb3-1">df</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     year month  passengers
0    1949   Jan         112
1    1949   Feb         118
2    1949   Mar         132
3    1949   Apr         129
4    1949   May         121
..    ...   ...         ...
139  1960   Aug         606
140  1960   Sep         508
141  1960   Oct         461
142  1960   Nov         390
143  1960   Dec         432

[144 rows x 3 columns]</code></pre>
</div>
</div>
<p>A printed <code>df</code> dataset shows that a flight dataset is made up of three variables — year, month, and number of passenger between January 1949 and December 1960, which are arranged in long format. To draw a line plot using long-form data, we simply assign the <code>x</code> and <code>y</code> variables</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb5-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"passengers"</span>)</span>
<span id="cb5-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>)</span>
<span id="cb5-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ts" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index_files/figure-html/fig-ts-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Annual number of flight passenger</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>However, looking at Figure&nbsp;2, we notice that the confidence level is aslo plotted thought we did not specify them. The reason is that each year has twelve records of monthly number of passengers, which when plotted are also estimated to show the variability of passenger on that year. So if we want to draw only the line, we may filter a specific year, for this case I only want to plot passengers for July during the same period.</p>
<p>First, we need to filter the dataset to July and assign a new dataset as <code>df_july</code>. The chunk below shows a line of code that filter passenger between 1949 to 1960 for July only.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb6-1">df_july <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df.month <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Jul'</span>]</span></code></pre></div>
</div>
<p>Then plot.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb7-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_july, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"passengers"</span>)</span>
<span id="cb7-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>)</span>
<span id="cb7-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ts1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index_files/figure-html/fig-ts1-3.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: Number of flight passenger for July during the period</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Because I still learning how to deal with time in python, I simply switch to R as quarto allows me to swap code for the two languages within the same environment. I switch to R code and then convert the panda data frame to tibble using the reticulate package <span class="citation" data-cites="reticulate">(Ushey, Allaire, and Tang 2020)</span>. The package allows us to convert pandas dataframe to tibble using a <code>py</code> function within R chunk;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb8-1">tb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> reticulate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>df</span></code></pre></div>
</div>
<p>Then within R chunk, we can add a new column <code>date</code> contain date for each month</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb9-1">tb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb9-2">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> </span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">my</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">011949</span>), lubridate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">my</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">121960</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>))</span>
<span id="cb9-4"></span>
<span id="cb9-5">tb <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  year month passengers       date
1 1949   Jan        112 1949-01-01
2 1949   Feb        118 1949-02-01
3 1949   Mar        132 1949-03-01
4 1949   Apr        129 1949-04-01
5 1949   May        121 1949-05-01
6 1949   Jun        135 1949-06-01</code></pre>
</div>
</div>
<p>The printed tibble has one added variable date. Since we have created this dataset, we can convert it back to python pandas dataframe by simply using <code>r.</code> funtion within the python chunk;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1">pdf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.tb</span>
<span id="cb11-2">pdf</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       year month  passengers        date
0    1949.0   Jan       112.0  1949-01-01
1    1949.0   Feb       118.0  1949-02-01
2    1949.0   Mar       132.0  1949-03-01
3    1949.0   Apr       129.0  1949-04-01
4    1949.0   May       121.0  1949-05-01
..      ...   ...         ...         ...
139  1960.0   Aug       606.0  1960-08-01
140  1960.0   Sep       508.0  1960-09-01
141  1960.0   Oct       461.0  1960-10-01
142  1960.0   Nov       390.0  1960-11-01
143  1960.0   Dec       432.0  1960-12-01

[144 rows x 4 columns]</code></pre>
</div>
</div>
<p>Then we can now plot a line and use the new column <code>date</code> we just created instead of year.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb13-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pdf, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"date"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"passengers"</span>)</span>
<span id="cb13-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Passengers'</span>)</span>
<span id="cb13-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ts3" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index_files/figure-html/fig-ts3-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Monthly Number of flight passengers</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Figure&nbsp;3 and Figure&nbsp;2 are almost similar but while Figure&nbsp;3 used year as x-axis, Figure&nbsp;3 used date in the x-axis. You can see that Figure&nbsp;3 clearly shows the variability of passenger within the year, which was not possible with Figure&nbsp;2.</p>
<p>We can assign a grouping semantic (hue, size, or style) to plot separate lines</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb14-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"passengers"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>)</span>
<span id="cb14-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Passengers"</span>)</span>
<span id="cb14-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ts4" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index_files/figure-html/fig-ts4-3.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Number of flight passenger by month during the period</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Similarly, we can assign multiple semanti variables of the same variable that makes the plot more appealing ore easily to distinguish between the assigned parameters.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb15-2">sns.lineplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"passengers"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>, style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"month"</span>)</span>
<span id="cb15-3">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Passengers"</span>)</span>
<span id="cb15-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ts5" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index_files/figure-html/fig-ts5-5.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Number of flight passenger by month during the period</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-reticulate" class="csl-entry">
Ushey, Kevin, JJ Allaire, and Yuan Tang. 2020. <em>Reticulate: Interface to ’Python’</em>. <a href="https://CRAN.R-project.org/package=reticulate">https://CRAN.R-project.org/package=reticulate</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/index.html</guid>
  <pubDate>Tue, 21 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seaborn_lineplot/lineplot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>plotting in Python with Seaborn: Distribution plot</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Wikipedia <span class="citation" data-cites="dataviz">(2023)</span> describe data visualization as an interdisciplinary field that deals with the graphic representation of data and information. It is a particularly efficient way of communicating when the data are processed to generate information that is shared.</p>
<p>It is also the study of visual representations of abstract data to reinforce human cognition using common graphics, such as charts, plots, infographics, maps, and even animations. The abstract data include both numerical and non-numerical data, such as text and geographic information.</p>
<p>Furthermore, it is related to infographics and scientific visualization to identify important patterns in the data that can be used for organizational decision making. Visualizing data graphically can reveal trends that otherwise may remain hidden from the naked eye.</p>
<p>In the following is the series of post that focuse plotting with seaborn library in Python, we will learn the most commonly used plots using Seaborn library in Python <span class="citation" data-cites="waskom2021seaborn matplotlib">(Waskom 2021; Bisong and Bisong 2019)</span>. We will also touches on different types of plots using Maplotlib <span class="citation" data-cites="matplotlib">(Bisong and Bisong 2019)</span>, and Pandas <span class="citation" data-cites="pandas">(Betancourt et al. 2019)</span> libraries. In this post we will focus on the distplot.</p>
</section>
<section id="loading-libraries" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries">Loading libraries</h2>
<p>Though most people are familiar with plotting using matplot, as it inherited most of the functions from MatLab. Python has an extremely nady library for data visualiztion called seaborn. The Seaborn library is based on the Matplotlib library. Therefore, you will also need to import the Matplotlib library.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-5"></span>
<span id="cb1-6">sns.set_theme()</span></code></pre></div>
</div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>We are going to use a penguin dataset from palmerpenguins package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We first need to import the dataset from the package where is stored into the R session. let us load the packages that we are glint to use in this post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r number-lines code-with-copy"><code class="sourceCode r"><span id="cb2-1">pengr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb2-2">pengr</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema~  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema~  2007
 4 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3        193    3450 fema~  2007
 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 7 Adelie  Torgersen           38.9          17.8        181    3625 fema~  2007
 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 9 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<p>Once the tibble file is in the environment, we need to convert from tibble data frame into pandas dataframe. Make a copy of pandas dataframe from tibble with the <code>r.</code> function. please note that the conversion of tibble data frame to pandas data frame must be inside the Python chunk as chunk below;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb4-1">pengp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.pengr</span></code></pre></div>
</div>
<p>Let’s use <code>head</code> function to explore the first five rows on the converted penguin pandas data frame</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb5-1">pengp.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  body_mass_g     sex  year
0  Adelie  Torgersen            39.1  ...         3750    male  2007
1  Adelie  Torgersen            39.5  ...         3800  female  2007
2  Adelie  Torgersen            40.3  ...         3250  female  2007
3  Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4  Adelie  Torgersen            36.7  ...         3450  female  2007

[5 rows x 8 columns]</code></pre>
</div>
</div>
<p>The pengp dataset comprise various measurements of three different penguin species — Adelie, Gentoo, and Chinstrap. The dataset contains eight variables – species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, and year. You do not need to download this dataset as it comes with the palmerpenguin library in R. We will use this dataset to plot some of the seaborn plots. Lets begin plotting</p>
<p>Alternatively, you can load the package as</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb7-1"></span>
<span id="cb7-2">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>)</span>
<span id="cb7-3">df.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  species     island  bill_length_mm  ...  flipper_length_mm  body_mass_g     sex
0  Adelie  Torgersen            39.1  ...              181.0       3750.0    Male
1  Adelie  Torgersen            39.5  ...              186.0       3800.0  Female
2  Adelie  Torgersen            40.3  ...              195.0       3250.0  Female
3  Adelie  Torgersen             NaN  ...                NaN          NaN     NaN
4  Adelie  Torgersen            36.7  ...              193.0       3450.0  Female

[5 rows x 7 columns]</code></pre>
</div>
</div>
</section>
<section id="univariable-distribution" class="level2">
<h2 class="anchored" data-anchor-id="univariable-distribution">Univariable distribution</h2>
<p>The distplot, also commonly refers as the distribution plot, is widely used to plot a histogram of data for a specific variable in a dataset. To make this plot seaborn has a dedicated function called <code>displot</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb9-3">sns.displot(pengp.bill_length_mm)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb10-1">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb10-2">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb10-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-6-2.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>The new <code>displot</code> functions support the kernel density estimate line, by passing <code>kde=True</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb11-1"></span>
<span id="cb11-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb11-3">sns.displot(pengp.bill_length_mm, kde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-7-5.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb12-1">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb12-2">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb12-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-7-6.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>To change the distribution from counts to density, we simply parse an argument <code>stat="density"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb13-1"></span>
<span id="cb13-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb13-3">sns.displot(pengp.bill_length_mm, kde <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, stat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"density"</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-8-9.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb14-1">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb14-2">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb14-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-8-10.png" class="img-fluid" width="480"></p>
</div>
</div>
</section>
<section id="kdeplot" class="level2">
<h2 class="anchored" data-anchor-id="kdeplot">kdeplot</h2>
<p>When you want to draw the density plot alone without overlay it to the histogram as presented using the displot function, seaboarn has a <code>kdeplot</code> function</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb15-1"></span>
<span id="cb15-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb15-3">sns.kdeplot(pengp.bill_length_mm)</span>
<span id="cb15-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb15-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>)</span>
<span id="cb15-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-9-13.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>displot still can draw the kde plot, however, you need to parse an argument <code>kind="kde"</code> in displot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb16-3">sns.displot(pengp.bill_length_mm, kind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kde"</span>, rug <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-10-15.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb17-1">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb17-2">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb17-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-10-16.png" class="img-fluid" width="480"></p>
</div>
</div>
<p>If you parse <code>rug = True</code> function, wll add the rug in the plots</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb18-1"></span>
<span id="cb18-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb18-3">sns.displot(pengp.bill_length_mm, kind <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kde"</span>, rug <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-11-19.png" class="img-fluid" width="242"></p>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb19-1">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb19-2">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb19-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-11-20.png" class="img-fluid" width="480"></p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb20-1">aa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pengp[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>]]</span>
<span id="cb20-2"></span>
<span id="cb20-3">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb20-4">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aa)</span>
<span id="cb20-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb20-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb20-7">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-12-23.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Plot conditional distributions with hue mapping of a second variable. Unlike the previous plot, for this kind you need to specify the x-variable and the hue in the dataset;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb21-1"></span>
<span id="cb21-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb21-3">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pengp, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb21-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb21-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb21-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-13-25.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>Stack</code> the conditional distributions by simply parsing argument <code>multiple = "stack"</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb22-1"></span>
<span id="cb22-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb22-3">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pengp, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, multiple <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stack"</span>)</span>
<span id="cb22-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb22-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb22-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-14-27.png" class="img-fluid" width="672"></p>
</div>
</div>
<p><code>multiple = "fill"</code> simply normalize the stacked distribution at each value in the grid</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb23-1"></span>
<span id="cb23-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb23-3">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pengp, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, multiple <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span>)</span>
<span id="cb23-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb23-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb23-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-15-29.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Estimate the cumulative distribution function(s), normalizing each subset:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb24-1"></span>
<span id="cb24-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb24-3"></span>
<span id="cb24-4">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pengp, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>,  cumulative<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, common_norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, common_grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb24-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb24-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb24-7">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-16-31.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="bivariate-distribution" class="level2">
<h2 class="anchored" data-anchor-id="bivariate-distribution">Bivariate distribution</h2>
<p>For bivariates, we are going to use <code>geyser</code> dataset. Old Faithful is a cone geyser in Yellowstone National Park in Wyoming, United States. It is a highly predictable geothermal feature and has erupted every 44 minutes to two hours since 2000. We do not need to download this dataset as it comes with the seaborn package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb25-1">geyser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.load_dataset(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geyser"</span>)</span>
<span id="cb25-2">geyser.head()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   duration  waiting   kind
0     3.600       79   long
1     1.800       54  short
2     3.333       74   long
3     2.283       62  short
4     4.533       85   long</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb27-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb27-2">sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geyser, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>)</span>
<span id="cb27-3">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-18-33.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Map a third variable with a hue semantic to show conditional distributions:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb28-1"></span>
<span id="cb28-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb28-3">sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geyser, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kind"</span>)</span>
<span id="cb28-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-19-35.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Fill the contour by parsing <code>fill = True</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb29-1"></span>
<span id="cb29-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb29-3">sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geyser, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kind"</span>, fill <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb29-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-20-37.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Show fewer contour levels, covering less of the distribution by parsing a <code>levels</code> and <code>thresh</code> functions in the kdeplot:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode numberSource python number-lines code-with-copy"><code class="sourceCode python"><span id="cb30-1"></span>
<span id="cb30-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb30-3">sns.kdeplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>geyser, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"waiting"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duration"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kind"</span>, levels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.2</span>)</span>
<span id="cb30-4">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index_files/figure-html/unnamed-chunk-21-39.png" class="img-fluid" width="672"></p>
</div>
</div>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-pandas" class="csl-entry">
Betancourt, Randy, Sarah Chen, Randy Betancourt, and Sarah Chen. 2019. <span>“Pandas Library.”</span> <em>Python for SAS Users: A SAS-Oriented Introduction to Python</em>, 65–109.
</div>
<div id="ref-matplotlib" class="csl-entry">
Bisong, Ekaba, and Ekaba Bisong. 2019. <span>“Matplotlib and Seaborn.”</span> <em>Building Machine Learning and Deep Learning Models on Google Cloud Platform: A Comprehensive Guide for Beginners</em>, 151–65.
</div>
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
<div id="ref-waskom2021seaborn" class="csl-entry">
Waskom, Michael L. 2021. <span>“Seaborn: Statistical Data Visualization.”</span> <em>Journal of Open Source Software</em> 6 (60): 3021.
</div>
<div id="ref-dataviz" class="csl-entry">
Wikipedia contributors. 2023. <span>“Data and Information Visualization — <span>Wikipedia</span><span>,</span> the Free Encyclopedia.”</span> <a href="https://en.wikipedia.org/w/index.php?title=Data_and_information_visualization&amp;oldid=1137075465">https://en.wikipedia.org/w/index.php?title=Data_and_information_visualization&amp;oldid=1137075465</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <category>Python</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/seabornVisualization/index.html</guid>
  <pubDate>Mon, 20 Feb 2023 21:00:00 GMT</pubDate>
  <media:content url="https://lugoga.github.io/semba-quarto/posts/seabornVisualization/displot.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Multi-lingual: R and Python for Data Science</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/r_python/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>If you work with data science, <code>R</code> and <code>Python</code> must be the two programming languages that you use the most. Both <code>R</code> and <code>Python</code> are quite robust languages and either one of them is actually sufficient to carry out the data analysis task. However, instead of considering them as tools that supplement each other, more often you will find people dealing with data claim one language to be better than the other. Truth be told, <code>R</code> and <code>Python</code> are excellent tools in ther own right but are often conceived as rivals. One major reason for such view lies on the experts. Because data analysts have divided the data science field into camps based on the choice of the programming language they are familiar with.</p>
<p>There major two camps—<em>R camp</em> and <em>Python camp</em>—and history is the testimony that camps can not live in <em>harmony</em>. Members of both camps believe that their choice of language . Honestly, I do not hold to their opinion, but rather wish I have skills for both languages. So, whether you have in R or Python camp, one thing you will notice is that the problem we have in data science is simply that divergence does not lie with the tools but with the people using those tools.</p>
<p>I believe there are few people in the Data Science community who use both R and Python in their analytical workflow. But majority are committed to only one programming language, but wish they had access to some functions from other language. Therefore, there is no reason that hold us to stick using this programming language or the other. Our ultimate goal should be to do better analytics and derive better insights and choice of which programming language to use should not hinder us from reaching our goals.</p>
<p>The questions that always resolute in my mind is whether can we utilize the statistical power of R along with the programming capabilities of Python?. Its undeniable truth that there are definitely some high and low points for both languages and if we can utilize the strength of both, we can end up dong a much better job. Thanks to Kevin Ushey and his colleges <span class="citation" data-cites="reticulate">(2020)</span> for developing a reticulate package. <strong>reticulate</strong> package provides a comprehensive set of tools that allows to work with R and Python in the same environment. The <strong>reticulate</strong> package provide the following facilities;</p>
<ul>
<li><p>Calling Python from R in a variety of ways including <code>rmarkdown</code>, <code>sourcing</code>, <code>Python scripts</code>, importing Python modules and using Python interactively within and R session.</p></li>
<li><p>Translation between R and Python objects—for example <code>r_to_py</code> function allows to construct R to Pandas data frame and <code>py_to_r()</code> function convert python object like data frame, matrix and etc to R</p></li>
<li><p>Flexible binding to different versions of Python including virtual environments and conda environment.</p></li>
</ul>
</section>
<section id="tibble-to-pandas-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="tibble-to-pandas-dataframe">Tibble to Pandas Dataframe</h2>
<p>We are going to use a <code>penguin</code> dataset from <strong>palmerpenguins</strong> package <span class="citation" data-cites="horst2022palmer">(Horst, Hill, and Gorman 2020)</span>. We first need to import the dataset from the package where is stored into the R session. let us load the packages that we are glint to use in this post.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(reticulate)</span></code></pre></div>
</div>
<p>Once we have loaded the package, we then import the dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">peng <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb2-2">peng</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;int&gt;   &lt;int&gt; &lt;fct&gt; &lt;int&gt;
 1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007
 2 Adelie  Torgersen           39.5          17.4        186    3800 fema~  2007
 3 Adelie  Torgersen           40.3          18          195    3250 fema~  2007
 4 Adelie  Torgersen           NA            NA           NA      NA &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3        193    3450 fema~  2007
 6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007
 7 Adelie  Torgersen           38.9          17.8        181    3625 fema~  2007
 8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007
 9 Adelie  Torgersen           34.1          18.1        193    3475 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2        190    4250 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<p>The printed result suggest that this dataset is a <em>tibble</em> format—a modern data frame from the tidyverse ecosystem <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span>. Let’s visualize the dataset with pair plot in <strong>GGally</strong> package <span class="citation" data-cites="ggally">(Schloerke et al. 2020)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">peng <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(sex)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-3">  GGally<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggpairs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">columns =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> sex))</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-ggpair" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-ggpair-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Matrix of numerical variable in the penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>However, our interest in this post is plotting this dataset using python. Therefore, we need to first import three key libraries that we will use throughtout this post. The chunk below highlight these packages and how to import them inside the python chunk.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span></code></pre></div>
</div>
<p>Once the tibble file is in the environment, we need to convert from tibble data frame into pandas dataframe. Make a copy of pandas dataframe from tible with the <code>r.</code> function</p>
<div class="callout-info callout callout-style-default no-icon callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Info
</div>
</div>
<div class="callout-body-container callout-body">
<p>note that conversion from tibble to pandas data frame must be done in the Python chunk and not R chunk</p>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">peng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.peng</span>
<span id="cb6-2">peng</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>       species     island  bill_length_mm  ...  body_mass_g     sex  year
0       Adelie  Torgersen            39.1  ...         3750    male  2007
1       Adelie  Torgersen            39.5  ...         3800  female  2007
2       Adelie  Torgersen            40.3  ...         3250  female  2007
3       Adelie  Torgersen             NaN  ...  -2147483648     NaN  2007
4       Adelie  Torgersen            36.7  ...         3450  female  2007
..         ...        ...             ...  ...          ...     ...   ...
339  Chinstrap      Dream            55.8  ...         4000    male  2009
340  Chinstrap      Dream            43.5  ...         3400  female  2009
341  Chinstrap      Dream            49.6  ...         3775    male  2009
342  Chinstrap      Dream            50.8  ...         4100    male  2009
343  Chinstrap      Dream            50.2  ...         3775  female  2009

[344 rows x 8 columns]</code></pre>
</div>
</div>
</section>
<section id="plotting" class="level2">
<h2 class="anchored" data-anchor-id="plotting">Plotting</h2>
<section id="pairplot" class="level3">
<h3 class="anchored" data-anchor-id="pairplot">Pairplot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb8-2">sns.pairplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-pairplot-1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-pairplot-1.png" class="img-fluid figure-img" width="680"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: The pairplot of penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-pairplot-2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-pairplot-2.png" class="img-fluid figure-img" width="1312"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: The pairplot of penguins dataset</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="scatter-plot" class="level3">
<h3 class="anchored" data-anchor-id="scatter-plot">Scatter plot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"></span>
<span id="cb10-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb10-3"></span>
<span id="cb10-4">sns.scatterplot(</span>
<span id="cb10-5">  data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, </span>
<span id="cb10-6">  x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, </span>
<span id="cb10-7">  y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, </span>
<span id="cb10-8">  hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span></span>
<span id="cb10-9">  )</span>
<span id="cb10-10">  </span>
<span id="cb10-11"></span>
<span id="cb10-12">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Length (mm)"</span>)</span>
<span id="cb10-13">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Depth (mm)"</span>)</span>
<span id="cb10-14">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower right"</span>)</span>
<span id="cb10-15">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-scatter" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-scatter-5.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;4: Scatterplot of length and depth of penguins</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="histogram" class="level3">
<h3 class="anchored" data-anchor-id="histogram">Histogram</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb11-2">sns.histplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>)</span>
<span id="cb11-3">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill depth (mm)"</span>)</span>
<span id="cb11-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb11-5">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-hist-7.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;5: Histogram of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb12-2">sns.histplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dream"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dream"</span>)</span>
<span id="cb12-3">sns.histplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Biscoe"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkorchid"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Biscoe"</span>)</span>
<span id="cb12-4">sns.histplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.island <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Torgersen"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Torgersen"</span>)</span>
<span id="cb12-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill depth (mm)"</span>)</span>
<span id="cb12-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>)</span>
<span id="cb12-7">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper right"</span>)</span>
<span id="cb12-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist-mult" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-hist-mult-9.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;6: Histogram of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>##3 Density</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb13-2">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, shade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>)</span>
<span id="cb13-3">plt.axvline(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">43.40</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"k"</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--"</span>)</span>
<span id="cb13-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>)</span>
<span id="cb13-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb13-6">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-dens" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-dens-11.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;7: Density distribution of of bill depth</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>The difference of bill length among the three species is interesting. Let’s look at the density plots of these species:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb14-2">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span>, shade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>)</span>
<span id="cb14-3">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chinstrap"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chinstrap"</span>, shade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>)</span>
<span id="cb14-4">sns.kdeplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng[peng.species <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gentoo"</span>], x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gentoo"</span>, shade <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>)</span>
<span id="cb14-5">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper right"</span>)</span>
<span id="cb14-6">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill length (mm)"</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-density-mul" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-density-mul-13.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;8: Density plot of bill length by species</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="boxplot" class="level3">
<h3 class="anchored" data-anchor-id="boxplot">Boxplot</h3>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"></span>
<span id="cb15-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb15-3">sns.boxplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb15-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb15-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill depth (mm)"</span>)</span>
<span id="cb15-6">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower right"</span>)</span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb15-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-box" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-box-15.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;9: Boxplot of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb16-3">sns.violinplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb16-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb16-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill depth (mm)"</span>)</span>
<span id="cb16-6">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower right"</span>)</span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb16-8">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-vio" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-vio-17.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;10: Violin plots of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb17-3">sns.violinplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb17-4">sns.boxplot(data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peng, x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, hue <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)</span>
<span id="cb17-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb17-6">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill depth (mm)"</span>)</span>
<span id="cb17-7">plt.legend(loc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower right"</span>)</span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plt.gca().legend_.remove() # uncomment to remove legend</span></span>
<span id="cb17-9">plt.show()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-vio-box" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/r_python/index_files/figure-html/fig-vio-box-19.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;11: Violin and Boxplot of bill depth by island and species</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="pandas-dataframe-to-tibble" class="level2">
<h2 class="anchored" data-anchor-id="pandas-dataframe-to-tibble">Pandas Dataframe to Tibble</h2>
<p>The power of multilingual is clearly demonstrated with Rstudio, which allows you to swap dataset between R and python. In the previous section we created a <code>peng</code> dataset in python from R. In this session we are going to use this python dataset and convert it back to R. A <code>py</code> function from <strong>reticulate</strong> package is used as the chunk below illustrates:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">peng.r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> reticulate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>py<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>peng</span>
<span id="cb18-2">peng.r <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 344 x 8
   species island    bill_length_mm bill_depth_mm flipper_~1 body_~2 sex    year
   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt; &lt;fct&gt; &lt;dbl&gt;
 1 Adelie  Torgersen           39.1          18.7     1.81e2  3.75e3 male   2007
 2 Adelie  Torgersen           39.5          17.4     1.86e2  3.8 e3 fema~  2007
 3 Adelie  Torgersen           40.3          18       1.95e2  3.25e3 fema~  2007
 4 Adelie  Torgersen           NA            NA      -2.15e9 -2.15e9 &lt;NA&gt;   2007
 5 Adelie  Torgersen           36.7          19.3     1.93e2  3.45e3 fema~  2007
 6 Adelie  Torgersen           39.3          20.6     1.9 e2  3.65e3 male   2007
 7 Adelie  Torgersen           38.9          17.8     1.81e2  3.62e3 fema~  2007
 8 Adelie  Torgersen           39.2          19.6     1.95e2  4.68e3 male   2007
 9 Adelie  Torgersen           34.1          18.1     1.93e2  3.48e3 &lt;NA&gt;   2007
10 Adelie  Torgersen           42            20.2     1.9 e2  4.25e3 &lt;NA&gt;   2007
# ... with 334 more rows, and abbreviated variable names 1: flipper_length_mm,
#   2: body_mass_g</code></pre>
</div>
</div>
<div class="callout-info callout callout-style-default no-icon callout-captioned">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon no-icon"></i>
</div>
<div class="callout-caption-container flex-fill">
Info
</div>
</div>
<div class="callout-body-container callout-body">
<p>note that conversion from pandas to tibble data frame must be done in the R chunk and not Python chunk</p>
</div>
</div>
</section>
<section id="cited-references" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited references</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-horst2022palmer" class="csl-entry">
Horst, Allison Marie, Alison Presmanes Hill, and Kristen B Gorman. 2020. <em>Palmerpenguins: Palmer Archipelago (Antarctica) Penguin Data</em>. <a href="https://doi.org/10.5281/zenodo.3960218">https://doi.org/10.5281/zenodo.3960218</a>.
</div>
<div id="ref-ggally" class="csl-entry">
Schloerke, Barret, Jason Crowley, Di Cook, Francois Briatte, Moritz Marbach, Edwin Thoen, Amos Elberg, and Joseph Larmarange. 2020. <em>GGally: Extension to ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=GGally">https://CRAN.R-project.org/package=GGally</a>.
</div>
<div id="ref-reticulate" class="csl-entry">
Ushey, Kevin, JJ Allaire, and Yuan Tang. 2020. <em>Reticulate: Interface to ’Python’</em>. <a href="https://CRAN.R-project.org/package=reticulate">https://CRAN.R-project.org/package=reticulate</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/r_python/index.html</guid>
  <pubDate>Sun, 19 Feb 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Main and Inset maps with R</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/inset_main_map/index.html</link>
  <description><![CDATA[ 



<section id="introduction" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="introduction">Introduction</h3>
<p>In this post, We learn how we can make publication quality inset maps in R using <code>ggplot2</code> package <span class="citation" data-cites="ggplot">(Wickham 2016)</span>. When publishing scientific research in journals or presenting research work at a conference, showing maps of data collection sites or experimental locations is one of the key visualization elements. Maps of study sites or sampling locations can help the audience and readers to fathom the data in a better way. Mapping sounds fancy, but it needs substantial training and skill set to make high-quality maps that are reader-friendly and visually aesthetic.</p>
<p>Sometimes, the study sites are more dispersed and are easy to visualize in large geographic areas. However, in some cases, study sites are clustered, which makes it hard to show them on a broader scale. In that case, inset maps help us show the locations with reference to familiar geographical regions. An inset map is a smaller map featured on the same page as the main map. Traditionally, inset maps are shown at a larger scale (smaller area) than the main map. Often, an inset map is used as a locator map that shows the area of the main map in a broader, more familiar geographical frame of reference.</p>
</section>
<section id="spatial-vector-data-storage" class="level3">
<h3 class="anchored" data-anchor-id="spatial-vector-data-storage">Spatial Vector Data Storage</h3>
<p>If you have been using the vector data and doing spatial analysis, you know shapefile. Shapefile is the most commonly used vector data formats to store data and carry out any spatial analysis.</p>
</section>
<section id="characteristics-of-a-shapefile" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="characteristics-of-a-shapefile">Characteristics of a shapefile</h3>
<p>Shapefiles are vector data storage models for storing feature classes composed of points, lines and polygons, but never a mixture. It stores information of the location, shape and attributes of geographical features. Each item in a shapefile has attributes that describe it composed of rows, called records and columns called fields and can also store multipart features, in which a single feature includes multiple objects which includes</p>
<ul>
<li><strong>.shp</strong> file stores coordinate data</li>
<li><strong>.dbf</strong> file stores attribute data</li>
<li><strong>.shx</strong> file stores a spatial index that speeds drawing and analysis</li>
<li><strong>.prj</strong> file stores projection information</li>
<li><strong>.avl</strong> file stores legend</li>
<li><strong>.xml</strong> file contains metadata</li>
</ul>
</section>
<section id="characteristics-of-a-shapefile-1" class="level3">
<h3 class="anchored" data-anchor-id="characteristics-of-a-shapefile-1">Characteristics of a shapefile</h3>
<ul>
<li>Takes up more storage space on your system</li>
<li>Shapefiles have a minimum size of 2GB</li>
<li>Do not support names in fields longer than 10 characters</li>
<li>A shapefile cannot have more than one geometry type in a file.</li>
<li>Cannot store data and time in the same field</li>
<li>Do not support raster files</li>
<li>Do not store NULL values in a field; when a value is NULL, a shapefile will use 0 instead.</li>
</ul>
<p>But, shapefile has a lot of disadvantages when you wish to scale your work and build integrated &amp; automated workflows for large-scale deployments. Geopackage format offers a variety of features in this regard. And that’s why you need to use Geopackage files instead of shapefile. Let’s dive deeper into the details.</p>
</section>
<section id="geopackage" class="level3">
<h3 class="anchored" data-anchor-id="geopackage">Geopackage</h3>
<p>A Geopackage is platform-independent format for storing and transferring geospatial information. It is a SQLite based standard format designed for stand-alone databases that holds both raster data and multiple vector data layers in a single file and can be accessible by non-GIS software.</p>
</section>
<section id="characteristics-of-a-geopackage" class="level3">
<h3 class="anchored" data-anchor-id="characteristics-of-a-geopackage">Characteristics of a Geopackage</h3>
<ul>
<li>Geopackages are open source, SQLite based database</li>
<li>No limitation on the file size and can handle large number of features</li>
<li>Can store both raster as well as vector data layers</li>
<li>A single Geopackage file can have multiple vector layers with each layer having a different geometry type.</li>
</ul>
</section>
<section id="why-choose-geopackages-and-not-shapefiles" class="level3">
<h3 class="anchored" data-anchor-id="why-choose-geopackages-and-not-shapefiles">Why choose Geopackages and not Shapefiles?</h3>
<ol type="1">
<li><p>Shapefile is a multi-file format with minimum of 3 files and several other attached files with different extensions. Sharing a shapefile with someone would be complicated as all the other files attached will also have to be shared. Whereas, Geopackages includes all the information of the layer in a file and is easier to transfer or share.</p></li>
<li><p>Compared to shapefiles, the column headers in a geopackage can be full names and right by providing the correct context for each column. A shapefile can only have 10 characters to define the column header.</p></li>
<li><p>Geopackages run faster on algorithm outputs compared to shapefiles.</p></li>
<li><p>In a geopackage, there is no limit on the file size and can handle large number of features in a smaller file size. A shapefile can handle maximum size of 2 GB and cannot export a vector layer with more features.</p></li>
<li><p>A Geopackage stores both raster and vector files whereas, shapefiles can store only vector files.</p></li>
<li><p>Geopackages are lightweight and compatible across environments specially in mobile devices. It is 1.1-1.3x lighter in file size compared to shapefiles.</p></li>
</ol>
</section>
<section id="load-libraries" class="level3">
<h3 class="anchored" data-anchor-id="load-libraries">Load libraries</h3>
<p>Several packages in R are dealing with spatial data, but in this post we are going to use funtions from <strong>tidyverse</strong> <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span> and <strong>sf</strong> <span class="citation" data-cites="sf">(Pebesma 2018)</span> packages. We can load these packages with a <code>library</code> function as as;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span></code></pre></div>
</div>
</section>
<section id="load-file" class="level3">
<h3 class="anchored" data-anchor-id="load-file">Load file</h3>
<p>We first need to import spatial data into the session. For this case we are going to load the boundary layer of Africa. The file has boundary for 67 polygons representing feature in Africa. We can load the file into the session using <code>st_read</code> function from <strong>sf</strong> package <span class="citation" data-cites="sf">(Pebesma 2018)</span>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">africa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/africa.gpkg"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>Next I’ll extract the polygon for WIO region countries from from the <code>Africa</code> package using the <code>filter</code> function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">wio <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> africa  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span>  </span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb3-3">    country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tanzania"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Kenya"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mozambique"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"South Africa"</span>, </span>
<span id="cb3-4">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Somalia"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Madagascar"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Seychelles"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reunion"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mauritius"</span>))</span>
<span id="cb3-5"></span>
<span id="cb3-6">wio.point.country <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> wio <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> wior<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon_tb</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">distinct</span>(country, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">.keep_all =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
</div>
<p>Then we load study points that were sampled off the coast of Madagascar.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">sampling.points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/madagascar_points.gpkg"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(state <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ocean"</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4">madagascar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> wio <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(country <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Madagascar"</span>)</span></code></pre></div>
</div>
</section>
<section id="focus-map" class="level2">
<h2 class="anchored" data-anchor-id="focus-map">Focus Map</h2>
<p>Now, I’ll plot a focused map of Madagascar. We need to define the geographical extent of the area. For that purpose, we first need to identify the extent of the study sites and we can do that using <code>extent</code> function from **sf package;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">madagascar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_bbox</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     xmin      ymin      xmax      ymax 
 42.71862 -25.60895  50.48378 -11.94543 </code></pre>
</div>
</div>
<p>The printed results indicates tha maxima and minima of longitude and latitude, which define the geographical extent of the area. Using the <code>min</code> and <code>max</code> values of coordinates from the previous map, we can draw a polygon over the study sites and see if this extent can best visualize the data.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">map.site <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-2">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> madagascar, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cyan4"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> sampling.points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-4">  ggsci<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_lancet</span>()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">43</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>))</span>
<span id="cb7-8"></span>
<span id="cb7-9">map.site</span></code></pre></div>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/focus-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Sampling points in the coastal waters of Madagascar Island</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>As you can see, the study sites are located on the northern part of Madagascar Island. However, to make a better sense of the study locations with reference to WIO region, we need to plot them on a focused scale.</p>
</section>
<section id="add-map-elements" class="level2">
<h2 class="anchored" data-anchor-id="add-map-elements">Add Map elements</h2>
<p>Professional maps also include some elements like <code>North Arrow</code> and <code>scale</code> etc. We’ll add these components to our map as well. Besides that, I’ll also fill the non-land area with <code>lightblue</code> color for reference and distinction respectively Figure&nbsp;1.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">map.site <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> map.site <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-2">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-3">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_north_arrow</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tr"</span>, </span>
<span id="cb8-4">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),  </span>
<span id="cb8-5">                                    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb8-6">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_scale</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">location =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"br"</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8">map.site</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-focus1" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-focus1-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: Sampling points in the coastal waters of Madagascar Island</figcaption><p></p>
</figure>
</div>
</div>
</div>
</section>
<section id="inset-map" class="level2">
<h2 class="anchored" data-anchor-id="inset-map">Inset Map</h2>
<p>Now, I’ll create a full-scale map of WIO region with a red polygon showing the extent of study sites and the focused map. The code below produce Figure&nbsp;2;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">inset.map <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-2">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> africa, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey90"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-3">  ggspatial<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layer_spatial</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey60"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ivory"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># geom_sf_text(data = wio, aes(label = country))+</span></span>
<span id="cb9-5">  ggrepel<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text_repel</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> wio.point.country, </span>
<span id="cb9-6">                           <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> lon, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> lat, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> country), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">base_size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>())<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_rect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">43</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">51</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>), </span>
<span id="cb9-10">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_test</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb9-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-14">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-15">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.ticks.length =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unit</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>),</span>
<span id="cb9-16">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb9-17">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.margin =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">margin</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cm"</span>),</span>
<span id="cb9-18">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">panel.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightblue"</span>))</span>
<span id="cb9-19"></span>
<span id="cb9-20">inset.map</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-inset" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-inset-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;2: An inset map of the WIO region</figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>This version looks better compared to the previous one. However, we need to add some information to give it a reference.</p>
</section>
<section id="final-map" class="level2">
<h2 class="anchored" data-anchor-id="final-map">Final Map</h2>
<p>Now, to combine both maps where the map of WIO region is inset on the upper left corner we use the function from <strong>cowplot</strong> package. a <code>draw_plot</code> function allow to places a plot somewhere onto the drawing canvas that is established using <code>ggdraw</code> function also from <strong>cowplot</strong> package <span class="citation" data-cites="cowplot">(Wilke 2018)</span>. By default, coordinates run from 0 to 1, and the point (0, 0) is in the lower left corner of the canvas. The function also allows us to specify the size of the inset map using the <code>width</code> and <code>height</code> functions.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggdraw</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> map.site) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb10-2">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">draw_plot</span>(inset.map, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-map2" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/inset_main_map/index_files/figure-html/fig-map2-1.png" class="img-fluid figure-img" width="576"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;3: Map of the northwest side of Madagascar. An inset map indicate the location of the study area in the Western Indian Ocean region</figcaption><p></p>
</figure>
</div>
</div>
</div>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<p>Therefore , a final map shown in Figure&nbsp;3 shows the locations of study sites with reference to the country and provinces and is more professional.</p>
</section>
</section>

<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section id="last-updated" class="level2 appendix"><h2 class="quarto-appendix-heading">Last updated</h2><div class="quarto-appendix-contents">

<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>[1] "16 February 2023"</code></pre>
</div>
</div>
</div></section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-sf" class="csl-entry">
Pebesma, Edzer. 2018. <span>“<span class="nocase">Simple Features for R: Standardized Support for Spatial Vector Data</span>.”</span> <em><span>The R Journal</span></em> 10 (1): 439–46. <a href="https://doi.org/10.32614/RJ-2018-009">https://doi.org/10.32614/RJ-2018-009</a>.
</div>
<div id="ref-ggplot" class="csl-entry">
Wickham, Hadley. 2016. <em>Ggplot2: Elegant Graphics for Data Analysis</em>. Springer-Verlag New York. <a href="https://ggplot2.tidyverse.org">https://ggplot2.tidyverse.org</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
<div id="ref-cowplot" class="csl-entry">
Wilke, Claus O. 2018. <em>Cowplot: Streamlined Plot Theme and Plot Annotations for ’Ggplot2’</em>. <a href="https://CRAN.R-project.org/package=cowplot">https://CRAN.R-project.org/package=cowplot</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/inset_main_map/index.html</guid>
  <pubDate>Sat, 18 Feb 2023 21:00:00 GMT</pubDate>
</item>
<item>
  <title>Inferential statistics in R:ttest</title>
  <dc:creator>Masumbuko Semba</dc:creator>
  <link>https://lugoga.github.io/semba-quarto/posts/ttest/index.html</link>
  <description><![CDATA[ 



<p>A formal statistical test called a hypothesis test is used to confirm or disprove a statistical hypothesis. The following R hypothesis tests are demonstrated in this course.</p>
<ul>
<li><em>T-test with one sample</em></li>
<li><em>T-Test of two samples</em></li>
<li><em>T-test for paired samples</em></li>
</ul>
<p>Each type of test can be run using the R function <code>t.test()</code>.The function comes with the following arguments;</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb1-2">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"two-sided"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"less"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greater"</span>),</span>
<span id="cb1-3">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paired =</span>  <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var.equal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, ...)</span></code></pre></div>
<p>where: <img src="https://latex.codecogs.com/png.latex?x"> and <img src="https://latex.codecogs.com/png.latex?y"> are the vectors of data elements <img src="https://latex.codecogs.com/png.latex?alternative">: the stated alternative hypothesis <img src="https://latex.codecogs.com/png.latex?mu">: the true value of the mean <img src="https://latex.codecogs.com/png.latex?paired">: whether or not to run a paired test <img src="https://latex.codecogs.com/png.latex?var.equal">: whether to assume that the vaarinaces between the values in the vector are equal <img src="https://latex.codecogs.com/png.latex?con.level">: The confidence level to use</p>
<p>Before we proceed, we need functions from various packages and accessing these functions when needed may render this task tedious. Therefore, lets load the packages in advance. These packages include <strong>tidyverse</strong> <span class="citation" data-cites="tidyverse">(Wickham and Wickham 2017)</span>, <strong>patchwork</strong><span class="citation" data-cites="patchwork">(Pedersen 2020)</span> and <strong>magrittr</strong><span class="citation" data-cites="magrittr">(Bache and Wickham 2014)</span></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(tidyverse)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(patchwork)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span>(magrittr)</span></code></pre></div>
</div>
<section id="one-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="one-sample-t-test">One sample t-test</h2>
<p>One sample t-test is widely used in statistical analysis to determine whether the population’s mean is equal to given mean value. The given mean value can be the sample mean for instance. A <code>t.test</code> function in R is used to test one sample parametric test. Let’s consider a situation where we want to determine whether the total length of Nile perch collected during a survey conducted in December 2022 is not equal to a long term mean length of 61cm. Let’s generate a sample by creating a data frame that contain sample of 350 individual of nile perch. Using a <code>run_if</code> function help us simulate weight of nile perch once given the minimum and maximum values. The code for simulating the total length is highlighted in the code chunk below;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sample <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>,</span>
<span id="cb3-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tl =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runif</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">48</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>)</span>
<span id="cb3-4">  )</span>
<span id="cb3-5"></span>
<span id="cb3-6">sample</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 350 x 2
      id    tl
   &lt;int&gt; &lt;dbl&gt;
 1     1  61.3
 2     2  49.7
 3     3  50.4
 4     4  48.5
 5     5  54.9
 6     6  57.3
 7     7  60.6
 8     8  61.9
 9     9  50.4
10    10  49.0
# ... with 340 more rows</code></pre>
</div>
</div>
<p>Let’s use a histogram to check the distribution of the data and add a vertical line of the population mean to identify whether the data is leading away is around the population</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> tl)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ivory"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cyan4"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_vline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xintercept =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linetype =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total length (cm.)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<div id="fig-hist" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ttest/index_files/figure-html/fig-hist-1.png" class="img-fluid figure-img" width="672"></p>
<p></p><figcaption class="figure-caption">Figure&nbsp;1: <strong>?(caption)</strong></figcaption><p></p>
</figure>
</div>
</div>
</div>
<p>Now we notice that the position of the population mean of the sample dataset, we can not test to determine whether the sample mean total length is lower than the sample mean</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span></span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> tl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"less"</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    One Sample t-test

data:  tl
t = -17.907, df = 349, p-value &lt; 2.2e-16
alternative hypothesis: true mean is less than 61
95 percent confidence interval:
     -Inf 56.50406
sample estimates:
mean of x 
 56.04797 </code></pre>
</div>
</div>
<p>The one sample t-test determine the whether the sample mean total length of nile perch was less than the long-term mean length suggest that the sample total length (56.68cm) was less than the population mean (61cm) and the difference was statistically significant (t(349) = -18.19, p &lt; 0.001). Lets try change the alternative to <code>greater</code></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">sample <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span></span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> tl, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mu =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"greater"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    One Sample t-test

data:  tl
t = -17.907, df = 349, p-value = 1
alternative hypothesis: true mean is greater than 61
95 percent confidence interval:
 55.59189      Inf
sample estimates:
mean of x 
 56.04797 </code></pre>
</div>
</div>
<p>Notice that the test is not statistically significant (t(349) = 18.91, p = 1) because the population mean (61cm) is greater than the sample mean (56.68).</p>
</section>
<section id="two-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="two-sample-t-test">Two Sample t-test</h2>
<p>A two sample t-test is used to determine whether the means of two independent samples are equal. Lets consider that two independent survey to measure the stock of nile perch was conducted in two independent period. The first survey was conducted in June 2001 and the subsequency survey was conducted in July 2021. The two survey were conducted during the cool and dry season but with a 20 years time difference. Therefore, we want to determine whether the mean sample of nile perch collected in 2021 is smaller than the those sampled in 2001</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1254</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3">sample2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb10-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>,</span>
<span id="cb10-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tl21 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>),</span>
<span id="cb10-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tl01 =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">350</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">61</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb10-7">  )</span>
<span id="cb10-8"></span>
<span id="cb10-9">sample2</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 350 x 3
      id  tl21  tl01
   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;
 1     1 41.7   54.4
 2     2 68.4   52.2
 3     3 47.1   69.1
 4     4 38.7   43.2
 5     5  3.41  46.9
 6     6 42.6   64.3
 7     7 67.3   70.4
 8     8 65.7   72.9
 9     9 26.3   25.0
10    10 56.2   64.5
# ... with 340 more rows</code></pre>
</div>
</div>
<p>Once we have created a dataframe with values for the two sampling survey, it’s a good practice to visualize the value to see the patterns.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">sample2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> tl21<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>tl01) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> value, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> name))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_density</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"identity"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_brewer</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Surveys"</span> ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set2"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2001"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2021"</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total length (cm)"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Density"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span></code></pre></div>
<div class="cell-output-display">
<p><img src="https://lugoga.github.io/semba-quarto/posts/ttest/index_files/figure-html/unnamed-chunk-7-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>We notice from a figure above a slight difference in the density shape with the median value for 2001 far east from the 2021, suggesting the size of 2001 is relatively higher than 2001. Let’s perform two sample t-test to determine whether that difference is significant;</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">sample2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span></span>
<span id="cb13-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> tl21, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> tl01, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alternative =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"less"</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Welch Two Sample t-test

data:  tl21 and tl01
t = -6.4619, df = 690.02, p-value = 9.771e-11
alternative hypothesis: true difference in means is less than 0
95 percent confidence interval:
      -Inf -6.905485
sample estimates:
mean of x mean of y 
 51.80015  61.06788 </code></pre>
</div>
</div>
<p>The output display the Welch Two Sample t-test to determine whether the total length of nile perch sampled in 2021 is less than those of 2001. The result suggest that the sample mean in 2021 was 51.8 cm which is less than 61.07 cm of nile perch sampled in 2001. The result suggest that the 2021 nile perch were small in size than those of 2001, and the difference was significant (t(690) = 6.46, p &lt; 0.01).</p>
</section>
<section id="paired-sample-t-test" class="level2">
<h2 class="anchored" data-anchor-id="paired-sample-t-test">Paired sample t-test</h2>
<p>This test is normally used to determine whether the values in paired dataset have different mean. For instance, the weight in nile perch measured after captured and kept in cage for three months and measured again. Therefore, the nile perch individuals were measured before taken to cage and then measured after three months. This means we have measurement before and after. Let’s create a dataframe and simulate before and after total length of nile perch.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1254</span>)</span>
<span id="cb15-2"></span>
<span id="cb15-3">sample3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tibble</span>(</span>
<span id="cb15-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb15-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">before =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>),</span>
<span id="cb15-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">after =</span> before <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>()</span>
<span id="cb15-7">  )</span>
<span id="cb15-8"></span>
<span id="cb15-9">sample3</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code># A tibble: 50 x 3
      id before after
   &lt;int&gt;  &lt;dbl&gt; &lt;dbl&gt;
 1     1   45.1  46.2
 2     2   62.9  64.7
 3     3   48.7  49.3
 4     4   43.2  43.6
 5     5   19.6  20.4
 6     6   45.7  46.1
 7     7   62.2  63.2
 8     8   61.1  62.5
 9     9   34.9  35.2
10    10   54.8  56.0
# ... with 40 more rows</code></pre>
</div>
</div>
<p>Then we perform paired sample t-test</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sample3 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span></span>
<span id="cb17-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> before, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> after, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">paired =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Paired t-test

data:  before and after
t = -11.171, df = 49, p-value = 4.484e-15
alternative hypothesis: true difference in means is not equal to 0
95 percent confidence interval:
 -0.9512640 -0.6612062
sample estimates:
mean of the differences 
             -0.8062351 </code></pre>
</div>
</div>
<p>Since the p &lt; 0.05, we reject the null hypothesis that the mean total length before and after is significant. Therefore, fattening nile perch in cage for three months increased the total length and that increase is significant (t(49) = -11.17, p &lt; 0.001)</p>
</section>
<section id="cited-materials" class="level2">




</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Cited Materials</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-magrittr" class="csl-entry">
Bache, Stefan Milton, and Hadley Wickham. 2014. <em>Magrittr: A Forward-Pipe Operator for r</em>. <a href="https://CRAN.R-project.org/package=magrittr">https://CRAN.R-project.org/package=magrittr</a>.
</div>
<div id="ref-patchwork" class="csl-entry">
Pedersen, Thomas Lin. 2020. <em>Patchwork: The Composer of Plots</em>. <a href="https://CRAN.R-project.org/package=patchwork">https://CRAN.R-project.org/package=patchwork</a>.
</div>
<div id="ref-tidyverse" class="csl-entry">
Wickham, Hadley, and Maintainer Hadley Wickham. 2017. <em>Tidyverse: Easily Install and Load the ’Tidyverse’</em>. <a href="https://CRAN.R-project.org/package=tidyverse">https://CRAN.R-project.org/package=tidyverse</a>.
</div>
</div></section></div> ]]></description>
  <category>Analysis</category>
  <category>Visualization</category>
  <guid>https://lugoga.github.io/semba-quarto/posts/ttest/index.html</guid>
  <pubDate>Tue, 14 Feb 2023 21:00:00 GMT</pubDate>
</item>
</channel>
</rss>
