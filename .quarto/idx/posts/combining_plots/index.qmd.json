{"title":"Combining plots in R","markdown":{"yaml":{"title":"Combining plots in R","author":[{"name":"Masumbuko Semba","url":"https://semba.netlify.app","orcid":"0000-0002-5002-9747","affiliation":"Nelson Mandela African Institution of Science and Technology","affiliation-url":"https://semba.netlify.app/"},{"name":"Nyamisi Peter","url":"https://nyamisi.netlify.app","orcid":"0000-0002-4376-2588","affiliation":"School of Aquatic Science and Fisheries Technology (SOAF)","affiliation-url":"https://nyamisi.netlify.app/"}],"date":"2023-02-04","categories":["Analysis","Visualization"],"image":"combine_plot.png","draft":false,"bibliography":"../blog.bib","execute":{"warning":false}},"headingText":"tuna = tibble(","containsRefs":false,"markdown":"\n\n\nThe ggplot2 package doesn’t provide a function to arrange multiple plots in a single figure [@ggplot]. Still, some packages allow combining multiple plots into a single figure with custom layouts, width, and height, such as cowplot [@cowplot], gridExtra, and patchwork [@patchwork]. In this post we are going to use several packages, let'us load them in our session\n\n```{r}\nrequire(tidyverse)\nrequire(patchwork)\nrequire(cowplot)\n```\n\nSample datasets\n\n```{r}\n#   tl = runif(n = 120, min = 30, max = 120),\n#   seasons = rep(c(\"Northeast\", \"Southeast\", \"Inter\"), each = 40)\n# )\n\ntuna = tibble(\n  tl = c(rnorm(n = 40, mean = 80, sd = 30), \n            rnorm(n = 40, mean = 61,10),\n            rnorm(n = 40, mean = 96, 25)),\n  seasons = rep(c(\"Northeast\", \"Southeast\", \"Inter\"), each = 40)\n)\n```\n\n```{r}\nridges = tuna %>% \n  ggplot() +\n  ggridges::geom_density_ridges(aes(x = tl, y = seasons, fill = seasons), position = \"identity\", alpha = .6)+\n  theme(legend.position = \"none\")\n\nridges\n```\n\n```{r}\nbox = tuna %>% \n  ggplot(aes(x = seasons, y = tl)) +\n  geom_boxplot(fill = \"cyan4\")\n\n  box\n```\n\n\n```{r}\nhist = tuna %>% \n  ggplot(aes(x = tl, fill = seasons, color = seasons)) +\n  geom_histogram(bins = 8,position = \"identity\", alpha = .4)\n\nhist\n```\n\n\n## gridExtra\nThe gridExtra package provides the `grid.arrange` function to combine several plots on a single figure.\n\n```{r}\ngridExtra::grid.arrange(hist, box, ridges)\n```\n\nWe can also specify the number of rows with nrow, the number of columns with ncol, and the sizes with widths and heights, and also we can add labels at the top, bottom, left, and right of the figures.\n\n```{r}\ngridExtra::grid.arrange(hist, box, ridges, nrow = 2, top = \"Top Panel\", bottom = \"Bottom Panel\")\n```\n\n# Patchwork\n**patchwork** is designed to combine ggplot2 plots into the same figure easily. You only need to call the package in the session and then do the manipulation\n\nFor instance, we combine plots using `+` operator\n\n```{r}\nhist + box + ridges\n```\n\nThe | operator places plots in a row. This operator is similar to + when you have two plots but | will place all plots in a single row while + will try to create a square layout if possible.\n\n\n```{r}\nhist | ridges\n```\n\nif we want to arrange plots along a column (stack), then we use the `/` operator\n\n```{r}\nhist / ridges\n```\n\nWe can create complex layouts. The | and / operators can be used to create complex layouts combining plots. In the following example, we are creating a layout with two plots at the top and one wider at the bottom.\n\n\n```{r}\n(hist / ridges)| box\n```\n\nSimilary, we can swap the operator and see the different of the figure below as compared to the previous one\n\n```{r}\n(hist | ridges)/ box\n```\n\n\nYou can add a title, subtitle, and captions to all plots with the plot_annotation function.\n\n\n```{r}\n(hist | ridges)/ box + plot_annotation(tag_levels = \"A\")\n```\n\nThe labels can be customized with the tag_prefix, tag_suffix, and tag_sep arguments.\n\n\n\n```{r}\n(hist | ridges)/ box + plot_annotation(tag_levels = \"A\", tag_prefix = \"Plot \")\n```\n\n      \n```{r}\nbox +geom_jitter(color = \"cyan3\")\n```\n \n patchwork also provides the & operator to modify all the plots at the same time to set the same theme for all plots at the same time.\n\n```{r}\n(hist | box)/ ridges   & theme_classic()\n```                                       \n\nIf you want to label each plot individually you can make use of the labels argument of the function, where you can specify a vector of labels or use the “A” or “a” keywords for automatic labels in uppercase or lowercase, respectively. The function also provides several arguments to customize the style of the texts.\n\n```{r}\nplot_grid(hist, box, ridges, labels = c(\"A\", \"B\", \"C\"), label_fontfamily = \"serif\", label_fontface = \"bold\", label_colour = \"dodgerblue2\")\n```\nWith cowplot you can also create more complex layouts combining `plot_grid` functions, as shown in the example below, where we are creating a layout with two plots at the bottom and one at the top.\n\n\n```{r}\nplot_grid(plot_grid(hist, ridges), box, rows = 2)\n```\n                \n\n\n## Cited Materials\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"include-after-body":["../../footer.html"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","comments":{"giscus":{"repo":"lugoga/semba-quarto"}},"theme":"solar","title-block-banner":false,"page-layout":"article","title":"Combining plots in R","author":[{"name":"Masumbuko Semba","url":"https://semba.netlify.app","orcid":"0000-0002-5002-9747","affiliation":"Nelson Mandela African Institution of Science and Technology","affiliation-url":"https://semba.netlify.app/"},{"name":"Nyamisi Peter","url":"https://nyamisi.netlify.app","orcid":"0000-0002-4376-2588","affiliation":"School of Aquatic Science and Fisheries Technology (SOAF)","affiliation-url":"https://nyamisi.netlify.app/"}],"date":"2023-02-04","categories":["Analysis","Visualization"],"image":"combine_plot.png","draft":false,"bibliography":["../blog.bib"]},"extensions":{"book":{"multiFile":true}}}}}